{
  "openapi": "3.0.0",
  "info": {
    "title": "Checkout API",
    "description": "",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://{accountName}.{environment}.com.br",
      "description": "VTEX server url"
    }
  ],
  "paths": {
    "/api/checkout/pub/orderforms/simulation": {
      "post": {
        "tags": [
          "OrderForm"
        ],
        "summary": "OrderForm Simulation",
        "description": "\r\n\r\nThe orderForm simulation endpoint is used to simulate a cart in VTEX Checkout.\r\n\r\nIt receives an **SKU ID**, the **quantity** of items in the cart, the ID of the **Seller** and the **country** in ISO ALPHA-3 Code (eg. BRA, USA, ARG).\r\n\r\nIt sends back all information about the cart, such as the selling price of each item, rates and benefits data, payment and logistics info.\r\n\r\nThis is useful whenever you need to know the avaiability of fulfilling an order for a specific cart setting, since the API response will let you know the updated price, inventory and shipping data.\r\n",
        "operationId": "OrderFormSimulation",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderFormSimulationRequest"
              },
              "example": {
                "items": [
                  {
                    "id": "{{skuId}}",
                    "quantity": 1,
                    "seller": "1"
                  }
                ],
                "country": "{{countryCode-ISO-3-digits}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/items/removeAll": {
      "post": {
        "tags": [
          "OrderForm"
        ],
        "summary": "Remove all items",
        "description": "\r\nThis call removes all items from a given cart, leaving it empty.\r\n\r\nYou **don't** need to send a body in this request.\r\n\r\nThe ID of the specific cart whose items you want to remove is passed as an URL paramater, replacing the variable `orderFormId` in this example. \r\n\r\nThe `orderFormId` is the identification number of a given cart. That is, it's the ID of a specific orderForm.\r\n\r\nYou must send an empy JSON in the body of the request.\r\n",
        "operationId": "Removeallitems",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/changeToAnonymousUser/{orderFormId}": {
      "get": {
        "tags": [
          "OrderForm"
        ],
        "summary": "Remove all personal data",
        "description": "This call removes all user information, leaving the orderForm anonymous. That is, it keeps the items of the cart in the orderForm.\r\n\r\nThis call works by creating a new orderForm, settinh a new cookie and returning a redirect 302 to the cart URL (`/checkout/#/orderform`).",
        "operationId": "Removeallpersonaldata",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/items": {
      "patch": {
        "tags": [
          "Cart Update"
        ],
        "summary": "Items Update",
        "description": "The Items Update request updates the quantity of items in the cart. By using it you can:\n\r\n\r1. Change the quantity of one or more items in a specific cart;\n\r2. Remove items from the cart (by changing their quantity to 0);\n\r3. Add items to the cart.\n\r\n\rSee below how to proceed in each case.",
        "operationId": "ItemsUpdate",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsUpdateRequest"
              },
              "example": {
                "orderItems": [
                  {
                    "quantity": 0,
                    "index": 0
                  },
                  {
                    "seller": "1",
                    "quantity": 1,
                    "id": "38"
                  },
                  {
                    "seller": "1",
                    "quantity": 2,
                    "id": "35"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/items/{itemIndex}/price": {
      "put": {
        "tags": [
          "Cart Update"
        ],
        "summary": "Price Change",
        "description": "This request changes the price of a specific item in a cart.\n\r\n\rYou need to inform which cart you are referring to, by sendint its `orderFormIf`; and what is the item whose price you want to change, by sending its `itemIndex`.\n\r\n\rYou also need to pass the new price value in the body.",
        "operationId": "PriceChange",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemIndex",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceChangeRequest"
              },
              "example": {
                "price": 10000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}": {
      "put": {
        "tags": [
          "Custom Data"
        ],
        "summary": "Set multiple custom field values",
        "description": "Your account may create `apps`, which contain custom fields, through the [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration) request. The values of these custom fields can then be updated by this request.\n\r\n\rTo do that, you need to inform the ID of the app you created with the configuration API (`appId`).\n\r\n\rIn the body of the request, for each field created in this app (`appFieldName`) you will inform a value (`appFieldValue`).",
        "operationId": "Setmultiplecustomfieldvalues",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "{\n\t\"{{appFieldName}}\": \"{{appFieldValue}}\",\n\t\"{{appFieldName}}\": \"{{appFieldValue}}\",\n\t\"{{appFieldName}}\": \"{{appFieldValue}}\",\n\t...\n}"
              },
              "example": "{\n\t\"{{appFieldName}}\": \"{{appFieldValue}}\",\n\t\"{{appFieldName}}\": \"{{appFieldValue}}\",\n\t\"{{appFieldName}}\": \"{{appFieldValue}}\",\n\t...\n}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}/{appFieldName}": {
      "put": {
        "tags": [
          "Custom Data"
        ],
        "summary": "Set single custom field value",
        "description": "Your account may create `apps`, which contain custom fields, through the [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration) request. The value of a specific custom field can then be updated by this request.\n\r\n\rTo do that, you need to inform in the URL the ID of the app you created with the configuration API (`appId`).\n\r\n\rIn the body of the request, you will inform the new value (`appFieldValue`, passed through the body) of the specific field created in this app (identified by the `appFieldName` parameter, passed through the URL).",
        "operationId": "Setsinglecustomfieldvalue",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appFieldName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetsinglecustomfieldvalueRequest"
              },
              "example": {
                "value": "{{appFieldValue}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Custom Data"
        ],
        "summary": "Remove single custom field value",
        "description": "Your account may create `apps`, which contain custom fields, through the [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration) request. The value of a specific custom field can be removed by this request.\n\r\n\rTo do that, you need to inform in the URL the ID of the app you created with the configuration API (`appId`).\n\r\n\rYou also need to iform the specific field created in this app (identified by the `appFieldName` parameter, also passed through the URL) whose value you want to remove.",
        "operationId": "Removesinglecustomfieldvalue",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appFieldName",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pvt/configuration/orderForm": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get orderForm configuration",
        "description": "Retrieves the settings that are currently applied to every orderForm in the account.\n\r\n\rThese settings are defined by the request [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration).\n\r\n\rAlways use this request to retrieve the current configuration before performing an update. By doing so you ensure that you are modifying only the properties you want.",
        "operationId": "GetorderFormconfiguration",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Update orderForm configuration",
        "description": "Determines settings that will apply to every orderForm in the account.\n\r\n\rFor example, if you create an app using this request, every orderForm of this account will have the custom fields created though it.\n\r\n\r**Important**: always retrieve the current configuration before performing an update to ensure that you are modifying only the properties you want. Otherwise, old values can be overwritten. To retrieve the current configuration, use the request [Get orderForm configuration](https://developers.vtex.com/reference#getorderformconfiguration).",
        "operationId": "UpdateorderFormconfiguration",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateorderFormconfigurationRequest"
              },
              "example": {
                "paymentConfiguration": {
                  "requiresAuthenticationForPreAuthorizedPaymentOption": false
                },
                "taxConfiguration": null,
                "minimumQuantityAccumulatedForItems": 1,
                "decimalDigitsPrecision": 2,
                "minimumValueAccumulated": null,
                "apps": null,
                "allowMultipleDeliveries": null,
                "allowManualPrice": null
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "OrderFormSimulationRequest": {
        "title": "OrderFormSimulationRequest",
        "required": [
          "items",
          "country"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "description": ""
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "items": [
            {
              "id": "{{skuId}}",
              "quantity": 1,
              "seller": "1"
            }
          ],
          "country": "{{countryCode-ISO-3-digits}}"
        }
      },
      "Item": {
        "title": "Item",
        "required": [
          "id",
          "quantity",
          "seller"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "seller": {
            "type": "string"
          }
        },
        "example": {
          "id": "{{skuId}}",
          "quantity": 1,
          "seller": "1"
        }
      },
      "ItemsUpdateRequest": {
        "title": "ItemsUpdateRequest",
        "required": [
          "orderItems"
        ],
        "type": "object",
        "properties": {
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "description": ""
          }
        },
        "example": {
          "orderItems": [
            {
              "quantity": 0,
              "index": 0
            },
            {
              "seller": "1",
              "quantity": 1,
              "id": "38"
            },
            {
              "seller": "1",
              "quantity": 2,
              "id": "35"
            }
          ]
        }
      },
      "OrderItem": {
        "title": "OrderItem",
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "seller": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "example": {
          "quantity": 0,
          "index": 0
        }
      },
      "PriceChangeRequest": {
        "title": "PriceChangeRequest",
        "required": [
          "price"
        ],
        "type": "object",
        "properties": {
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "price": 10000
        }
      },
      "SetsinglecustomfieldvalueRequest": {
        "title": "SetsinglecustomfieldvalueRequest",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "example": {
          "value": "{{appFieldValue}}"
        }
      },
      "UpdateorderFormconfigurationRequest": {
        "title": "UpdateorderFormconfigurationRequest",
        "required": [
          "paymentConfiguration",
          "taxConfiguration",
          "minimumQuantityAccumulatedForItems",
          "decimalDigitsPrecision",
          "minimumValueAccumulated",
          "apps",
          "allowMultipleDeliveries",
          "allowManualPrice"
        ],
        "type": "object",
        "properties": {
          "paymentConfiguration": {
            "$ref": "#/components/schemas/PaymentConfiguration"
          },
          "taxConfiguration": {
            "type": "string",
            "nullable": true
          },
          "minimumQuantityAccumulatedForItems": {
            "type": "integer",
            "format": "int32"
          },
          "decimalDigitsPrecision": {
            "type": "integer",
            "format": "int32"
          },
          "minimumValueAccumulated": {
            "type": "string",
            "nullable": true
          },
          "apps": {
            "type": "string",
            "nullable": true
          },
          "allowMultipleDeliveries": {
            "type": "string",
            "nullable": true
          },
          "allowManualPrice": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "paymentConfiguration": {
            "requiresAuthenticationForPreAuthorizedPaymentOption": false
          },
          "taxConfiguration": null,
          "minimumQuantityAccumulatedForItems": 1,
          "decimalDigitsPrecision": 2,
          "minimumValueAccumulated": null,
          "apps": null,
          "allowMultipleDeliveries": null,
          "allowManualPrice": null
        }
      },
      "PaymentConfiguration": {
        "title": "PaymentConfiguration",
        "required": [
          "requiresAuthenticationForPreAuthorizedPaymentOption"
        ],
        "type": "object",
        "properties": {
          "requiresAuthenticationForPreAuthorizedPaymentOption": {
            "type": "boolean"
          }
        },
        "example": {
          "requiresAuthenticationForPreAuthorizedPaymentOption": false
        }
      }
    },
    "securitySchemes": {
      "appKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-VTEX-API-AppKey"
      },
      "appToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-VTEX-API-AppToken"
      }
    }
  },
  "tags": [
    {
      "name": "OrderForm"
    },
    {
      "name": "Cart Update",
      "description": "This functionality allows add/remove/edit items on orderform."
    },
    {
      "name": "Custom Data",
      "description": "This functionality allows adding custom fields in orderform API.\n\nThese fields are not reflected in the checkout UI unless custom implementations are performed. It can be useful also for orders placed directly via checkout API.\n\nYour configuration is made via `/configuration` API, described in this collection.\n\nValues for `appId` and `appFieldName` must match the configuration."
    },
    {
      "name": "Configuration",
      "description": "**Important:** always obtain the current configuration before performing an update to ensure that you are modifying only the wanted properties, or the old values can be overwritten.\n\n|Attribute|Type|Description|\n---|---|---\n| paymentConfiguration > requiresAuthenticationFor PreAuthorizedPaymentOption | boolean | * Require user authentication for automatically authorized payments|\n`taxConfiguration`| object | Configuration for external tax services\n `minimumQuantityAccumulatedForItems`| integer | * Minimum number of items in cart\n `decimalDigitsPrecision`  | integer | * Number of decimal digits to be considered (0, 1 or 2)\n `minimumValueAccumulated` | integer | * Minimum total value in cart (in cents)\n|`apps`| object | Custom Data configuration\n|`allowMultipleDeliveries`| boolean | Feature toggle for multiple deliveries\n|`allowManualPrice`| boolean |Feature toggle for manual price\n\n\n\\* These configurations are also available via admin: {{accountName}}.myvtex.com/admin/checkout/#/configurations\n\nOther properties can be changed only via API:\n- taxConfiguration\n- apps (custom data)\n- allowMultipleDeliveries\n- allowManualPrice"
    }
  ],
  "security": [
    {
      "appKey": [],
      "appToken": []
    }
  ]
}