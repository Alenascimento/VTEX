{
  "openapi": "3.0.0",
  "info": {
    "title": "Checkout API",
    "description": "",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://{accountName}.{environment}.com.br",
      "description": "VTEX server url"
    }
  ],
  "paths": {
    "/api/checkout/pub/orderforms/simulation": {
      "post": {
        "tags": ["OrderForm"],
        "summary": "Do OrderForm Simulation",
        "description": "\r\n\r\nThe orderForm simulation endpoint is used to simulate a cart in VTEX Checkout.\r\n\r\nIt receives an **SKU ID**, the **quantity** of items in the cart, the ID of the **Seller** and the **country** in ISO ALPHA-3 Code (eg. BRA, USA, ARG).\r\n\r\nIt sends back all information about the cart, such as the selling price of each item, rates and benefits data, payment and logistics info.\r\n\r\nThis is useful whenever you need to know the avaiability of fulfilling an order for a specific cart setting, since the API response will let you know the updated price, inventory and shipping data.\r\n",
        "operationId": "OrderFormSimulation",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderFormSimulationRequest"
              },
              "example": {
                "items": [
                  {
                    "id": "{{skuId}}",
                    "quantity": 1,
                    "seller": "1"
                  }
                ],
                "country": "{{countryCode-ISO-3-digits}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "response": {
                    "value": {
                      "items": [
                        {
                          "id": "1",
                          "requestIndex": 0,
                          "quantity": 1,
                          "seller": "1",
                          "sellerChain": ["1"],
                          "tax": 0,
                          "priceValidUntil": "2021-02-27T13:57:49.7009186Z",
                          "price": 15000,
                          "listPrice": 30000,
                          "rewardValue": 0,
                          "sellingPrice": 15000,
                          "offerings": [],
                          "priceTags": [],
                          "measurementUnit": "un",
                          "unitMultiplier": 1.0,
                          "parentItemIndex": null,
                          "parentAssemblyBinding": null,
                          "availability": "available"
                        }
                      ],
                      "ratesAndBenefitsData": {
                        "rateAndBenefitsIdentifiers": [],
                        "teaser": []
                      },
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": "Visa",
                            "paymentGroupName": "creditCardPaymentGroup",
                            "value": 15000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 15000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 15000,
                                    "total": 15000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 7500,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 7500,
                                    "total": 15000
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "paymentSystem": "4",
                            "bin": null,
                            "paymentName": "Mastercard",
                            "paymentGroupName": "creditCardPaymentGroup",
                            "value": 15000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 15000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 15000,
                                    "total": 15000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 7500,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 7500,
                                    "total": 15000
                                  }
                                ]
                              },
                              {
                                "count": 3,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 5000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 3,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 5000,
                                    "total": 15000
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "paymentSystem": "6",
                            "bin": null,
                            "paymentName": "Boleto Banc√°rio",
                            "paymentGroupName": "bankInvoicePaymentGroup",
                            "value": 15000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 15000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 15000,
                                    "total": 15000
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "paymentSystem": "44",
                            "bin": null,
                            "paymentName": "Venda Direta Debito",
                            "paymentGroupName": "debitDirectSalePaymentGroup",
                            "value": 15000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 15000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 15000,
                                    "total": 15000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 6,
                            "name": "Boleto Banc√°rio",
                            "groupName": "bankInvoicePaymentGroup",
                            "validator": null,
                            "stringId": "6",
                            "template": "bankInvoicePaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T13:57:49.664939Z",
                            "availablePayments": null
                          },
                          {
                            "id": 4,
                            "name": "Mastercard",
                            "groupName": "creditCardPaymentGroup",
                            "validator": null,
                            "stringId": "4",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T13:57:49.664939Z",
                            "availablePayments": null
                          },
                          {
                            "id": 2,
                            "name": "Visa",
                            "groupName": "creditCardPaymentGroup",
                            "validator": null,
                            "stringId": "2",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T13:57:49.664939Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "selectableGifts": [],
                      "marketingData": null,
                      "postalCode": null,
                      "country": "BRA",
                      "logisticsInfo": [
                        {
                          "itemIndex": 0,
                          "addressId": null,
                          "selectedSla": null,
                          "selectedDeliveryChannel": null,
                          "quantity": 1,
                          "shipsTo": ["BRA"],
                          "slas": [],
                          "deliveryChannels": [
                            {
                              "id": "pickup-in-point"
                            },
                            {
                              "id": "delivery"
                            }
                          ]
                        }
                      ],
                      "messages": [],
                      "purchaseConditions": {
                        "itemPurchaseConditions": [
                          {
                            "id": "1",
                            "seller": "1",
                            "sellerChain": ["1"],
                            "slas": [],
                            "price": 15000,
                            "listPrice": 30000
                          }
                        ]
                      },
                      "pickupPoints": [],
                      "subscriptionData": null,
                      "totals": [
                        {
                          "id": "Items",
                          "name": "Total dos Itens",
                          "value": 15000
                        }
                      ],
                      "itemMetadata": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/items/removeAll": {
      "post": {
        "tags": ["OrderForm"],
        "summary": "Remove all items",
        "description": "\r\nThis call removes all items from a given cart, leaving it empty.\r\n\r\nThe ID of the specific cart whose items you want to remove is passed as an URL paramater, replacing the variable `orderFormId` in this example. \r\n\r\nThe `orderFormId` is the identification number of a given cart. That is, it's the ID of a specific orderForm.\r\n\r\nYou must send an empy JSON in the body of the request.\r\n",
        "operationId": "Removeallitems",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "ID of the orderForm corresponding to the cart whose items you want to remove.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "response": {
                    "value": {
                      "orderFormId": "ede846222cd44046ba6c638442c3505a",
                      "salesChannel": "1",
                      "loggedIn": false,
                      "isCheckedIn": false,
                      "storeId": null,
                      "checkedInPickupPointId": null,
                      "allowManualPrice": false,
                      "canEditData": true,
                      "userProfileId": null,
                      "userType": null,
                      "ignoreProfileData": false,
                      "value": 0,
                      "messages": [],
                      "items": [],
                      "selectableGifts": [],
                      "totalizers": [],
                      "shippingData": {
                        "address": null,
                        "logisticsInfo": [],
                        "selectedAddresses": [],
                        "availableAddresses": [],
                        "pickupPoints": []
                      },
                      "clientProfileData": {
                        "email": "john.doe@google.com",
                        "firstName": "John",
                        "lastName": "Doe",
                        "document": "769387308",
                        "documentType": "dni",
                        "phone": "+5491111223344",
                        "corporateName": null,
                        "tradeName": null,
                        "corporateDocument": null,
                        "stateInscription": null,
                        "corporatePhone": null,
                        "isCorporate": false,
                        "profileCompleteOnLoading": false,
                        "profileErrorOnLoading": false,
                        "customerClass": null
                      },
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": null,
                            "paymentGroupName": null,
                            "value": 15000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 15000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 15000,
                                    "total": 15000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 4,
                            "name": "Mastercard",
                            "groupName": "creditCardPaymentGroup",
                            "validator": {
                              "regex": "^((5(([1-2]|[5-5])[0-3]{8}|0((2|9)([0-2]{5}))|1(0(5((0|[4-8])[1-7]{6})|([2-3]|[1-9])[0-9]{6})|[1-9][0-9]{7})))|((508116)\\d{4,10})|((502121)\\d{4,10})|((589916)\\d{4,10})|(2[0-9]{15})|(67[0-9]{14})|(506387)\\d{4,10})",
                              "mask": "9999 9999 9999 9999",
                              "cardCodeRegex": "^[1-3]{9}$",
                              "cardCodeMask": "999",
                              "weights": [2, 1, 2, 1, 2],
                              "useCvv": true,
                              "useExpirationDate": true,
                              "useCardHolderName": true,
                              "useBillingAddress": true
                            },
                            "stringId": "4",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T14:23:23.8196668Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "marketingData": null,
                      "sellers": [],
                      "clientPreferencesData": {
                        "locale": "pt-BR",
                        "optinNewsLetter": null
                      },
                      "commercialConditionData": null,
                      "storePreferencesData": {
                        "countryCode": "BRA",
                        "saveUserData": true,
                        "timeZone": "E. South America Standard Time",
                        "currencyCode": "BRL",
                        "currencyLocale": 1046,
                        "currencySymbol": "R$",
                        "currencyFormatInfo": {
                          "currencyDecimalDigits": 2,
                          "currencyDecimalSeparator": ",",
                          "currencyGroupSeparator": ".",
                          "currencyGroupSize": 3,
                          "startsWithCurrencySymbol": true
                        }
                      },
                      "giftRegistryData": null,
                      "openTextField": null,
                      "invoiceData": null,
                      "customData": null,
                      "itemMetadata": {
                        "items": []
                      },
                      "hooksData": null,
                      "ratesAndBenefitsData": null,
                      "subscriptionData": null,
                      "itemsOrdination": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/checkout/changeToAnonymousUser/{orderFormId}": {
      "get": {
        "tags": ["OrderForm"],
        "summary": "Remove all personal data",
        "description": "This call removes all user information, leaving the orderForm anonymous. That is, it keeps the items of the cart in the orderForm.\r\n\r\nThis call works by creating a new orderForm, setting a new cookie and returning a redirect 302 to the cart URL (`/checkout/#/orderform`).",
        "operationId": "Removeallpersonaldata",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to use. Used as part of the URL",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "ID of the orderForm corresponding to the cart whose user's personal data you want to remove.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/items": {
      "patch": {
        "tags": ["Cart Update"],
        "summary": "Update cart items",
        "description": "With the Items Update request you can:\n\r\n\r1. Add items to the cart;\n\r2. Change the quantity of one or more items in a specific cart;\n\r3. Remove items from the cart (by changing their quantity to 0).\n\r\n\r",
        "operationId": "ItemsUpdate",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "ID of the orderForm corresponding to the cart whose items you want to update.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allowOutdatedData",
            "in": "query",
            "description": "In order to optimize performance, this parameter allows some information to not be updated when there are changes in the minicart. For instance, if a shopper adds another unit of a given SKU to the cart, it may not be necessary to recalculate payment information, which could impact performance.\n\r\n\rCurrently, this array accepts strings and possible values that can be included are `‚ÄùshippingData‚Äù` and/or `‚ÄùpaymentData‚Äù`.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "array",
              "default": ["shippingData", "paymentData"],
              "items": {}
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemsUpdateRequest"
              },
              "example": {
                "orderItems": [
                  {
                    "quantity": 0,
                    "index": 0
                  },
                  {
                    "seller": "1",
                    "quantity": 1,
                    "id": "38"
                  },
                  {
                    "seller": "1",
                    "quantity": 2,
                    "id": "35"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "orderFormId": "ede846222cd44046ba6c638442c3505a",
                      "salesChannel": "1",
                      "loggedIn": false,
                      "isCheckedIn": false,
                      "storeId": null,
                      "checkedInPickupPointId": null,
                      "allowManualPrice": false,
                      "canEditData": true,
                      "userProfileId": null,
                      "userType": null,
                      "ignoreProfileData": false,
                      "value": 15000,
                      "messages": [],
                      "items": [
                        {
                          "uniqueId": "E0F2B7AF5CD74D668F1E27537206912C",
                          "id": "1",
                          "productId": "1",
                          "productRefId": "",
                          "refId": "0001",
                          "ean": "123456789",
                          "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "modalType": null,
                          "parentItemIndex": null,
                          "parentAssemblyBinding": null,
                          "assemblies": [],
                          "priceValidUntil": "2021-02-27T14:59:00.8288784Z",
                          "tax": 0,
                          "price": 15000,
                          "listPrice": 30000,
                          "manualPrice": null,
                          "sellingPrice": 15000,
                          "rewardValue": 0,
                          "isGift": false,
                          "additionalInfo": {
                            "brandName": "Royal Canin",
                            "brandId": "2000000",
                            "offeringInfo": null,
                            "offeringType": null,
                            "offeringTypeId": null
                          },
                          "preSaleDate": null,
                          "productCategoryIds": "/1/10/",
                          "productCategories": {
                            "10": "Ra√ß√£o Seca",
                            "1": "Alimenta√ß√£o"
                          },
                          "quantity": 1,
                          "seller": "1",
                          "sellerChain": ["1"],
                          "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                          "detailUrl": "/racao-royal-canin-feline-urinary/p",
                          "components": [],
                          "bundleItems": [],
                          "attachments": [],
                          "attachmentOfferings": [],
                          "offerings": [],
                          "priceTags": [],
                          "availability": "available",
                          "measurementUnit": "un",
                          "unitMultiplier": 1.0,
                          "manufacturerCode": null
                        }
                      ],
                      "selectableGifts": [],
                      "totalizers": [
                        {
                          "id": "Items",
                          "name": "Total dos Itens",
                          "value": 15000
                        }
                      ],
                      "shippingData": {
                        "address": null,
                        "logisticsInfo": [
                          {
                            "itemIndex": 0,
                            "selectedSla": null,
                            "selectedDeliveryChannel": null,
                            "addressId": null,
                            "slas": [],
                            "shipsTo": ["BRA"],
                            "itemId": "1",
                            "deliveryChannels": [
                              {
                                "id": "pickup-in-point"
                              },
                              {
                                "id": "delivery"
                              }
                            ]
                          }
                        ],
                        "selectedAddresses": [],
                        "availableAddresses": [],
                        "pickupPoints": []
                      },
                      "clientProfileData": null,
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": null,
                            "paymentGroupName": null,
                            "value": 15000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 15000,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 15000,
                                    "total": 15000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 7500,
                                "total": 15000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 7500,
                                    "total": 15000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 2,
                            "name": "Visa",
                            "groupName": "creditCardPaymentGroup",
                            "validator": {
                              "regex": "^2[1-8]{17}$",
                              "mask": "9999 9999 9999 9999",
                              "cardCodeRegex": "^[0-3]{8}$",
                              "cardCodeMask": "999",
                              "weights": [2, 1, 2, 1, 2, 1],
                              "useCvv": true,
                              "useExpirationDate": true,
                              "useCardHolderName": true,
                              "useBillingAddress": true
                            },
                            "stringId": "2",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T14:59:00.7879306Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "marketingData": null,
                      "sellers": [
                        {
                          "id": "1",
                          "name": "lojadobreno",
                          "logo": ""
                        }
                      ],
                      "clientPreferencesData": {
                        "locale": "pt-BR",
                        "optinNewsLetter": null
                      },
                      "commercialConditionData": null,
                      "storePreferencesData": {
                        "countryCode": "BRA",
                        "saveUserData": true,
                        "timeZone": "E. South America Standard Time",
                        "currencyCode": "BRL",
                        "currencyLocale": 1046,
                        "currencySymbol": "R$",
                        "currencyFormatInfo": {
                          "currencyDecimalDigits": 2,
                          "currencyDecimalSeparator": ",",
                          "currencyGroupSeparator": ".",
                          "currencyGroupSize": 3,
                          "startsWithCurrencySymbol": true
                        }
                      },
                      "giftRegistryData": null,
                      "openTextField": null,
                      "invoiceData": null,
                      "customData": null,
                      "itemMetadata": {
                        "items": [
                          {
                            "id": "1",
                            "seller": "1",
                            "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "productId": "1",
                            "refId": "0001",
                            "ean": "123456789",
                            "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                            "detailUrl": "/racao-royal-canin-feline-urinary/p",
                            "assemblyOptions": []
                          }
                        ]
                      },
                      "hooksData": null,
                      "ratesAndBenefitsData": {
                        "rateAndBenefitsIdentifiers": [],
                        "teaser": []
                      },
                      "subscriptionData": null,
                      "itemsOrdination": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/items/{itemIndex}/price": {
      "put": {
        "tags": ["Cart Update"],
        "summary": "Change price",
        "description": "This request changes the price of a specific item in a cart.\n\r\n\rYou need to inform which cart you are referring to, by sending its `orderFormID`; and what is the item whose price you want to change, by sending its `itemIndex`.\n\r\n\rYou also need to pass the new price value in the body.\n\r\n\rRemember that, to use this endpoint, the feature of *manual price* must be active. To check if it's active, use the [Get orderForm configuration](https://developers.vtex.com/reference#getorderformconfiguration) endpoint. To make it active, use the [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration) endpoint, making the `allowManualPrice` field `true`.",
        "operationId": "PriceChange",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "ID of the orderForm corresponding to the cart whose items will have the price changed.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemIndex",
            "in": "path",
            "description": "The index of the item in the cart. Each cart item is identified by an index, starting in 0.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceChangeRequest"
              },
              "example": {
                "price": 10000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "orderFormId": "ede846222cd44046ba6c638442c3505a",
                      "salesChannel": "1",
                      "loggedIn": true,
                      "isCheckedIn": false,
                      "storeId": null,
                      "checkedInPickupPointId": null,
                      "allowManualPrice": true,
                      "canEditData": true,
                      "userProfileId": null,
                      "userType": null,
                      "ignoreProfileData": false,
                      "value": 10000,
                      "messages": [],
                      "items": [
                        {
                          "uniqueId": "E0F2B7AF5CD74D668F1E27537206912C",
                          "id": "1",
                          "productId": "1",
                          "productRefId": "",
                          "refId": "0001",
                          "ean": "123456789",
                          "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "modalType": null,
                          "parentItemIndex": null,
                          "parentAssemblyBinding": null,
                          "assemblies": [],
                          "priceValidUntil": "2021-02-27T14:59:00.8288784Z",
                          "tax": 0,
                          "price": 15000,
                          "listPrice": 30000,
                          "manualPrice": 10000,
                          "sellingPrice": 10000,
                          "rewardValue": 0,
                          "isGift": false,
                          "additionalInfo": {
                            "brandName": "Royal Canin",
                            "brandId": "2000000",
                            "offeringInfo": null,
                            "offeringType": null,
                            "offeringTypeId": null
                          },
                          "preSaleDate": null,
                          "productCategoryIds": "/1/10/",
                          "productCategories": {
                            "10": "Ra√ß√£o Seca",
                            "1": "Alimenta√ß√£o"
                          },
                          "quantity": 1,
                          "seller": "1",
                          "sellerChain": ["1"],
                          "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                          "detailUrl": "/racao-royal-canin-feline-urinary/p",
                          "components": [],
                          "bundleItems": [],
                          "attachments": [],
                          "attachmentOfferings": [],
                          "offerings": [],
                          "priceTags": [
                            {
                              "name": "DISCOUNT@MANUALPRICE",
                              "value": -5000,
                              "rawValue": -50.0,
                              "isPercentual": false,
                              "identifier": null
                            }
                          ],
                          "availability": "available",
                          "measurementUnit": "un",
                          "unitMultiplier": 1.0,
                          "manufacturerCode": null
                        }
                      ],
                      "selectableGifts": [],
                      "totalizers": [
                        {
                          "id": "Items",
                          "name": "Total dos Itens",
                          "value": 15000
                        },
                        {
                          "id": "Discounts",
                          "name": "Total dos Descontos",
                          "value": -5000
                        }
                      ],
                      "shippingData": {
                        "address": null,
                        "logisticsInfo": [
                          {
                            "itemIndex": 0,
                            "selectedSla": null,
                            "selectedDeliveryChannel": "delivery",
                            "addressId": null,
                            "slas": [],
                            "shipsTo": ["BRA"],
                            "itemId": "1",
                            "deliveryChannels": [
                              {
                                "id": "pickup-in-point"
                              },
                              {
                                "id": "delivery"
                              }
                            ]
                          }
                        ],
                        "selectedAddresses": [],
                        "availableAddresses": [],
                        "pickupPoints": []
                      },
                      "clientProfileData": null,
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": null,
                            "paymentGroupName": null,
                            "value": 10000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 10000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 10000,
                                    "total": 10000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 5000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 5000,
                                    "total": 10000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 2,
                            "name": "Visa",
                            "groupName": "creditCardPaymentGroup",
                            "validator": {
                              "regex": "^4[0-9]{15}$",
                              "mask": "9999 9999 9999 9999",
                              "cardCodeRegex": "^[0-9]{3}$",
                              "cardCodeMask": "999",
                              "weights": [2, 1, 2, 1, 2],
                              "useCvv": true,
                              "useExpirationDate": true,
                              "useCardHolderName": true,
                              "useBillingAddress": true
                            },
                            "stringId": "2",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T16:42:31.7836281Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "marketingData": null,
                      "sellers": [
                        {
                          "id": "1",
                          "name": "lojadobreno",
                          "logo": ""
                        }
                      ],
                      "clientPreferencesData": {
                        "locale": "pt-BR",
                        "optinNewsLetter": null
                      },
                      "commercialConditionData": null,
                      "storePreferencesData": {
                        "countryCode": "BRA",
                        "saveUserData": true,
                        "timeZone": "E. South America Standard Time",
                        "currencyCode": "BRL",
                        "currencyLocale": 1046,
                        "currencySymbol": "R$",
                        "currencyFormatInfo": {
                          "currencyDecimalDigits": 2,
                          "currencyDecimalSeparator": ",",
                          "currencyGroupSeparator": ".",
                          "currencyGroupSize": 3,
                          "startsWithCurrencySymbol": true
                        }
                      },
                      "giftRegistryData": null,
                      "openTextField": null,
                      "invoiceData": null,
                      "customData": null,
                      "itemMetadata": {
                        "items": [
                          {
                            "id": "1",
                            "seller": "1",
                            "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "productId": "1",
                            "refId": "0001",
                            "ean": "123456789",
                            "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                            "detailUrl": "/racao-royal-canin-feline-urinary/p",
                            "assemblyOptions": []
                          }
                        ]
                      },
                      "hooksData": null,
                      "ratesAndBenefitsData": {
                        "rateAndBenefitsIdentifiers": [],
                        "teaser": []
                      },
                      "subscriptionData": null,
                      "itemsOrdination": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}": {
      "put": {
        "tags": ["Custom Data"],
        "summary": "Set multiple custom field values",
        "description": "Your account may create `apps`, which contain custom fields, through the [Update orderForm configuration](https://developers.vtex.com/reference/configuration#updateorderformconfiguration) request. The values of these custom fields can then be updated by this request.\n\r\n\rTo do that, you need to inform the ID of the app you created with the configuration API (`appId`).\n\r\n\rIn the body of the request, for each field created in this app (`appFieldName`) you will inform a value (`appFieldValue`).",
        "operationId": "Setmultiplecustomfieldvalues",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "ID of the orderForm that will receive the new custom field values.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app created with the configuration API.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {          
          "content": {
            "application/json": {
              "schema": {
                "description": "Here you must add the pairs of Field Name and Field Value.",
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "orderFormId": "ede846222cd44046ba6c638442c3505a",
                      "salesChannel": "1",
                      "loggedIn": false,
                      "isCheckedIn": false,
                      "storeId": null,
                      "checkedInPickupPointId": null,
                      "allowManualPrice": false,
                      "canEditData": true,
                      "userProfileId": null,
                      "userType": null,
                      "ignoreProfileData": false,
                      "value": 10000,
                      "messages": [],
                      "items": [
                        {
                          "uniqueId": "E0F2B7AF5CD74D668F1E27537206912C",
                          "id": "1",
                          "productId": "1",
                          "productRefId": "",
                          "refId": "0001",
                          "ean": "123456789",
                          "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "modalType": null,
                          "parentItemIndex": null,
                          "parentAssemblyBinding": null,
                          "assemblies": [],
                          "priceValidUntil": "2021-02-27T14:59:00.8288784Z",
                          "tax": 0,
                          "price": 15000,
                          "listPrice": 30000,
                          "manualPrice": 10000,
                          "sellingPrice": 10000,
                          "rewardValue": 0,
                          "isGift": false,
                          "additionalInfo": {
                            "brandName": "Royal Canin",
                            "brandId": "2000000",
                            "offeringInfo": null,
                            "offeringType": null,
                            "offeringTypeId": null
                          },
                          "preSaleDate": null,
                          "productCategoryIds": "/1/10/",
                          "productCategories": {
                            "10": "Ra√ß√£o Seca",
                            "1": "Alimenta√ß√£o"
                          },
                          "quantity": 1,
                          "seller": "1",
                          "sellerChain": ["1"],
                          "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                          "detailUrl": "/racao-royal-canin-feline-urinary/p",
                          "components": [],
                          "bundleItems": [],
                          "attachments": [],
                          "attachmentOfferings": [],
                          "offerings": [],
                          "priceTags": [
                            {
                              "name": "DISCOUNT@MANUALPRICE",
                              "value": -5000,
                              "rawValue": -50.0,
                              "isPercentual": false,
                              "identifier": null
                            }
                          ],
                          "availability": "available",
                          "measurementUnit": "un",
                          "unitMultiplier": 1.0,
                          "manufacturerCode": null
                        }
                      ],
                      "selectableGifts": [],
                      "totalizers": [
                        {
                          "id": "Items",
                          "name": "Total dos Itens",
                          "value": 15000
                        },
                        {
                          "id": "Discounts",
                          "name": "Total dos Descontos",
                          "value": -5000
                        }
                      ],
                      "shippingData": {
                        "address": null,
                        "logisticsInfo": [
                          {
                            "itemIndex": 0,
                            "selectedSla": null,
                            "selectedDeliveryChannel": "delivery",
                            "addressId": null,
                            "slas": [],
                            "shipsTo": ["BRA"],
                            "itemId": "1",
                            "deliveryChannels": [
                              {
                                "id": "pickup-in-point"
                              },
                              {
                                "id": "delivery"
                              }
                            ]
                          }
                        ],
                        "selectedAddresses": [],
                        "availableAddresses": [],
                        "pickupPoints": []
                      },
                      "clientProfileData": null,
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": null,
                            "paymentGroupName": null,
                            "value": 10000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 10000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 10000,
                                    "total": 10000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 5000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 5000,
                                    "total": 10000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 2,
                            "name": "Visa",
                            "groupName": "creditCardPaymentGroup",
                            "validator": {
                              "regex": "^4[0-9]{15}$",
                              "mask": "9999 9999 9999 9999",
                              "cardCodeRegex": "^[0-9]{3}$",
                              "cardCodeMask": "999",
                              "weights": [2, 1, 2, 1],
                              "useCvv": true,
                              "useExpirationDate": true,
                              "useCardHolderName": true,
                              "useBillingAddress": true
                            },
                            "stringId": "2",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T16:42:31.7836281Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "marketingData": null,
                      "sellers": [
                        {
                          "id": "1",
                          "name": "lojadobreno",
                          "logo": ""
                        }
                      ],
                      "clientPreferencesData": {
                        "locale": "pt-BR",
                        "optinNewsLetter": null
                      },
                      "commercialConditionData": null,
                      "storePreferencesData": {
                        "countryCode": "BRA",
                        "saveUserData": true,
                        "timeZone": "E. South America Standard Time",
                        "currencyCode": "BRL",
                        "currencyLocale": 1046,
                        "currencySymbol": "R$",
                        "currencyFormatInfo": {
                          "currencyDecimalDigits": 2,
                          "currencyDecimalSeparator": ",",
                          "currencyGroupSeparator": ".",
                          "currencyGroupSize": 3,
                          "startsWithCurrencySymbol": true
                        }
                      },
                      "giftRegistryData": null,
                      "openTextField": null,
                      "invoiceData": null,
                      "customData": {
                        "customApps": [
                          {
                            "fields": {
                              "testField1": "testValue1",
                              "testField2": "testValue2"
                            },
                            "id": "abcd",
                            "major": 1
                          }
                        ]
                      },
                      "itemMetadata": {
                        "items": [
                          {
                            "id": "1",
                            "seller": "1",
                            "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "productId": "1",
                            "refId": "0001",
                            "ean": "123456789",
                            "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                            "detailUrl": "/racao-royal-canin-feline-urinary/p",
                            "assemblyOptions": []
                          }
                        ]
                      },
                      "hooksData": null,
                      "ratesAndBenefitsData": {
                        "rateAndBenefitsIdentifiers": [],
                        "teaser": []
                      },
                      "subscriptionData": null,
                      "itemsOrdination": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}/{appFieldName}": {
      "put": {
        "tags": ["Custom Data"],
        "summary": "Set single custom field value",
        "description": "Your account may create `apps`, which contain custom fields, through the [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration) request. The value of a specific custom field can then be updated by this request.\n\r\n\rTo do that, you need to inform in the URL the ID of the app you created with the configuration API (`appId`).\n\r\n\rIn the body of the request, you will inform the new value (`appFieldValue`, passed through the body) of the specific field created in this app (identified by the `appFieldName` parameter, passed through the URL).",
        "operationId": "Setsinglecustomfieldvalue",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "The ID of the orderForm whose custom field's value you want to change.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app created through the Update orderForm Configuration endpoint.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appFieldName",
            "in": "path",
            "description": "Name of the app's field created through the Update orderForm Configuration endpoint.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetsinglecustomfieldvalueRequest"
              },
              "example": {
                "value": "{{appFieldValue}}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "orderFormId": "ede846222cd44046ba6c638442c3505a",
                      "salesChannel": "1",
                      "loggedIn": false,
                      "isCheckedIn": false,
                      "storeId": null,
                      "checkedInPickupPointId": null,
                      "allowManualPrice": false,
                      "canEditData": true,
                      "userProfileId": null,
                      "userType": null,
                      "ignoreProfileData": false,
                      "value": 10000,
                      "messages": [],
                      "items": [
                        {
                          "uniqueId": "E0F2B7AF5CD74D668F1E27537206912C",
                          "id": "1",
                          "productId": "1",
                          "productRefId": "",
                          "refId": "0001",
                          "ean": "123456789",
                          "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "modalType": null,
                          "parentItemIndex": null,
                          "parentAssemblyBinding": null,
                          "assemblies": [],
                          "priceValidUntil": "2021-02-27T14:59:00.8288784Z",
                          "tax": 0,
                          "price": 15000,
                          "listPrice": 30000,
                          "manualPrice": 10000,
                          "sellingPrice": 10000,
                          "rewardValue": 0,
                          "isGift": false,
                          "additionalInfo": {
                            "brandName": "Royal Canin",
                            "brandId": "2000000",
                            "offeringInfo": null,
                            "offeringType": null,
                            "offeringTypeId": null
                          },
                          "preSaleDate": null,
                          "productCategoryIds": "/1/10/",
                          "productCategories": {
                            "10": "Ra√ß√£o Seca",
                            "1": "Alimenta√ß√£o"
                          },
                          "quantity": 1,
                          "seller": "1",
                          "sellerChain": ["1"],
                          "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                          "detailUrl": "/racao-royal-canin-feline-urinary/p",
                          "components": [],
                          "bundleItems": [],
                          "attachments": [],
                          "attachmentOfferings": [],
                          "offerings": [],
                          "priceTags": [
                            {
                              "name": "DISCOUNT@MANUALPRICE",
                              "value": -5000,
                              "rawValue": -50.0,
                              "isPercentual": false,
                              "identifier": null
                            }
                          ],
                          "availability": "available",
                          "measurementUnit": "un",
                          "unitMultiplier": 1.0,
                          "manufacturerCode": null
                        }
                      ],
                      "selectableGifts": [],
                      "totalizers": [
                        {
                          "id": "Items",
                          "name": "Total dos Itens",
                          "value": 15000
                        },
                        {
                          "id": "Discounts",
                          "name": "Total dos Descontos",
                          "value": -5000
                        }
                      ],
                      "shippingData": {
                        "address": null,
                        "logisticsInfo": [
                          {
                            "itemIndex": 0,
                            "selectedSla": null,
                            "selectedDeliveryChannel": "delivery",
                            "addressId": null,
                            "slas": [],
                            "shipsTo": ["BRA"],
                            "itemId": "1",
                            "deliveryChannels": [
                              {
                                "id": "pickup-in-point"
                              },
                              {
                                "id": "delivery"
                              }
                            ]
                          }
                        ],
                        "selectedAddresses": [],
                        "availableAddresses": [],
                        "pickupPoints": []
                      },
                      "clientProfileData": null,
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": null,
                            "paymentGroupName": null,
                            "value": 10000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 10000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 10000,
                                    "total": 10000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 5000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 5000,
                                    "total": 10000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 2,
                            "name": "Visa",
                            "groupName": "creditCardPaymentGroup",
                            "validator": {
                              "regex": "^4[0-9]{15}$",
                              "mask": "9999 9999 9999 9999",
                              "cardCodeRegex": "^[0-9]{3}$",
                              "cardCodeMask": "999",
                              "weights": [2, 1, 2, 1, 2],
                              "useCvv": true,
                              "useExpirationDate": true,
                              "useCardHolderName": true,
                              "useBillingAddress": true
                            },
                            "stringId": "2",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T16:42:31.7836281Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "marketingData": null,
                      "sellers": [
                        {
                          "id": "1",
                          "name": "lojadobreno",
                          "logo": ""
                        }
                      ],
                      "clientPreferencesData": {
                        "locale": "pt-BR",
                        "optinNewsLetter": null
                      },
                      "commercialConditionData": null,
                      "storePreferencesData": {
                        "countryCode": "BRA",
                        "saveUserData": true,
                        "timeZone": "E. South America Standard Time",
                        "currencyCode": "BRL",
                        "currencyLocale": 1046,
                        "currencySymbol": "R$",
                        "currencyFormatInfo": {
                          "currencyDecimalDigits": 2,
                          "currencyDecimalSeparator": ",",
                          "currencyGroupSeparator": ".",
                          "currencyGroupSize": 3,
                          "startsWithCurrencySymbol": true
                        }
                      },
                      "giftRegistryData": null,
                      "openTextField": null,
                      "invoiceData": null,
                      "customData": {
                        "customApps": [
                          {
                            "fields": {
                              "testField1": "Hello World",
                              "testField2": "testValue2"
                            },
                            "id": "abcd",
                            "major": 1
                          }
                        ]
                      },
                      "itemMetadata": {
                        "items": [
                          {
                            "id": "1",
                            "seller": "1",
                            "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "productId": "1",
                            "refId": "0001",
                            "ean": "123456789",
                            "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                            "detailUrl": "/racao-royal-canin-feline-urinary/p",
                            "assemblyOptions": []
                          }
                        ]
                      },
                      "hooksData": null,
                      "ratesAndBenefitsData": {
                        "rateAndBenefitsIdentifiers": [],
                        "teaser": []
                      },
                      "subscriptionData": null,
                      "itemsOrdination": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["Custom Data"],
        "summary": "Remove single custom field value",
        "description": "Your account may create `apps`, which contain custom fields, through the [Update orderForm configuration](https://developers.vtex.com/reference#updateorderformconfiguration) request. The value of a specific custom field can be removed by this request.\n\r\n\rTo do that, you need to inform in the URL the ID of the app you created with the configuration API (`appId`).\n\r\n\rYou also need to iform the specific field created in this app (identified by the `appFieldName` parameter, also passed through the URL) whose value you want to remove.",
        "operationId": "Removesinglecustomfieldvalue",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "The ID of the orderForm from which you want to remove the custom field value.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app created through the Update orderForm Configuration endpoint.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appFieldName",
            "in": "path",
            "description": "Name of the app's field created through the Update orderForm Configuration endpoint and which will be deleted.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "orderFormId": "ede846222cd44046ba6c638442c3505a",
                      "salesChannel": "1",
                      "loggedIn": false,
                      "isCheckedIn": false,
                      "storeId": null,
                      "checkedInPickupPointId": null,
                      "allowManualPrice": false,
                      "canEditData": true,
                      "userProfileId": null,
                      "userType": null,
                      "ignoreProfileData": false,
                      "value": 10000,
                      "messages": [],
                      "items": [
                        {
                          "uniqueId": "E0F2B7AF5CD74D668F1E27537206912C",
                          "id": "1",
                          "productId": "1",
                          "productRefId": "",
                          "refId": "0001",
                          "ean": "123456789",
                          "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                          "modalType": null,
                          "parentItemIndex": null,
                          "parentAssemblyBinding": null,
                          "assemblies": [],
                          "priceValidUntil": "2021-02-27T14:59:00.8288784Z",
                          "tax": 0,
                          "price": 15000,
                          "listPrice": 30000,
                          "manualPrice": 10000,
                          "sellingPrice": 10000,
                          "rewardValue": 0,
                          "isGift": false,
                          "additionalInfo": {
                            "brandName": "Royal Canin",
                            "brandId": "2000000",
                            "offeringInfo": null,
                            "offeringType": null,
                            "offeringTypeId": null
                          },
                          "preSaleDate": null,
                          "productCategoryIds": "/1/10/",
                          "productCategories": {
                            "10": "Ra√ß√£o Seca",
                            "1": "Alimenta√ß√£o"
                          },
                          "quantity": 1,
                          "seller": "1",
                          "sellerChain": ["1"],
                          "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                          "detailUrl": "/racao-royal-canin-feline-urinary/p",
                          "components": [],
                          "bundleItems": [],
                          "attachments": [],
                          "attachmentOfferings": [],
                          "offerings": [],
                          "priceTags": [
                            {
                              "name": "DISCOUNT@MANUALPRICE",
                              "value": -5000,
                              "rawValue": -50.0,
                              "isPercentual": false,
                              "identifier": null
                            }
                          ],
                          "availability": "available",
                          "measurementUnit": "un",
                          "unitMultiplier": 1.0,
                          "manufacturerCode": null
                        }
                      ],
                      "selectableGifts": [],
                      "totalizers": [
                        {
                          "id": "Items",
                          "name": "Total dos Itens",
                          "value": 15000
                        },
                        {
                          "id": "Discounts",
                          "name": "Total dos Descontos",
                          "value": -5000
                        }
                      ],
                      "shippingData": {
                        "address": null,
                        "logisticsInfo": [
                          {
                            "itemIndex": 0,
                            "selectedSla": null,
                            "selectedDeliveryChannel": "delivery",
                            "addressId": null,
                            "slas": [],
                            "shipsTo": ["BRA"],
                            "itemId": "1",
                            "deliveryChannels": [
                              {
                                "id": "pickup-in-point"
                              },
                              {
                                "id": "delivery"
                              }
                            ]
                          }
                        ],
                        "selectedAddresses": [],
                        "availableAddresses": [],
                        "pickupPoints": []
                      },
                      "clientProfileData": null,
                      "paymentData": {
                        "installmentOptions": [
                          {
                            "paymentSystem": "2",
                            "bin": null,
                            "paymentName": null,
                            "paymentGroupName": null,
                            "value": 10000,
                            "installments": [
                              {
                                "count": 1,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 10000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 1,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 10000,
                                    "total": 10000
                                  }
                                ]
                              },
                              {
                                "count": 2,
                                "hasInterestRate": false,
                                "interestRate": 0,
                                "value": 5000,
                                "total": 10000,
                                "sellerMerchantInstallments": [
                                  {
                                    "id": "LOJADOBRENO",
                                    "count": 2,
                                    "hasInterestRate": false,
                                    "interestRate": 0,
                                    "value": 5000,
                                    "total": 10000
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "paymentSystems": [
                          {
                            "id": 2,
                            "name": "Visa",
                            "groupName": "creditCardPaymentGroup",
                            "validator": {
                              "regex": "^4[0-9]{15}$",
                              "mask": "9999 9999 9999 9999",
                              "cardCodeRegex": "^[0-9]{3}$",
                              "cardCodeMask": "999",
                              "weights": [2, 1, 2, 1, 2],
                              "useCvv": true,
                              "useExpirationDate": true,
                              "useCardHolderName": true,
                              "useBillingAddress": true
                            },
                            "stringId": "2",
                            "template": "creditCardPaymentGroup-template",
                            "requiresDocument": false,
                            "isCustom": false,
                            "description": null,
                            "requiresAuthentication": false,
                            "dueDate": "2020-03-05T16:42:31.7836281Z",
                            "availablePayments": null
                          }
                        ],
                        "payments": [],
                        "giftCards": [],
                        "giftCardMessages": [],
                        "availableAccounts": [],
                        "availableTokens": []
                      },
                      "marketingData": null,
                      "sellers": [
                        {
                          "id": "1",
                          "name": "lojadobreno",
                          "logo": ""
                        }
                      ],
                      "clientPreferencesData": {
                        "locale": "pt-BR",
                        "optinNewsLetter": null
                      },
                      "commercialConditionData": null,
                      "storePreferencesData": {
                        "countryCode": "BRA",
                        "saveUserData": true,
                        "timeZone": "E. South America Standard Time",
                        "currencyCode": "BRL",
                        "currencyLocale": 1046,
                        "currencySymbol": "R$",
                        "currencyFormatInfo": {
                          "currencyDecimalDigits": 2,
                          "currencyDecimalSeparator": ",",
                          "currencyGroupSeparator": ".",
                          "currencyGroupSize": 3,
                          "startsWithCurrencySymbol": true
                        }
                      },
                      "giftRegistryData": null,
                      "openTextField": null,
                      "invoiceData": null,
                      "customData": {
                        "customApps": [
                          {
                            "fields": {
                              "testField2": "testValue2"
                            },
                            "id": "abcd",
                            "major": 1
                          }
                        ]
                      },
                      "itemMetadata": {
                        "items": [
                          {
                            "id": "1",
                            "seller": "1",
                            "name": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "skuName": "Ra√ß√£o Royal Canin Feline Urinary 500g",
                            "productId": "1",
                            "refId": "0001",
                            "ean": "123456789",
                            "imageUrl": "http://lojadobreno.vteximg.com.br/arquivos/ids/155450-55-55/Racao-Royal-Canin-Feline-Urinary-SO.jpg?v=637139444438700000",
                            "detailUrl": "/racao-royal-canin-feline-urinary/p",
                            "assemblyOptions": []
                          }
                        ]
                      },
                      "hooksData": null,
                      "ratesAndBenefitsData": {
                        "rateAndBenefitsIdentifiers": [],
                        "teaser": []
                      },
                      "subscriptionData": null,
                      "itemsOrdination": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pvt/configuration/orderForm": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Get orderForm configuration",
        "description": "Retrieves the settings that are currently applied to every orderForm in the account.\n\r\n\rThese settings are defined by the request [Update orderForm configuration](https://developers.vtex.com/reference/configuration#updateorderformconfiguration).\n\r\n\rAlways use this request to retrieve the current configuration before performing an update. By doing so you ensure that you are modifying only the properties you want.",
        "operationId": "GetorderFormconfiguration",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "paymentConfiguration": {
                        "requiresAuthenticationForPreAuthorizedPaymentOption": false,
                        "allowInstallmentsMerge": null,
                        "blockPaymentSession": null
                      },
                      "taxConfiguration": null,
                      "minimumQuantityAccumulatedForItems": 1,
                      "decimalDigitsPrecision": 2,
                      "minimumValueAccumulated": null,
                      "apps": [
                        {
                          "fields": ["name", "age"],
                          "id": "abcd",
                          "major": 1
                        }
                      ],
                      "allowMultipleDeliveries": false,
                      "allowManualPrice": true,
                      "maxNumberOfWhiteLabelSellers": null,
                      "maskFirstPurchaseData": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Configuration"],
        "summary": "Update orderForm configuration",
        "description": "Determines settings that will apply to every orderForm in the account.\n\r\n\rFor example, if you create an app using this request, every orderForm of this account will have the custom fields created though it.\n\r\n\r**Important**: always retrieve the current configuration before performing an update to ensure that you are modifying only the properties you want. Otherwise, old values can be overwritten. To retrieve the current configuration, use the request [Get orderForm configuration](https://developers.vtex.com/reference#getorderformconfiguration).",
        "operationId": "UpdateorderFormconfiguration",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateorderFormconfigurationRequest"
              },
              "example": {
                "paymentConfiguration": {
                  "requiresAuthenticationForPreAuthorizedPaymentOption": false
                },
                "taxConfiguration": null,
                "minimumQuantityAccumulatedForItems": 1,
                "decimalDigitsPrecision": 2,
                "minimumValueAccumulated": null,
                "apps": null,
                "allowMultipleDeliveries": null,
                "allowManualPrice": null
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pvt/configuration/window-to-change-seller": {
      "get": {
        "tags": ["Configuration"],
        "summary": "Get window to change seller",
        "description": "Retrieves a marketplace‚Äôs window to change seller, that is, the period when it is possible to choose another seller to fulfill a given order after the original seller has canceled it.\n\r\n\rThe default period for this window is of 2 days, but it can be configured by the request [Update window to change seller](https://developers.vtex.com/reference/configuration#updatewindowtochangeseller).",
        "operationId": "GetWindowToChangeSeller",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "text/plain": {
                "examples": {
                  "response": {
                    "value": "2"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["Configuration"],
        "summary": "Update window to change seller",
        "description": "Updates a marketplace‚Äôs window to change seller, that is, the period when it is possible to choose another seller to fulfill a given order after the original seller has canceled it.\n\r\n\rIt is possible to check the current window using the request [Get window to change seller](https://developers.vtex.com/reference/configuration#getwindowtochangeseller).",
        "operationId": "UpdateWindowToChangeSeller",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitingTime"
              },
              "example": {
                "waitingTime": "4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {}
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/installments": {
      "get": {
        "tags": ["OrderForm"],
        "summary": "OrderForm installments",
        "description": "Retrieves possible amount of installments and respective values for a given `orderFormId` with a given payment method.\n\r\n\rThis endpoint can be used to get the installment options for only one payment method at a time.\n\r\n\rThis endpoint should be called only after the selected `orderForm` already has a `paymentData`.",
        "operationId": "GetorderFormInstallments",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "required": true,
            "description": "ID of the `orderForm` to be consulted for installments.",
            "schema": {
              "type": "string"
            }
          },
          {
              "name": "paymentSystem",
              "in": "query",
              "description": "ID of the payment method to be consulted for installments.",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                  "type": "integer"
              }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "paymentSystem": "2",
                      "bin": null,
                      "paymentName": null,
                      "paymentGroupName": null,
                      "value": 32000,
                      "installments": [
                        {
                          "count": 1,
                          "hasInterestRate": false,
                          "interestRate": 0,
                          "value": 32000,
                          "total": 32000,
                          "sellerMerchantInstallments": [
                            {
                              "id": "MyStore",
                              "count": 1,
                              "hasInterestRate": false,
                              "interestRate": 0,
                              "value": 32000,
                              "total": 32000
                            }
                          ]
                        },
                        {
                          "count": 2,
                          "hasInterestRate": false,
                          "interestRate": 0,
                          "value": 1600,
                          "total": 32000,
                          "sellerMerchantInstallments": [
                            {
                              "id": "MyStore",
                              "count": 2,
                              "hasInterestRate": false,
                              "interestRate": 0,
                              "value": 1600,
                              "total": 32000
                            }
                          ]
                        },
                        {
                          "count": 3,
                          "hasInterestRate": false,
                          "interestRate": 0,
                          "value": 10666,
                          "total": 32000,
                          "sellerMerchantInstallments": [
                            {
                              "id": "MyStore",
                              "count": 3,
                              "hasInterestRate": false,
                              "interestRate": 0,
                              "value": 10666,
                              "total": 32000
                            }
                          ]
                        }                      
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/pickup-points": {
      "get": {
        "tags": ["Fulfillment"],
        "summary": "List pickup points by location",
        "description": "Retrieves information on pickup points close to a given location determined by geocoordinates or postal code.\n\r\n\rThe pickup points returned are not necessarily all active ones. Make sure to validate the information consumed by integrations.",
        "operationId": "ListPickupPpointsByLocation",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "geoCoordinates",
            "in": "query",
            "description": "Geocoordinates around which to search for pickup points. If you use this type of search, do not pass postal and country codes.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "default": "00.0000000;00.0000000"
            }
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "Postal code around which to search for pickup points. If you use this type of search, make sure to pass a `countryCode` and do not pass `geoCoordinates`.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "default": "1234000"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Three letter country code refering to the `postalCode` field. Pass the country code only if you are searching pickup points by postal code.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "default": "BRA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "paging": {
                          "page": 1,
                          "pageSize": 30,
                          "total": 1,
                          "pages": 1
                      },
                      "items": [
                          {
                              "distance": 0.84697865186165456,
                              "pickupPoint": {
                                  "friendlyName": "physical-store-02",
                                  "address": {
                                      "addressType": "pickup",
                                      "receiverName": null,
                                      "addressId": "physical-store-02",
                                      "isDisposable": true,
                                      "postalCode": "23450-070",
                                      "city": "Rio de Janeiro",
                                      "state": "RJ",
                                      "country": "BRA",
                                      "street": "Praia de Botafogo",
                                      "number": "132",
                                      "neighborhood": "Botafogo",
                                      "complement": "",
                                      "reference": null,
                                      "geoCoordinates": [
                                          -34.18259,
                                          -11.94436
                                      ]
                                  },
                                  "additionalInfo": null,
                                  "id": "02_Physical",
                                  "businessHours": [
                                      {
                                          "DayOfWeek": 0,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:59:00"
                                      },
                                      {
                                          "DayOfWeek": 1,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:59:00"
                                      },
                                      {
                                          "DayOfWeek": 2,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:59:00"
                                      },
                                      {
                                          "DayOfWeek": 3,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:59:00"
                                      },
                                      {
                                          "DayOfWeek": 4,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:50:00"
                                      },
                                      {
                                          "DayOfWeek": 5,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:59:00"
                                      },
                                      {
                                          "DayOfWeek": 6,
                                          "OpeningTime": "00:00:00",
                                          "ClosingTime": "23:59:00"
                                      }
                                  ]
                              }
                          }
                      ]
                  }
                }
              }
            }
          }
        }
      }
    }
    },
    "/api/checkout/pub/orderForm/{orderFormId}/transaction": {
      "post": {
        "tags": ["Order placement"],
        "summary": "Place order from an existing cart",
        "description": "This endpoint places an order from an existing `orderForm` object, meaning an existing cart.\n\r\n\rAfter the creation of an order with this request, you have five minutes to send payment information and then request payment processing.",
        "operationId": "PlaceOrderFromExistingOrderForm",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "orderFormId",
            "in": "path",
            "description": "ID of the orderForm corresponding to the cart from which to place the order.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "",
                "required": [
                  "referenceId",
                  "value",
                  "referenceValue",
                  "interestValue"
                ],
                "properties": {
                  "referenceId": {
                    "title": "referenceId",
                    "type": "string",
                    "description": "ID of the orderForm corresponding to the cart from which to place the order.",
                    "default": "41a22925298a4ddca95318131a25b000"
                  },
                  "savePersonalData": {
                    "title": "savePersonalData",
                    "type": "boolean",
                    "description": "`true` if the shopper's data provided during checkout should be saved for future reference.",
                    "default": false
                  },
                  "optinNewsLetter": {
                    "title": "optinNewsLetter",
                    "type": "boolean",
                    "description": "True if the shopper opted to receive the newsletter.",
                    "default": false
                  },
                  "value": {
                    "type": "integer",
                    "description": "Total value of the order without separating cents. For example, $24.99 is represented `2499`.",
                    "default": 6800
                  },
                  "referenceValue": {
                    "type": "integer",
                    "description": "Reference value of the order for calculating interest if that is the case. Can be equal to the total value and does not separate cents. For example, $24.99 is represented `2499`.",
                    "default": 6800
                  },
                  "interestValue": {
                    "type": "integer",
                    "description": "Interest rate to be used in case it applies.",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "response": {
                    "value": {
                      "orderForm":null,
                      "transactionData": {
                          "merchantTransactions": [
                              {
                                  "id":"STORE",
                                  "transactionId":"62FEDE228E2144649CF67812C4E5ER79",
                                  "merchantName":"STORE",
                                  "payments": [
                                      {
                                          "paymentSystem":"6",
                                          "bin":null,
                                          "accountId":null,
                                          "value":15650,
                                          "referenceValue":15650,
                                          "giftCardRedemptionCode":null,
                                          "giftCardProvider":null,
                                          "giftCardId":null
                                      }
                                  ]
                              }
                          ],
                          "receiverUri":"https://store.vtexpayments.com.br/split/v976778amgh/payments",
                          "gatewayCallbackTemplatePath":"/checkout/gatewayCallback/v976778amgh/{messageCode}"
                      },
                      "orders": [
                          {
                              "orderId":"v976778amgh-01",
                              "orderGroup":"v976778amgh",
                              "state":"order-created",
                              "isCheckedIn":false,
                              "sellerOrderId":"00-v976778amgh-01",
                              "storeId":null,
                              "value":15650,
                              "items": [
                                  {
                                      "uniqueId":"0F93E9C4926A4CD97FDD4C2599BDF9DB",
                                      "id":"2000016",
                                      "productId":"2000002",
                                      "refId":"35-Preto",
                                      "ean":null,
                                      "name":"Produto Sele√ß√£o SKU - Lista 35 - Preto",
                                      "skuName":"35 - Preto",
                                      "modalType":null,
                                      "priceValidUntil":"2018-02-16T23:42:44.5467295Z",
                                      "tax":0,
                                      "price":15000,
                                      "listPrice":15000,
                                      "manualPrice":null,
                                      "sellingPrice":15000,
                                      "rewardValue":1,
                                      "isGift":false,
                                      "additionalInfo": {
                                          "brandName":"Marca Um",
                                          "brandId":"1",
                                          "offeringInfo":null,
                                          "offeringType":null,
                                          "offeringTypeId":null},
                                          "preSaleDate":null,
                                          "productCategoryIds":"/12/28/",
                                          "productCategories": {
                                              "28":"Categoria 5-3",
                                              "12":"Departamento 5"},
                                              "defaultPicker":null,
                                              "handlerSequence":0,
                                              "handling":false,
                                              "quantity":1,
                                              "seller":"1",
                                              "imageUrl":"http://store.vteximg.com.br/arquivos/ids/168463-55-55/imagem-modo-lista.png",
                                              "detailUrl":"/produto-selecao-sku-lista/p",
                                              "components":[],
                                              "bundleItems":[],
                                              "attachments":[],
                                              "itemAttachment": {
                                                  "name":null,
                                                  "content":{}
                                              },
                                              "attachmentOfferings":[],
                                              "offerings":[],
                                              "priceTags":[],
                                              "availability":"available",
                                              "measurementUnit":"un",
                                              "unitMultiplier":1.0000
                                          }
                              ],
                                      "sellers": [
                                          {
                                              "id":"1",
                                              "name":"Store",
                                              "logo":""
                                          }
                                      ],
                                      "totals": [
                                          {
                                              "id":"Items",
                                              "name":"Total dos Itens",
                                              "value":15000
                                          },
                                          {
                                              "id":"Discounts",
                                              "name":"Total dos Descontos",
                                              "value":0
                                          },
                                          {
                                              "id":"Shipping",
                                              "name":"Total do Frete",
                                              "value":650
                                          },
                                          {
                                              "id":"Tax",
                                              "name":"Total da Taxa",
                                              "value":0
                                          }
                                      ],
                                      "clientProfileData": {
                                          "attachmentId":"clientProfileData",
                                          "email":"marcelo@vtex.com.br",
                                          "firstName":"Marcelo",
                                          "lastName":"Couto",
                                          "document":"71279846675",
                                          "documentType":"cpf",
                                          "phone":"1234567890",
                                          "corporateName":null,
                                          "tradeName":null,
                                          "corporateDocument":null,
                                          "stateInscription":null,
                                          "corporatePhone":null,
                                          "isCorporate":false,
                                          "profileCompleteOnLoading":null,
                                          "profileErrorOnLoading":null
                                      },
                                      "ratesAndBenefitsData": {
                                          "attachmentId":"ratesAndBenefitsData",
                                          "rateAndBenefitsIdentifiers":[],
                                          "teaser":[]
                                      },
                                      "shippingData": {
                                          "attachmentId":"shippingData",
                                          "address": {
                                              "addressType":"residential",
                                              "receiverName":"Marcelo",
                                              "addressId":"49ad09e5fba8434a8ff1e0faa4b60ceb",
                                              "postalCode":"28050987",
                                              "city":"Rio de Janeiro",
                                              "state":"RJ",
                                              "country":"BRA",
                                              "street":"Rua da minha casa",
                                              "number":"123",
                                              "neighborhood":"Copacabana",
                                              "complement":"15¬∫ andar",
                                              "reference":null,
                                              "geoCoordinates":[]
                                          },
                                          "logisticsInfo": [
                                              {
                                                  "itemIndex":0,
                                                  "selectedSla":"Normal",
                                                  "slas": [
                                                      {
                                                          "id":"n2_2",
                                                          "name":"n2_2",
                                                          "deliveryIds": [
                                                              {
                                                                  "courierId":"1de4790",
                                                                  "warehouseId":"1_1",
                                                                  "dockId":"N2",
                                                                  "courierName":"N2_2",
                                                                  "quantity":1
                                                              }
                                                          ],
                                                          "shippingEstimate":"6bd",
                                                          "shippingEstimateDate":null,
                                                          "lockTTL":"7d",
                                                          "availableDeliveryWindows": [
                                                              {
                                                                  "startDateUtc":"2017-03-27T00:00:00+00:00",
                                                                  "endDateUtc":"2017-03-27T00:00:00+00:00",
                                                                  "price":0,
                                                                  "lisPrice":0,
                                                                  "tax":0
                                                              },
                                                              {
                                                                  "startDateUtc":"2017-03-28T00:00:00+00:00",
                                                                  "endDateUtc":"2017-03-28T00:00:00+00:00",
                                                                  "price":0,
                                                                  "lisPrice":0,
                                                                  "tax":0
                                                              }
                                                          ],
                                                          "deliveryWindow":null,
                                                          "price":650,
                                                          "listPrice":650,
                                                          "tax":0,
                                                          "pickupStoreInfo": {
                                                              "isPickupStore":false,
                                                              "friendlyName":null,
                                                              "address":null,
                                                              "additionalInfo":null,
                                                              "dockId":null
                                                          }
                                                      },
                                                      {
                                                          "id":"Normal",
                                                          "name":"Normal",
                                                          "deliveryIds": [
                                                              {
                                                                  "courierId":"2p1t",
                                                                  "warehouseId":"1_1",
                                                                  "dockId":"N2",
                                                                  "courierName":"Post_Test_2",
                                                                  "quantity":1
                                                              }
                                                          ],
                                                          "shippingEstimate":"6bd",
                                                          "shippingEstimateDate":null,
                                                          "lockTTL":"7d",
                                                          "availableDeliveryWindows":[],
                                                          "deliveryWindow":null,
                                                          "price":650,
                                                          "listPrice":650,
                                                          "tax":0,
                                                          "pickupStoreInfo": {
                                                              "isPickupStore":false,
                                                              "friendlyName":null,
                                                              "address":null,
                                                              "additionalInfo":null,
                                                              "dockId":null
                                                          }
                                                      },
                                                      {
                                                          "id":"P_T",
                                                          "name":"P_T",
                                                          "deliveryIds": [
                                                              {
                                                                  "courierId":"1p1t",
                                                                  "warehouseId":"1_1",
                                                                  "dockId":"N2",
                                                                  "courierName":"Post_Teste",
                                                                  "quantity":1
                                                              }
                                                          ],
                                                          "shippingEstimate":"6bd",
                                                          "shippingEstimateDate":null,
                                                          "lockTTL":"7d",
                                                          "availableDeliveryWindows":[],
                                                          "deliveryWindow":null,
                                                          "price":1462,
                                                          "listPrice":1462,
                                                          "tax":0,
                                                          "pickupStoreInfo": {
                                                              "isPickupStore":false,
                                                              "friendlyName":null,
                                                              "address":null,
                                                              "additionalInfo":null,
                                                              "dockId":null
                                                          }
                                                      },
                                                      {
                                                          "id":"Econ√¥mica",
                                                          "name":"Econ√¥mica",
                                                          "deliveryIds": [
                                                              {
                                                                  "courierId":"2B9C2C7D-7A76-485D-94EF-701D041E448C",
                                                                  "warehouseId":"1_1",
                                                                  "dockId":"1_1_1",
                                                                  "courierName":"Leve 30kg (De: 10000-000 At√©: 25999-999) ",
                                                                  "quantity":1
                                                              }
                                                          ],
                                                          "shippingEstimate":"20bd",
                                                          "shippingEstimateDate":null,
                                                          "lockTTL":"7d",
                                                          "availableDeliveryWindows":[],
                                                          "deliveryWindow":null,
                                                          "price":2265,
                                                          "listPrice":2265,
                                                          "tax":0,
                                                          "pickupStoreInfo": {
                                                              "isPickupStore":false,
                                                              "friendlyName":null,
                                                              "address":null,
                                                              "additionalInfo":null,
                                                              "dockId":null
                                                          }
                                                      }
                                                  ],
                                                  "shipsTo":[
                                                      "BRA"
                                                  ],
                                                  "itemId":"2000016"
                                              }
                                          ],
                                          "availableAddresses": [
                                              {
                                                  "addressType":"residential",
                                                  "receiverName":"Marcelo",
                                                  "addressId":"49ad09e5fba8434a8ff1e0faa4b60ceb",
                                                  "postalCode":"28050642",
                                                  "city":"Rio de Janeiro",
                                                  "state":"RJ",
                                                  "country":"BRA",
                                                  "street":"Rua da minha casa",
                                                  "number":"123",
                                                  "neighborhood":"Copacabana",
                                                  "complement":"15¬∫ andar",
                                                  "reference":null,
                                                  "geoCoordinates":[]
                                              }
                                          ]
                                      },
                                      "paymentData": {
                                          "attachmentId":"paymentData",
                                          "transactionId":"62FEDE228E2144649CF67812C4E5DD87",
                                          "payments":[],
                                          "giftCards":[],
                                          "transactions": [
                                              {
                                                  "isActive":true,
                                                  "transactionId":"62FEDE228E2144649CF67812C4E5DD87",
                                                  "merchantName":"STORE",
                                                  "payments":[]
                                              }
                                          ],
                                          "merchantName":"STORE"},
                                          "clientPreferencesData": {
                                              "attachmentId":"clientPreferencesData",
                                              "locale":"pt-BR",
                                              "optinNewsLetter":true
                                          },
                                          "giftRegistryData":null,
                                          "marketingData":null,
                                          "storePreferencesData": {
                                              "countryCode":"BRA",
                                              "checkToSavePersonDataByDefault":false,
                                              "templateOptions": {
                                                  "toggleCorporate":false
                                              },
                                              "timeZone":"E. South America Standard Time",
                                              "currencyCode":"BRL",
                                              "currencyLocale":1046,
                                              "currencySymbol":"R$",
                                              "currencyFormatInfo": {
                                                  "currencyDecimalDigits":2,
                                                  "currencyDecimalSeparator":",",
                                                  "currencyGroupSeparator":".",
                                                  "currencyGroupSize":3,
                                                  "startsWithCurrencySymbol":true
                                              }
                                          },
                                          "openTextField": {
                                              "attachmentId":"openTextField",
                                              "value":null
                                          },
                                          "changeData":null,
                                          "salesChannel":"1",
                                          "followUpEmail":"f1e7309d88dd4633825ce183d52a50a6@ct.vtex.com.br",
                                          "creationDate":"2017-02-16T23:42:43.9605088Z",
                                          "lastChange":"2017-02-16T23:42:47.62285Z",
                                          "timeZoneCreationDate":"2017-02-16T21:42:43.9605088",
                                          "timeZoneLastChange":"2017-02-16T21:42:47.62285",
                                          "isCompleted":false,
                                          "hostName":"ambienteqa",
                                          "merchantName":null,
                                          "userType":"",
                                          "roundingError":0
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/checkout/pub/orders": {
      "put": {
        "tags": ["Order placement"],
        "summary": "Place order",
        "description": "Places order without having any prior cart information. This means all information on items, client, payment and shipping mus be sent in the body.",
        "operationId": "PlaceOrder",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account. Used as part of the URL.",
            "schema": {
              "type": "string",
              "default": "apiexamples"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "description": "Environment to be used. It is passed as part of the URL.",
            "schema": {
              "type": "string",
              "default": "vtexcommercestable"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "items",
                  "clientProfileData",
                  "shippingData",
                  "paymentData"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "description": "Array of objects containing information on each of the order's items.",
                    "items":{
                      "type": "object",
                      "required": [
                        "id",
                        "quantity",
                        "seller"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The SKU ID.",
                          "example": "123"
                        },
                        "quantity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The quantity of items of this specific SKU in the cart to be simulated.",
                          "example": 1
                        },
                        "seller": {
                          "type": "string",
                          "description": "The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.",
                          "example": "1"
                        },
                        "commission": {
                          "type": "integer",
                          "description": "Comission.",
                          "example": 10
                        },
                        "freightCommission": {
                          "type": "integer",
                          "description": "Freight comission",
                          "example": 10
                        },
                        "price": {
                          "type": "integer",
                          "description": "Item price within the context of the order without separating cents. For example, $24.99 is represented `2499`.",
                          "example": 2499
                        },
                        "bundleItems": {
                          "type": "array",
                          "description": "Information on services sold along with the SKU. Example: a gift package.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                  "type": "string",
                                  "description": "Service type.",
                                  "example": "type-example"
                              },
                              "id": {
                                  "type": "integer",
                                  "description": "Service identifier.",
                                  "example": "id-example"
                              },
                              "name": {
                                  "type": "string",
                                  "description": "Service name.",
                                  "example": "name-example"
                              },
                              "price": {
                                  "type": "integer",
                                  "description": "Service price. The last two digits are the cents.",
                                  "example": 199
                              }
                            }
                          }
                        },
                        "itemAttachment": {
                          "type": "object",
                          "description": "Item attachment.",
                          "properties": {
                            "name": {
                                "type": "string",
                                "description": "Attachment name.",
                                "example": "name-example"
                            },
                            "content": {
                                "type": "string",
                                "description": "Content referring to the customization requested by the customer.",
                                "example": "content-example"
                            }
                        }
                        },
                        "attachments": {
                          "type": "array",
                          "description": "Array containing information on attachments.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "priceTags": {
                          "type": "array",
                          "description": "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "identifier": {
                                "type": "string",
                                "description": "Price tag identifier.",
                                "example": "1234abc-5678b-1234c"
                              },
                              "isPercentual": {
                                "type": "boolean",
                                "description": "`true` if price tag value is applied through a percentage.",
                                "default": false
                              },
                              "name": {
                                "type": "string",
                                "description": "Price tag name.",
                                "example": "discount@name-1234abc-5678b-1234c"
                              },
                              "rawValue": {
                                "type": "integer",
                                "description": "Price tag value.",
                                "example": -12
                              },
                              "value": {
                                "type": "integer",
                                "description": "Price tag raw value.",
                                "example": -1200
                              }
                            }
                          }
                        },
                        "measurementUnit": {
                          "type": "string",
                          "description": "SKU measurement unit.",
                          "example": "g"
                        },
                        "unitMultiplier": {
                          "type": "integer",
                          "description": "SKU unit multiplier.",
                          "example": 1
                        },
                        "isGift": {
                          "type": "boolean",
                          "description": "Indicates whether the order is a gift.",
                          "default": false
                        }
                      },
                      "example": {
                        "id": "123456789",
                        "quantity": 1,
                        "seller": "1"
                      }
                    }
                  },
                  "clientProfileData": {
                    "type": "object",
                    "description": "Customer's profile information.",
                    "required": [
                      "email",
                      "firstName",
                      "lastName",
                      "documentType",
                      "document"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Customer's email address.",
                        "example": "customer@examplemail.com"
                      },
                      "firstName": {
                        "type": "string",
                        "description": "Customer's first name.",
                        "example": "first-name"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Customer's last name.",
                        "example": "last-name"
                      },
                      "documentType": {
                        "type": "string",
                        "description": "Type of the document informed by the customer.",
                        "example": "cpf"
                      },
                      "document": {
                        "type": "string",
                        "description": "Document number informed by the customer.",
                        "example": "123456789"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Customer's phone number.",
                        "example": "+55110988887777"
                      },
                      "corporateName": {
                        "type": "string",
                        "description": "Company name, if the customer is a legal entity.",
                        "example": "company-name"
                      },
                      "tradeName": {
                        "type": "string",
                        "description": "Trade name, if the customer is a legal entity.",
                        "example": "trade-name"
                      },
                      "corporateDocument": {
                        "type": "string",
                        "description": "Corporate document, if the customer is a legal entity.",
                        "example": "12345678000100"
                      },
                      "stateInscription": {
                        "type": "string",
                        "description": "State inscription, if the customer is a legal entity.",
                        "example": "12345678"
                      },
                      "corporatePhone": {
                        "type": "string",
                        "description": "Corporate phone number, if the customer is a legal entity.",
                        "example": "+551100988887777"
                      },
                      "isCorporate": {
                        "type": "boolean",
                        "description": "`true` if the customer is a legal entity.",
                        "example": false
                      }
                    }
                  },
                  "shippingData": {
                    "type": "object",
                    "description": "Shipping information.",
                    "properties": {
                      "address": {
                        "type": "object",
                        "description": "Shipping address.",
                        "required": [
                          "addressType",
                          "receiverName",
                          "postalCode",
                          "city",
                          "state",
                          "country",
                          "street",
                          "number"
                        ],
                        "properties": {
                          "addressType": {
                            "type": "string",
                            "description": "Type of address. For example, `Residential` or `Pickup`, among others.",
                            "example": "residential"
                          },
                          "receiverName": {
                            "type": "string",
                            "description": "Name of the person who is going to receive the order.",
                            "example": "receiver-name"
                          },
                          "addressId": {
                            "type": "string",
                            "description": "Address ID.",
                            "example": "Home"
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Postal Code.",
                            "example": "12345-000"
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the shipping address.",
                            "example": "Rio de Janeiro"
                          },
                          "state": {
                            "type": "string",
                            "description": "State of the shipping address.",
                            "example": "Rio de Janeiro"
                          },
                          "country": {
                            "type": "string",
                            "description": "Three letter ISO code of the country of the shipping address.",
                            "example": "BRA"
                          },
                          "street": {
                            "type": "string",
                            "description": "Street of the shipping address.",
                            "example": "Praia de Botafogo"
                          },
                          "number": {
                            "type": "string",
                            "description": "Number of the building, house or apartment in the shipping address.",
                            "example": "300"
                          },
                          "neighborhood": {
                            "type": "string",
                            "description": "Neighborhood of the shipping address.",
                            "example": "Botafogo"
                          },
                          "complement": {
                            "type": "string",
                            "description": "Complement to the shipping address in case it applies.",
                            "example": "3rd floor"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Complement that might help locate the shipping address more precisely in case of delivery.",
                            "example": "Grey building"
                          },
                          "geoCoordinates": {
                            "type": "array",
                            "description": "Array with two strings with geocoordinates, first latitude, then longitude.",
                            "items": {
                              "type": "string",
                              "example": "00.00000"
                            }
                          }
                        }                       
                      },
                      "logisticsInfo": {
                        "type": "array",
                        "description": "Array of objects containing logistics information of each item.",
                        "items": {
                          "type": "object",
                          "required": [
                            "itemIndex",
                            "selectedSla",
                            "price"
                          ],
                          "properties": {
                            "itemIndex": {
                              "type": "integer",
                              "description": "Index of the item in the `items` array, starting from 0.",
                              "example": 0
                            },
                            "selectedSla": {
                              "type": "string",
                              "description": "Selected shipping option",
                              "example": "Express"
                            },
                            "lockTTL": {
                              "type": "string",
                              "description": "Logistics reservation waiting time.",
                              "example": "8d"
                            },
                            "shippingEstimate": {
                              "type": "string",
                              "description": "Estimated time until delivery for the item.",
                              "example": "7d"
                            },
                            "price": {
                              "type": "integer",
                              "description": "Shipping price for the item. Does not account for the whole order's shipping price.",
                              "example": 1099
                            },
                            "deliveryWindow": {
                              "type": "object",
                              "description": "In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.",
                              "properties": {
                                "startDateUtc": {
                                  "type": "string",
                                  "description": "Delivery window starting day and time in UTC.",
                                  "example": "2021-07-13T00:00:00+00:00"
                                },
                                "endDateUtc": {
                                  "type": "string",
                                  "description": "Delivery window ending day and time in UTC.",
                                  "example": "2021-07-13T23:59:59+00:00"
                                },
                                "price": {
                                  "type": "integer",
                                  "description": "Delivery window price.",
                                  "default": 0
                                },
                                "lisPrice": {
                                  "type": "integer",
                                  "description": "Delivery window list price.",
                                  "default": 0
                                },
                                "tax": {
                                  "type": "integer",
                                  "description": "Delivery window tax.",
                                  "default": 0
                                }
                              }
                            }
                          }
                        }
                      },
                      "updateStatus": {
                        "type": "string",
                        "description": "Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                        "example": "updated"
                      }
                    }
                  },
                  "paymentData": {
                    "type": "object",
                    "required": [
                      "payments"
                    ],
                    "description": "Payment infomation.",
                    "properties": {
                      "giftCards": {
                        "type": "array",
                        "description": "Gift card information, if it applies to the order.",
                        "items": {
                          "type": "object",
                          "required": [
                            "redemptionCode",
                            "value"
                          ],
                          "properties": {
                            "redemptionCode": {
                              "type": "string",
                              "description": "Gift card redemption code.",
                              "example": "HYUO-TEZZ-QFFT-HTFR"
                            },
                            "value": {
                              "type": "integer",
                              "description": "Gift card value.",
                              "example": 500
                            },
                            "balance": {
                              "type": "integer",
                              "description": "Gift card balance.",
                              "example": 500
                            },
                            "name": {
                              "type": "string",
                              "description": "Gift card name.",
                              "example": "name-example"
                            },
                            "id": {
                              "type": "integer",
                              "description": "Gift card ID.",
                              "example": "1390324156495k195pmab4rall3di"
                            },
                            "inUse": {
                              "type": "boolean",
                              "description": "Indicates whether gift card is in use.",
                              "example": "true"
                            },
                            "isSpecialCard": {
                              "type": "boolean",
                              "description": "Indicates whether gift card is special.",
                              "example": "false"
                            }
                          }
                        }
                      },
                      "giftCardMessages": {
                        "type": "array",
                        "description": "Array of gift card messages.",
                        "items": {
                          "example": "message-example"
                        }
                      },
                      "paymentSystems": {
                        "type": "array",
                        "description": "",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "description": "",
                              "example": "Visa"
                            },
                            "groupName": {
                              "type": "string",
                              "description": "",
                              "example": "creditCardPaymentGroup"
                            },
                            "validator": {
                              "type": "object",
                              "description": "Payment system validator.",
                              "properties": {
                                "regex": {
                                  "type": "string",
                                  "description": "",
                                  "example": "^4"
                                },
                                "mask": {
                                  "type": "string",
                                  "description": "Validator mask.",
                                  "example": "9999 9999 9999 9999"
                                },
                                "cardCodeRegex": {
                                  "type": "string",
                                  "description": "Card code regular expression.",
                                  "example": "[^0-9]"
                                },
                                "cardCodeMask": {
                                  "type": "string",
                                  "description": "Card code mask.",
                                  "example": "999"
                                },
                                "weights": {
                                  "type": "array",
                                  "description": "Weights.",
                                  "items": {
                                    "type": "integer"
                                  },
                                  "example": [2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2]
                                }
                              }
                            },
                            "stringId": {
                              "type": "string",
                              "description": "String ID.",
                              "example": "12345abc"
                            },
                            "template": {
                              "type": "string",
                              "description": "Template.",
                              "example": "creditCardPaymentGroup-template"
                            },
                            "requiresDocument": {
                              "type": "boolean",
                              "description": "Indicates whether a document is required.",
                              "default": false
                            },
                            "selected": {
                              "type": "boolean",
                              "description": "Indicates whether this payment system has been selected.",
                              "default": false
                            },
                            "isCustom": {
                              "type": "boolean",
                              "description": "Indicates whether it is custom.",
                              "default": false
                            },
                            "description": {
                              "type": "string",
                              "description": "Description.",
                              "example": "description-example"
                            }
                          }
                        }
                      },
                      "payments": {
                        "type": "array",
                        "description": "Payment information.",
                        "items": {
                          "type": "object",
                          "required": [
                            "paymentSystem",
                            "referenceValue",
                            "value",
                            "installments"
                          ],
                          "description": "",
                          "properties": {
                            "accountId": {
                              "type": "string",
                              "description": "Account ID.",
                              "example": "accountID-example"
                            },
                            "bin": {
                              "type": "string",
                              "description": "Payment bin.",
                              "example": "2"
                            },
                            "installments": {
                              "type": "integer",
                              "description": "Number of installments.",
                              "example": 2
                            },
                            "paymentSystem": {
                              "type": "string",
                              "description": "Payment system.",
                              "example": "12"
                            },
                            "referenceValue": {
                              "type": "integer",
                              "description": "Reference value for calculating interest rates, in case it applies.",
                              "example": 16175
                            },
                            "value": {
                              "type": "integer",
                              "description": "Value including interest, in case it applies.",
                              "example": 16175
                            }
                          }
                        }
                      },
                      "updateStatus": {
                        "type": "string",
                        "description": "Indicates whether this object's information is up to date according to the order's items. An order can not be placed if `\"outdated\"`",
                        "example": "updated"
                      }
                    }
                  },
                  "marketingData": {
                    "type": "object",
                    "properties": {
                        "utmSource": {
                            "type": "string",
                            "description": "UTM source.",
                            "example": "Facebook"
                        },
                        "utmMedium": {
                            "type": "string",
                            "description": "UTM medium.",
                            "example": "CPC"
                        },
                        "utmCampaign": {
                            "type": "string",
                            "description": "UTM campaign",
                            "example": "Black friday"
                        },
                        "utmiPage": {
                            "type": "string",
                            "description": "utmi_page (internal utm)",
                            "example": "utmi_page-example"
                        },
                        "utmiPart": {
                            "type": "string",
                            "description": "utmi_part (internal utm)",
                            "example": "utmi_part-exmaple"
                        },
                        "utmiCampaign": {
                            "type": "string",
                            "description": "utmi_campaign (internal utm)",
                            "example": "utmi_campaign-exmaple"
                        }
                    }
                  },
                  "openTextField": {
                    "type": "string",
                    "description": "Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1)",
                    "example": "open-text-example"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": [
                      {
                        "marketplaceOrderId": "956",
                        "orderId": "MBR-956",
                        "followUpEmail": "9762a2a9028a4b5d8eb9a8ff909d15ce@ct.vtex.com.br",
                        "items": [
                          {
                            "id": "2",
                            "quantity": 1,
                            "seller": "1",
                            "priceTable": null,
                            "comission": 0,
                            "freightComission": 0,
                            "price": 13890,
                            "bundleItems": [],
                            "priceTags": [],
                            "measurementUnit": "un",
                            "unitMultiplier": 1.0000,
                            "isGift": false
                          }
                        ],
                        "clientProfileData": {
                          "email": "fba45537f5c84d4092cf064da742fe3d@ct.vtex.com.br",
                          "firstName": "J√∫lio",
                          "lastName": "Augusto de Oliveira",
                          "documentType": "cpf",
                          "document": "11417984642",
                          "phone": "395555258",
                          "corporateName": null,
                          "tradeName": null,
                          "corporateDocument": null,
                          "stateInscription": null,
                          "corporatePhone": null,
                          "isCorporate": false,
                          "userProfileId": null
                        },
                        "shippingData": {
                          "isFOB": false,
                          "address": {
                            "addressType": "Residencial",
                            "receiverName": "J√∫lio Augusto de Oliveira",
                            "addressId": "Casa",
                            "postalCode": "98776003",
                            "city": "Americana",
                            "state": "SP",
                            "country": "BRA",
                            "street": "Rua da casa",
                            "number": "31187",
                            "neighborhood": "Grande circo",
                            "complement": null,
                            "reference": "Bairro do foca / Posto de Sa√∫de 65",
                            "geoCoordinates": []
                          },
                          "selectedaddresses": [
                            {
                              "addressType": "Residencial",
                              "receiverName": "J√∫lio Augusto de Oliveira",
                              "addressId": "Casa",
                              "postalCode": "98776003",
                              "city": "Americana",
                              "state": "SP",
                              "country": "BRA",
                              "street": "Rua da casa",
                              "number": "31187",
                              "neighborhood": "Grande circo",
                              "complement": null,
                              "reference": "Bairro do foca / Posto de Sa√∫de 65",
                              "geoCoordinates": []
                            }
                          ],
                          "logisticsInfo": [
                            {
                              "itemIndex": 0,
                              "selectedSla": "Correios",
                              "addressId": "Casa",
                              "selectedDeliveryChannel": "delivery",
                              "deliveryIds": [
                                {
                                  "warehouseId": "1_1",
                                  "dockId": "1"
                                }
                              ],
                              "lockTTL": "8d",
                              "shippingEstimate": "7d",
                              "price": 1090,
                              "deliveryWindow": null
                            }
                          ],
                          "trackingHints": []
                        },
                        "paymentData":null,
                        "customData": null
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "OrderFormSimulationRequest": {
        "required": ["items", "country"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "description": "Array containing information about the SKUs inside the cart to be simulated."
          },
          "country": {
            "type": "string"
          }
        },
        "example": {
          "items": [
            {
              "id": "{{skuId}}",
              "quantity": 1,
              "seller": "1"
            }
          ],
          "country": "{{countryCode-ISO-3-digits}}"
        }
      },
      "Item": {
        "title": "Item",
        "required": ["id", "quantity", "seller"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The SKU ID."
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of items of this specific SKU in the cart to be simulated."
          },
          "seller": {
            "type": "string",
            "description": "The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin."
          }
        },
        "example": {
          "id": "{{skuId}}",
          "quantity": 1,
          "seller": "1"
        }
      },
      "ItemsUpdateRequest": {
        "required": ["orderItems"],
        "type": "object",
        "properties": {
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            },
            "description": "Array containing the cart items. Each object inside this array corresponds to a different item."
          }
        },
        "example": {
          "orderItems": [
            {
              "quantity": 0,
              "index": 0
            },
            {
              "seller": "1",
              "quantity": 1,
              "id": "38"
            },
            {
              "seller": "1",
              "quantity": 2,
              "id": "35"
            }
          ]
        }
      },
      "OrderItem": {
        "required": ["quantity"],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of the item inside the cart."
          },
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "The index of the item in the cart. Each item is identified by an index, starting in 0."
          },
          "seller": {
            "type": "string",
            "description": "The seller responsible for the SKU."
          },
          "id": {
            "type": "string",
            "description": "The ID of the SKU in VTEX platform."
          }
        },
        "example": {
          "quantity": 0,
          "index": 0
        }
      },
      "PriceChangeRequest": {
        "required": ["price"],
        "type": "object",
        "properties": {
          "price": {
            "type": "integer",
            "format": "int32",
            "description": "The new price of the item."
          }
        },
        "example": {
          "price": 10000
        }
      },
      "SetsinglecustomfieldvalueRequest": {
        "required": ["value"],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value you want to set to the specified field."
          }
        },
        "example": {
          "value": ""
        }
      },
      "UpdateorderFormconfigurationRequest": {
        "required": [
          "paymentConfiguration",
          "taxConfiguration",
          "minimumQuantityAccumulatedForItems",
          "decimalDigitsPrecision",
          "minimumValueAccumulated",
          "apps",
          "allowMultipleDeliveries",
          "allowManualPrice"
        ],
        "type": "object",
        "properties": {
          "paymentConfiguration": {
            "$ref": "#/components/schemas/PaymentConfiguration"
          },
          "taxConfiguration": {
            "type": "object",
            "description": "External tax service configuration.",
            "nullable": true,
            "properties": {
              "url": {
                "type": "string",
                "nullable": true,
                "description": "Endpoint URL."
              },
              "authorizationHeader": {
                "type": "string",
                "description": "Authorization header.",
                "nullable": true
              },
              "allowExecutionAfterErrors": {
                "type": "boolean",
                "description": "Allows the purchase to continue even if a tax system problem happens."
              },
              "integratedAuthentication": {
                "type": "boolean",
                "description": "When the tax system is in VTEX auth, use this flag instead of the `authorizationHeader`."
              },
              "appId": {
                "type": "string",
                "description": "Custom data ID sent to the tax system."
              }
            }
          },
          "minimumQuantityAccumulatedForItems": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum SKU quantity by cart."
          },
          "decimalDigitsPrecision": {
            "type": "integer",
            "format": "int32",
            "description": "Number of price digits."
          },
          "minimumValueAccumulated": {
            "type": "integer",
            "nullable": true,
            "description": "Minimum cart value."
          },
          "apps": {
            "type": "object",
            "nullable": true,
            "description": "Apps configuration.",
            "properties": {
              "id": {
                "type": "string",
                "description": "App ID."
              },
              "fields": {
                "type": "array",
                "description": "Array of fields available to the app.",
                "items": {
                  "type": "string"
                }
              },
              "major": {
                "type": "integer",
                "description": "App major version."
              }
            }
          },
          "allowMultipleDeliveries": {
            "type": "boolean",
            "nullable": true,
            "description": "On the same purchase, allows the selection of items from multiple delivery channels."
          },
          "allowManualPrice": {
            "type": "boolean",
            "nullable": true,
            "description": "Allows the editing of SKU prices right in the cart."
          },
          "maxNumberOfWhiteLabelSellers": {
            "type": "integer",
            "description": "Allows the input of a limit of white label sellers involved on the cart."
          },
          "maskFirstPurchaseData": {
            "type": "boolean",
            "description": "Allows, on a first purchase, masking client's data. It could be useful when a shared cart is used and the client doesn't want to share its data."
          }
        },
        "example": {
          "paymentConfiguration": {
            "requiresAuthenticationForPreAuthorizedPaymentOption": false
          },
          "taxConfiguration": null,
          "minimumQuantityAccumulatedForItems": 1,
          "decimalDigitsPrecision": 2,
          "minimumValueAccumulated": null,
          "apps": null,
          "allowMultipleDeliveries": null,
          "allowManualPrice": null
        }
      },
      "PaymentConfiguration": {
        "title": "PaymentConfiguration",
        "description": "Payment Configuration object",
        "required": ["requiresAuthenticationForPreAuthorizedPaymentOption"],
        "type": "object",
        "properties": {
          "requiresAuthenticationForPreAuthorizedPaymentOption": {
            "type": "boolean",
            "description": "Determines whether pre-authorized payments require authentication"
          },
          "allowInstallmentsMerge": {
            "type": "boolean",
            "description": "By default (when `false`), on a multi-seller purchase is on the run, a simple intersection with installments options configured by every seller will be available. When `true`, this option allows a more complex but flexible installment option, since it considers max installments of every seller configuration, even if those don't match. Installment values ‚Äã‚Äãmay not be equal in this case."
          }
        },
        "example": {
          "requiresAuthenticationForPreAuthorizedPaymentOption": false,
          "allowInstallmentsMerge": false
        }
      },
      "WaitingTime": {
        "type": "object",
        "required": ["waitingTime"],
        "properties": {
          "waitingTime": {
            "type": "integer",
            "description": "Number of days after order cancelation by a seller, during which another seller may be assigned to fulfill the order."
          }
        }
      }
    },
    "securitySchemes": {
      "appKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-VTEX-API-AppKey"
      },
      "appToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-VTEX-API-AppToken"
      }
    }
  },
  "tags": [
    {
      "name": "OrderForm"
    },
    {
      "name": "Cart Update",
      "description": "This functionality allows add/remove/edit items on orderform."
    },
    {
      "name": "Custom Data",
      "description": "This functionality allows adding custom fields in orderform API.\n\nThese fields are not reflected in the checkout UI unless custom implementations are performed. It can be useful also for orders placed directly via checkout API.\n\nYour configuration is made via `/configuration` API, described in this collection.\n\nValues for `appId` and `appFieldName` must match the configuration."
    },
    {
      "name": "Configuration",
      "description": "**Important:** always obtain the current configuration before performing an update to ensure that you are modifying only the wanted properties, or the old values can be overwritten.\n\n|Attribute|Type|Description|\n---|---|---\n| paymentConfiguration > requiresAuthenticationFor PreAuthorizedPaymentOption | boolean | * Require user authentication for automatically authorized payments|\n`taxConfiguration`| object | Configuration for external tax services\n `minimumQuantityAccumulatedForItems`| integer | * Minimum number of items in cart\n `decimalDigitsPrecision`  | integer | * Number of decimal digits to be considered (0, 1 or 2)\n `minimumValueAccumulated` | integer | * Minimum total value in cart (in cents)\n|`apps`| object | Custom Data configuration\n|`allowMultipleDeliveries`| boolean | Feature toggle for multiple deliveries\n|`allowManualPrice`| boolean |Feature toggle for manual price\n\n\n\\* These configurations are also available via admin: {{accountName}}.myvtex.com/admin/checkout/#/configurations\n\nOther properties can be changed only via API:\n- taxConfiguration\n- apps (custom data)\n- allowMultipleDeliveries\n- allowManualPrice"
    },
    {
      "name": "Fulfillment",
      "description": ""
    },
    {
      "name": "Order placement",
      "description": "These endpoints are involved in the process of finalizing a purchase and placing the order."
    }
  ],
  "security": [
    {
      "appKey": [],
      "appToken": []
    }
  ]
}
