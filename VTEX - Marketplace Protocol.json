{
	"openapi": "3.0.0",
	"info": {
		"title": "Marketplace Protocol",
		"description": "The _Marketplace Protocol_ is a set of API requests and definitions to help you integrate external sellers into a VTEX marketplace as well as external marketplaces into VTEX sellers.",
		"contact": {},
		"version": "1.0"
	},
	"servers": [
		{
			"url": "https://{SellerEndpoint}/api",
			"description": ""
		}
	],
	"paths": {
		"/pvt/orderForms/simulation?sc={salesChannelId}&an={merchantName}": {
			"post": {
				"tags": [
					"External Seller"
				],
				"summary": "Fulfillment Simulation",
				"description": "When the Change Notification request returns a response with status 200, it means that the SKU already exists in the marketplace. Whenever this happens, the marketplace will call the seller to get two updated information about the SKU: Price and Inventory.\n\nThe seller needs to have an endpoint implemented in order to receive this call and send a response containing the requested information to the marketplace. We call it the Fulfillment Simulation endpoint.\n\nThe marketplace will send an object containing an array of items. The seller must use this list to get the updated information about the referred SKUs and send them back to the marketplace, following the response format explained in the API Reference.",
				"operationId": "fulfillment-simulation",
				"parameters": [                    
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/fulfillmentSimulation"
							},
							"example": {
								
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {								
								"examples": {
                                    "response": {
                                        "value": {                                 
                                            "country": "BRA",
                                            "items": [
                                                    {
                                                    "attachmentOfferings": [{
                                                        "name": "Customization",
                                                        "required": true,
                                                        "schema": {
                                                        "Name": {
                                                            "maximumNumberOfCharacters": 20,
                                                            "domain": []
                                                        },
                                                        "Number": {
                                                            "maximumNumberOfCharacters": 20,
                                                            "domain": []
                                                        }
                                                        }
                                                    }],
                                                    "id": "2000037",
                                                    "listPrice": 67203,
                                                    "measurementUnit": "un",
                                                    "merchantName": "mySeller1",
                                                    "offerings":[
                                                    {
                                                        "type": "Warranty",
                                                        "id": "5",
                                                        "name": "1 year warranty",
                                                        "price": 10000
                                                    }
                                                    ],
                                                    "price": 67203,
                                                    "priceTags": [],
                                                    "priceValidUntil": null,
                                                    "quantity": 1,
                                                    "requestIndex": 0,
                                                    "seller": "1",
                                                    "unitMultiplier": 1
                                                }
                                            ],
                                            "logisticsInfo": [
                                                {
                                                    "itemIndex": 0,
                                                    "quantity": 1,
                                                    "shipsTo": [
                                                        "BRA"
                                                    ],
                                                    "slas": [
                                                        {
                                                        "id": "Regular",
                                                        "deliveryChannel": "delivery",
                                                        "name": "Regular Delivery",
                                                        "price": 846,
                                                        "shippingEstimate": "19bd"
                                                        },
                                                        {
                                                        "id": "Curbside pickup",
                                                        "deliveryChannel": "pickup-in-point",
                                                        "name": "Curbside pickup",
                                                        "shippingEstimate": "0bd",
                                                        "price": 0,
                                                        "availableDeliveryWindows": [
                                                            {
                                                            "startDateUtc": "2013-02-04T08:00:00+00:00",
                                                            "endDateUtc": "2013-02-04T13:00:00+00:00",
                                                            "price": 0
                                                            }
                                                        ],
                                                        "pickupStoreInfo": {
                                                            "isPickupStore": true,
                                                            "friendlyName": "Santa Felicidade",
                                                            "address": {
                                                                "addressType": "pickup",
                                                                "receiverName": null,
                                                                "addressId": "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                                                "postalCode": "82320-040",
                                                                "city": "Curitiba",
                                                                "state": "PR",
                                                                "country": "BRA",
                                                                "street": "Rua Domingos Strapasson",
                                                                "number": "100",
                                                                "neighborhood": "Santa Felicidade",
                                                                "complement": "Loja 10",
                                                                "reference": null,
                                                                "geoCoordinates": [
                                                                    -49.334934,
                                                                    -25.401705
                                                                ]
                                                            },
                                                            "additionalInfo": ""
                                                        }
                                                        }
                                                    ],
                                                    "stockBalance": 199,
                                                    "deliveryChannels": [
                                                        {
                                                        "id": "delivery",
                                                        "stockBalance": 179
                                                        },
                                                        {
                                                        "id": "pickup-in-point",
                                                        "stockBalance": 20
                                                        }
                                                    ]
                                                }
                                            ],
                                            "postalCode": "80250000"                                         
                                        }
                                    }
                                }
							}
						}
					}
				},
				"deprecated": false
			}
        },
        "/pvt/orders?sc={sellerId}&an={accountName}": {
            "post": {
                "tags": [
					"External Seller"
				],
				"summary": "Order Placement",
				"description": "Once the customer finishes their checkout, the marketplace needs to let the seller know there is a newly placed order. It does that by calling the **Order Placement** endpoint, which needs to be implemented by the seller.\n\nThe marketplace will send information such as the items contained in the cart, the client’s profile data, the shipping data, and the payment data. With all that, the seller will be able to create the order in their own store.",
				"operationId": "order-placement",
				"parameters": [                    
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/orderPlacement"
							},
							"example": {
								
							}
						}
					},
					"required": true
				},
				"responses": {
                    "200": {
						"description": "",
						"headers": {},
                        "content": {
                            "application/json": {								
								"examples": {
                                    "response": {
                                        "value": 
                                        {
                                            "marketplaceOrderId": "959311095",
                                            "marketplaceServicesEndpoint": "https://marketplaceservicesendpoint/",
                                            "marketplacePaymentValue": 11080,
                                            "items": [
                                               {
                                                  "id": "2002495",
                                                  "quantity": 1,
                                                  "Seller": "1",
                                                  "commission": 0,
                                                  "freightCommission": 0,
                                                  "price": 9990,
                                                  "bundleItems": [],
                                                  "itemAttachment": {
                                                     "name": null,
                                                     "content": {}
                                                  },
                                                  "attachments": [],
                                                  "priceTags": [],
                                                  "measurementUnit": null,
                                                  "unitMultiplier": 0,
                                                  "isGift": false
                                               }
                                            ],
                                            "clientProfileData": {
                                               "email": "32172239852@gmail.com.br",
                                               "firstName": "John",
                                               "lastName": "Smith",
                                               "documentType": null,
                                               "document": "3244239851",
                                               "phone": "399271258",
                                               "corporateName": null,
                                               "tradeName": null,
                                               "corporateDocument": null,
                                               "stateInscription": null,
                                               "corporatePhone": null,
                                               "isCorporate": false,
                                               "userProfileId": null
                                            },
                                            "shippingData": {
                                               "address": {
                                                  "addressType": "Residencial",
                                                  "receiverName": "John Smith",
                                                  "addressId": "Home",
                                                  "postalCode": "13476103",
                                                  "city": "Americana",
                                                  "state": "SP",
                                                  "country": "BRA",
                                                  "street": "JOÃO DAMÁZIO GOMES",
                                                  "number": "311",
                                                  "neighborhood": "SÃO JOSÉ",
                                                  "complement": null,
                                                  "reference": "Bairro Praia Azul / Posto de Saúde 17",
                                                  "geoCoordinates": []
                                               },
                                               "logisticsInfo": [
                                                  {
                                                     "itemIndex": 0,
                                                     "selectedSla": "Regular",
                                                     "lockTTL": "8d",
                                                     "shippingEstimate": "7d",
                                                     "price": 1090,
                                                     "deliveryWindow": null
                                                  }
                                               ]
                                            },
                                            "openTextField": null,
                                            "marketingData": {
                                               "utmSource": "buscape",
                                               "utmMedium": "",
                                               "utmCampaign": "freeshipping",
                                               "utmiPage": "_",
                                               "utmiPart": "BuscaFullText",
                                               "utmiCampaign": "artscase for iphone 5"
                                            },
                                            "paymentData": null
                                        }
                                        
                                    }
                                }    
                            } 
                        }
                    }
                }
            }
        },
        "/pvt/orders/{orderId}/fulfill?sc={sellerId}&an={accountName}": {
            "post": {
                "tags": [
					"External Seller"
				],
				"summary": "Order Dispatching",
				"description": "After the payment is finished and approved, the marketplace sends a request to the seller to notify it that the fulfillment process can be started. This is done through a request to the Order Dispatching endpoint, which needs to be implemented by the seller.\n\nThe body of the request received by the seller contains only one information: the `marketplaceOrderId`, which identifies the order in the marketplace. The seller should use this ID to trigger the fulfillment process of the corresponding order.\n\nThe seller should then respond with the same `marketplaceOrderId` and also with the `orderId`, which identifies the order in the seller, the date and time of the notification receipt, and a protocol code that confirms the receipt of the request (which may have the value `null`).",
				"operationId": "order-dispatching",
				"parameters": [                    
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/orderDispatching"
							},
							"example": {
								
							}
						}
					},
					"required": true
				},
				"responses": {
                    "200": {
						"description": "",
						"headers": {},
                        "content": {
                            "application/json": {								
								"examples": {
                                    "response": {
                                        "value": 
                                        {
                                            "date": "2014-10-06 18:52:00",
                                            "marketplaceOrderId": "959311095",
                                            "orderId": "123543123",
                                            "receipt": "e39d05f9-0c54-4469-a626-8bb5cff169f8"
                                         }
                                    }
                                }
                            }
                        }
                    }
                }
            }
                                    
        },
        "/pvt/orders/{orderId}/cancel?sc={sellerId}&an={accountName}": {
            "post": {
                "tags": [
					"External Seller"
				],
				"summary": "Marketplace Order Cancellation",
				"description": "The seller must be ready to receive order cancellation requests from the marketplace. For that, you will need to implement the Marketplace Order Cancellation endpoint. Whenever this request is received by the seler, the order should be canceled and the fulfillment flow should not proceed.\n\nThe body of the request received by the seller contains only one information: the `marketplaceOrderId`, which identifies the order in the marketplace. The seller should use this ID to trigger the cancellation of the corresponding order.\n\nThe seller should then respond with the same `marketplaceOrderId` and also with the `orderId`, which identifies the order in the seller, the date and time of the notification receipt, and a protocol code that confirms the receipt of the request (which may have the value `null`).",
				"operationId": "mkp-order-cancellation",
				"parameters": [                    
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "Describes the type of the content being sent.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/mkpOrderCancellation"
							},
							"example": {
								
							}
						}
					},
					"required": true
				},
				"responses": {
                    "200": {
						"description": "",
						"headers": {},
                        "content": {
                            "application/json": {								
								"examples": {
                                    "response": {
                                        "value": 
                                        {
                                            "date": "2019-05-09 15:31:23",
                                            "marketplaceOrderId": "959311095",
                                            "orderId": "123543123",
                                            "receipt": "e39d05f9-0c54-4469-a626-8bb5cff169f8"
                                         }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
	"security": [
		{
			"appKey": [],
			"appToken": []
		}
    ],
    "components": {
        "schemas": {
            "fulfillmentSimulation":{
                "title": "fulfillmentSimulation",
                "required": [
                    "postalCode"
                ],
                "type": "object",
                "properties": {
                    "postalCode": {
                        "type": "string",
                        "description": "Delivery address postal code."
                    },
                    "geoCoordinates" : {
                        "type": "array",
                        "description": "Geographic coordinates of the delivery address. This may be used instead of the postalCode, in case the marketplace is configured to accept geolocation. Example of value: `[-22.9443504,-43.1825635]`.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "country": {
                        "type": "string",
                        "description": "ISO 3-digit code of the country where the delivery address is located."
                    },
                    "items": {
                        "type": "array",
                        "description": "Array containing the cart items.",
                        "items": {
                            "$ref": "#/components/schemas/fulfillmentItem"
                        }
                    }
                }
            },
            "fulfillmentItem":{
                "title": "fulfillmentSimulation",
                "required": [
                    "id",
                    "quantity",
                    "seller"
                ],
                "type": "array",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SKU ID."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of items of the SKU in the cart."
                    },
                    "seller": {
                        "type": "string",
                        "description": "ID of the seller registered in VTEX."
                    }
                }
            },
            "orderPlacement":{
                "title": "orderPlacement",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "description": "Identifies the order in the marketplace."
                    },
                    "marketplaceServicesEndpoint": {
                        "type": "string",
                        "description": "Endpoint that the seller will use to send the invoice and tracking data to the marketplace."
                    },
                    "marketplacePaymentValue": {
                        "type": "integer",
                        "description": "Amount that the marketplace agrees to pay to the seller. The last two digits are the cents."
                    },
                    "items": {
                        "type": "array",
                        "description": "Contains data about each SKU in the cart.",
                        "items": {
                            "$ref": "#/components/schemas/orderPlacementItem"
                        }
                    }
                }
            },
            "orderPlacementItem":{
                "title": "orderPlacementItem",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SKU ID."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of the item."
                    },
                    "seller": {
                        "type": "string",
                        "description": "ID of the seller registered in VTEX."
                    },
                    "commission": {
                        "type": "string",
                        "description": ""
                    },
                    "freightCommission": {
                        "type": "string",
                        "description": ""
                    },
                    "price": {
                        "type": "string",
                        "description": "SKU price. The last two digits are the cents."
                    },
                    "bundleItems": {
                        "type": "array",
                        "description": "Services sold along with the SKU. Example: a gift package.",
                        "items": {
                            "$ref": "#/components/schemas/bundleItemsItem"
                        }
                    },
                    "itemsAttachment": {
                        "type": "array",
                        "description": "Attachments sold with the SKU.",
                        "items": {
                            "$ref": "#/components/schemas/itemAttachment"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "description": "Customization of the items sold together with the SKU.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceTags": {
                        "type": "array",
                        "description": "List with the promotions applied to the item.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "measurementUnit": {
                        "type": "string",
                        "description": "SKU measurement unit."
                    },
                    "unitMultiplier": {
                        "type": "integer",
                        "description": "SKU unit multiplier."
                    },
                    "isGift": {
                        "type": "boolean",
                        "description": "`true` if the item is a gift."
                    },
                    "clientProfileData": {
                        "type": "object",
                        "description": "Contains the client data.",
                        "items": {
                            "$ref": "#/components/schemas/clientProfileData"
                        }
                    },
                    "shippingData": {
                        "type": "object",
                        "description": "Contains data about the delivery of the order.",
                        "items": {
                            "$ref": "#/components/schemas/shippingData"
                        }
                    },
                    "openTextField": {
                        "type": "string",
                        "description": "Optional field. It’s meant to hold additional information about the order."
                    },
                    "marketingData": {
                        "type": "object",
                        "description": "Marketing tracking data. If the order has no tracking data, the value will be null.",
                        "items": {
                            "$ref": "#/components/schemas/marketingData"
                        }
                    },
                    "paymentData": {
                        "type": "object",
                        "description": "This field holds payment information. However, since the payment is processed by the marketplace, it will come with the value null."
                    }
                }
            },
            "bundleItemsItem":{
                "title": "bundleItemsItem",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Service type."
                    },
                    "id": {
                        "type": "integer",
                        "description": "Service identifier."
                    },
                    "name": {
                        "type": "string",
                        "description": "Service name."
                    },
                    "price": {
                        "type": "string",
                        "description": "Service price. The last two digits are the cents."
                    }
                }
            },
            "itemAttachment":{
                "title": "itemAttachment",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Attachment name."
                    },
                    "content": {
                        "type": "string",
                        "description": "Content referring to the customization requested by the customer."
                    }
                }
            },
            "clientProfileData":{
                "title": "clientProfileData",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Client's email."
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Client's first name."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Client's last name."
                    },
                    "documentType": {
                        "type": "string",
                        "description": "Type of the document informed by the client."
                    },
                    "document": {
                        "type": "string",
                        "description": "Number of the document informed by the client."
                    },
                    "phone": {
                        "type": "string",
                        "description": "Client's phone number."
                    },
                    "corporateName": {
                        "type": "string",
                        "description": "If legal entity, here goes the company name."
                    },
                    "tradeName": {
                        "type": "string",
                        "description": "If legal entity, here goes the trade name."
                    },
                    "corporateDocument": {
                        "type": "string",
                        "description": "If legal entity, here goes the corporate document."
                    },
                    "stateInscription": {
                        "type": "string",
                        "description": "If legal entity, here goes the state inscription."
                    },
                    "corporatePhone": {
                        "type": "string",
                        "description": "If legal entity, here goes the company phone."
                    },
                    "isCorporate": {
                        "type": "boolean",
                        "description": "`true` if legal entity."
                    },
                    "userProfileId": {
                        "type": "string",
                        "description": "ID of the profile system in VTEX."
                    }
                }
            },
            "shippingData": {
                "title": "shippingData",
                "required": [
                    "address"
                ],
                "type": "array",
                "properties": {
                    "address": {
                        "type": "array",
                        "description": "Contains data about the pickup point address.",
                        "items": {
                            "$ref": "#/components/schemas/address"
                        }
                    },
                    "logisticsInfo ":{
                        "type": "array",
                        "description": "Contains the delivery data.",
                        "items": {
                            "$ref": "#/components/schemas/logisticsInfo"
                        }
                    }
                }
            },
            "address": {
                "title": "address",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "addressType": {
                        "type": "string",
                        "description": "Address type."
                    },
                    "receiverName": {
                        "type": "string",
                        "description": "Recipient's name."
                    },
                    "addressId": {
                        "type": "string",
                        "description": "Address identifier."
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Delivery address postal code."
                    },
                    "city": {
                        "type": "string",
                        "description": "City of the delivery address."
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the delivery address."
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of the delivery address."
                    },
                    "street": {
                        "type": "string",
                        "description": "Street of the delivery address."
                    },
                    "number": {
                        "type": "string",
                        "description": "Number of the delivery address."
                    },
                    "neighborhood": {
                        "type": "string",
                        "description": "Neighborhood of the delivery address."
                    },
                    "complement": {
                        "type": "string",
                        "description": "Complement of the delivery address."
                    },
                    "reference": {
                        "type": "string",
                        "description": "NReference for the delivery address."
                    },
                    "geoCoordinates": {
                        "type": "string",
                        "description": "Geographic coordinates of the delivery address."
                    }
                }
            },
            "logisticsInfo":{
                "title": "logisticsInfo",
                "required": [
                    ""
                ],
                "type": "array",
                "properties": {
                    "itemIndex": {
                        "type": "integer",
                        "description": "Position of this item in the items array."
                    },
                    "selectedSla": {
                        "type": "string",
                        "description": "Type of delivery for the item."
                    },
                    "lockTTL": {
                        "type": "string",
                        "description": "Reservation time of the item."
                    },
                    "shippingEstimate": {
                        "type": "string",
                        "description": "Estimated days for delivery of the item."
                    },
                    "price": {
                        "type": "string",
                        "description": "Delivery price for the item. The last two digits are the cents."
                    },
                    "deliveryWindow": {
                        "type": "array",
                        "description": "Delivery windows.",
                        "items":{
                            "type": "string"
                        }
                    }
                }
            },
            "marketingData":{
                "title": "marketingData",
                "required": [
                    ""
                ],
                "type": "object",
                "properties": {
                    "utmSource": {
                        "type": "string",
                        "description": "utm_source"
                    },
                    "utmMedium": {
                        "type": "string",
                        "description": "utm_medium"
                    },
                    "utmCampaign": {
                        "type": "string",
                        "description": "utm_campaign"
                    },
                    "utmiPage": {
                        "type": "string",
                        "description": "utmi_page (internal utm)"
                    },
                    "utmiPart": {
                        "type": "string",
                        "description": "utmi_part (internal utm)"
                    },
                    "utmiCampaign": {
                        "type": "string",
                        "description": "utmi_campaign (internal utm)"
                    }
                }
            },
            "orderDispatching":{
                "title": "orderDispatching",
                "required": [
                    "marketplaceOrderId"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "description": "Identifies the order. The seller should use this ID to trigger the fulfillment process of the corresponding order."
                    }
                }
            },
            "mkpOrderCancellation":{
                "title": "mkpOrderCancellation",
                "required": [
                    "marketplaceOrderId"
                ],
                "type": "object",
                "properties": {
                    "marketplaceOrderId": {
                        "type": "string",
                        "description": "Identifies the order. The seller should use this ID to trigger the cancellation of the corresponding order."
                    }
                }
            }
        }
    },
	"tags": [
		{
			"name": "External Seller"
		},
		{
			"name": "External Marketplace"
		}
	]
}