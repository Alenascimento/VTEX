{
    "openapi": "3.0.0",
    "info": {
      "title": "Policy Engine API",
      "description": "In the context of the Promotion Alerts, this API will create promotion alarms when selling products with undesired prices and promotions. It will create conditions that will check if the prices and the promotions are correct. If not, the system will alarm the store with information about the product sold at unexpected prices.",
      "contact": {},
      "version": ""
    },
    "servers": [
      {
        "url": "http://api.vtexcommercestable.com.br",
        "variables": {}
      }
    ],
    "paths": {
        "/api/policy-engine/policies": {
            "get": {
                "tags": [
                    "Policy"
              ],
              "summary": "Get Policy List",
              "description": "Retrieves a list of all policies in the store and general information of each policy.",
              "operationId": "Policy_List",
              "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "environment",
                    "in": "path",
                    "required": true,
                    "description": "Environment to use. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "vtexcommercestable"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                }
            ],
              "responses": {
                "200": {
                  "description": "",
                  "headers": {},
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/PolicyGetResponse"
                        },
                        "example":  [
                                {
                                    "id": "pa_test_001",
                                    "name": "TestAlarmBerenice",
                                    "description": "TesteMarcosPromotionsAlert",
                                    "statements": [
                                        {
                                            "effect": "Allow",
                                            "actions": [
                                                {
                                                    "id": "SendSlackMessage",
                                                    "metadata": {
                                                        "channel": "C01NJFF35R6",
                                                        "relatedUsers": [
                                                            "URUNDC2NB"
                                                        ],
                                                        "alertDescription": "Avoid selling products from Berenice with a discount greater than 70%."
                                                    }
                                                }
                                            ],
                                            "resource": "vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert",
                                            "condition": {
                                                "conditions": [
                                                    {
                                                        "conditions": [],
                                                        "operation": "stringEquals",
                                                        "key": "brandId",
                                                        "values": [
                                                            "2000001"
                                                        ]
                                                    },
                                                    {
                                                        "conditions": [],
                                                        "operation": "numericGreaterThan",
                                                        "key": "discountPercentage",
                                                        "values": [
                                                            "70.00"
                                                        ]
                                                    }
                                                ],
                                                "operation": "and"
                                            }
                                        }
                                    ]
                                }
                            ]        
                      }
                    }
                  }
                }
              }
            }
        },  
        "/api/policy-engine/evaluate": {
            "post": {
            "tags": [
                "Policy"
            ],
            "summary": "Consult Policy evaluate",
            "description": "This endpoint consults all the store policies and checks the ones that satisfy the request bodyâ€™s conditions.",
            "operationId": "Policy_Evaluate",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "environment",
                    "in": "path",
                    "required": true,
                    "description": "Environment to use. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "vtexcommercestable"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                }
            ],
            "requestBody": {
                "description": "",
                "content": {
                "application/json": {
                    "schema": {
                    "$ref": "#/components/schemas/EvaluatePolicyRequest"
                    }, 
                    "example":{
                      "resource": "vrn:vtex.promotions-alert:aws-us-east-1:kamila:master:/_v/promotions_alert",
                        "context" : {
                            "brandId": "2000001",
                            "discountPercentage": "91.00"
                    }
                    
                    }
                }
                },
                "required": true
            },
            "responses": {
                "200": {
                "description": "",
                "headers": {},
                "content": {
                    "application/json": {
                    "schema": {
                        "type": "array",
                        "items": {
                        "$ref": "#/components/schemas/PolicyActionGetResponse"
                        },
                        "description": ""
                    }
                    }
                }
                }
            },
            "deprecated": false
            }
        },
        "/api/policy-engine/policies/{id}": {
            "post": {
            "tags": [
                "Policy"
            ],
            "summary": "Policy_CreateOrUpdate",
            "description": "",
            "operationId": "Policy_CreateOrUpdate",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "environment",
                    "in": "path",
                    "required": true,
                    "description": "Environment to use. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "vtexcommercestable"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                }
            ],
            "requestBody": {
                "description": "",
                "content": {
                "application/json": {
                    "schema": {
                    "$ref": "#/components/schemas/PolicySaveRequest"
                    }
                }
                },
                "required": true
            },
            "responses": {
                "200": {
                "description": "",
                "headers": {},
                "content": {
                    "application/octet-stream": {
                    "schema": {
                        "type": "string",
                        "format": "binary"
                    }
                    }
                }
                }
            },
            "deprecated": false
            },
            "put": {
                "tags": [
                    "Policy"
                ],
                "summary": "Policy_CreateOrUpdate2",
                "description": "",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                    "application/json": {
                        "schema": {
                        "$ref": "#/components/schemas/PolicySaveRequest"
                        }
                    }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                    "description": "",
                    "headers": {},
                    "content": {
                        "application/octet-stream": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                        }
                    }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": [
                    "Policy"
                ],
                "summary": "Policy_Get",
                "description": "",
                "operationId": "Policy_Get",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                    "description": "",
                    "headers": {},
                    "content": {
                        "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PolicyGetResponse"
                        }
                        }
                    }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Policy"
                ],
                "summary": "Policy_Delete",
                "description": "",
                "operationId": "Policy_Delete",
                "parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand ",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                    "description": "",
                    "headers": {},
                    "content": {
                        "application/octet-stream": {
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                        }
                    }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
      "schemas": {
        "PolicyActionGetResponse": {
          "title": "PolicyActionGetResponse",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
              
            },
            "metadata": {
              "type": "object"
              
            }
          }
        },
        "EvaluatePolicyRequest": {
          "title": "EvaluatePolicyRequest",
          "required": [
            "resource",
            "context"
          ],
          "type": "object",
          "properties": {
            "resource": {
              "description": "Location of the data used on the policy",
              "title": "resource",
              "type": "string"
            },
            "context": {
              "type": "object",
              "description": "Conditions that the Policy needs to satisfy",
              "title": "resource"
            }
          }
        },
        "Account": {
          "title": "Account",
          "type": "object",
          "properties": {
            "mainAccountName": {
              "type": "string"
              
            },
            "name": {
              "type": "string"
              
            },
            "id": {
              "type": "string"
              
            },
            "operationDate": {
              "type": "string",
              "format": "date-time"
              
            },
            "accountType": {
              "$ref": "#/components/schemas/AccountType"
            },
            "isActive": {
              "type": "boolean"
            },
            "isOperating": {
              "type": "boolean"
              
            }
          }
        },
        "AccountType": {
          "title": "AccountType",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "example": 0
        },
        "PolicySaveRequest": {
          "title": "PolicySaveRequest",
          "required": [
            "name",
            "description",
            "statements"
          ],
          "type": "object",
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "description": {
              "minLength": 1,
              "type": "string"
            },
            "statements": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatementSaveRequest"
              },
              "description": ""
            }
          }
        },
        "StatementSaveRequest": {
          "title": "StatementSaveRequest",
          "required": [
            "effect",
            "actions",
            "resource",
            "condition"
          ],
          "type": "object",
          "properties": {
            "effect": {
              "minLength": 1,
              "type": "string"
            },
            "actions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PolicyActionSaveRequest"
              },
              "description": ""
            },
            "resource": {
              "minLength": 1,
              "pattern": "^vrn:([^:]+):([^:]+):([^:]+):([^:]+):([^:]+)$",
              "type": "string"
            },
            "condition": {
              "$ref": "#/components/schemas/ConditionSaveRequest"
            }
          }
        },
        "PolicyActionSaveRequest": {
          "title": "PolicyActionSaveRequest",
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "minLength": 1,
              "type": "string"
            },
            "metadata": {
              "type": "object"
              
            }
          }
        },
        "ConditionSaveRequest": {
          "title": "ConditionSaveRequest",
          "required": [
            "operation"
          ],
          "type": "object",
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConditionSaveRequest"
              },
              "description": ""
              
            },
            "operation": {
              
            },
            "key": {
              "type": "string"
              
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": ""
              
            }
          }
        },
        "PolicyGetResponse": {
          "title": "PolicyGetResponse",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "id",
              "description": "Policy ID"
            },
            "name": {
              "type": "string",
              "description": "Policy Name",
              "title": "name"
            },
            "description": {
              "type": "string",
              "description": "Policy description. This description is only for internal use of identification",
              "title": "description"
              
            },
            "statements": {
              "type": "array",
              "title": "statements",
              "items": {
                "$ref": "#/components/schemas/StatementGetResponse"
              },
              "description": "Requirements to the Policy be applied"
              
            }
          }
        },
        "StatementGetResponse": {
          "title": "StatementGetResponse",
          "type": "object",
          "properties": {
            "effect": {
              "type": "string",
              "description": "Effect of the Policy. This value can only be `Allow`",
              "title": "effect"
            },
            "actions": {
              "type": "array",
              "title": "actions",
              "properties": {
                  "id":{
                      "type": "string",
                      "title": "id",
                      "description": "Action ID. The possible values can be `SendSlackMessage`, `SendEmail`, and `eDeactivatePromotions`"
                  },
                  "metadata":{
                      "type": "object",
                      "title": "metadata",
                      "description": "Data inside of the actions",
                      "properties": {
                        "channel":{
                            "type": "string",
                            "title": "channel",
                            "description": "Channel that the Policy will set the alarm"
                        },
                        "relatedUsers":{
                            "type": "array",
                            "title": "relatedUsers",
                            "description": "Identification of the user. This field is only possible to use when the `id` is `SendSlackMessage`. It depends on the information provided on `metadata`"
                        },
                        "alertDescription":{
                            "type": "string",
                            "title": "alertDescription",
                            "description": "The description that will be displayed on the alarm"
                        }
                      }
                  }
              },
              "description": "Actions that the Policy will execute"
              
            },
            "resource": {
              "type": "string",
              "description": "Location of the data used on the policy",
              "title": "resource"
            },
            "condition": {
              "$ref": "#/components/schemas/ConditionGetResponse",
              "description": "Group of conditions that need to be valid to activate the policy",
              "type": "array",
              "title": "condition"
            },
            "operation": {
                "type": "string",
                "title": "operation",
                "description": "This operation will determine if all the conditions need to be valid or at least one of them. The possible values to these fields are `and` & `or` if the conditions array is not empty."
              }
          }
        },
        "ConditionGetResponse": {
          "properties": {
            "conditions": {
              "type": "array",
              "description": "List of conditions that will activate the policy",
              "properties": {
                "conditions":{
                    "title": "conditions",
                    "type": "array",
                    "description": "These are the conditions the actions can have. The possible values are `[]`, `stringEquals`, and `numericGreaterThan`"
                },
                "operation": {
                  "type": "string",
                  "title": "operation",
                  "description": "The action of the condition."
                },
                "key": {
                  "type": "string",
                  "title": "key",
                  "description": "The element that will define what the policy will influence. This field has the possible values `skuId`, `brandId`, `discountPercentage`"
                },
                "values": {
                  "type": "array",
                  "title": "values",
                  "items": {
                      "type": "string"
                  },
                  "description": "Value of the key"
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "Policy",
        "description": ""
      }
    ]
  }