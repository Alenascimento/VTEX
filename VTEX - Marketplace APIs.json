{
	"openapi": "3.0.0",
	"info": {
		"title": "Marketplace API",
		"description": "The Marketplace APIs are a set of API requests used by marketplaces and sellers in their operations.",
		"contact": {},
		"version": "1.0"
	},
	"servers": [
		{
			"url": "/",
			"description": ""
        }
	],
	"paths": {
    "/{accountname}.{environment}.com.br/api/notificator/{sellerId}/changenotification/{skuId}/price": {
		"post": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Notify marketplace of price update",
		  "description": "This endpoint is used by *sellers* to notify marketplaces that the price has changed for one of their SKUs. \n\nThere is no request body in this call, indicating the new price value, for instance. It only notifies a specific marketplace (`accountname`) that a seller (`sellerId`) has changed the price of an SKU (`skuId`). \n\n*Marketplaces* will then call the [fulfillment endpoint](https://developers.vtex.com/reference/external-seller#fulfillment-simulation) provided in the seller registration form to get the updated price information.",
		  "operationId": "PriceNotification",
		  "parameters": [
			{
			  "name": "accountName",
			  "in": "path",
			  "required": true,
			  "description": "Name of the VTEX account that belongs to the marketplace. The notification will be posted into this account.",
			  "schema": {
				"type": "string",
				"default": "apiexamples"
			  }
            },
            {
              "name": "Content-Type",
              "in": "header",
              "description": "Describes the type of the content being sent.",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "default": "application/json"
              }
            },
			{
			  "name": "environment",
			  "in": "path",
			  "required": true,
			  "description": "Environment to use. Used as part of the URL.",
			  "schema": {
				"type": "string",
				"default": "vtexcommercestable"
			  }
			},
			{
			  "name": "Accept",
			  "in": "header",
			  "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
			  "required": true,
			  "style": "simple",
			  "schema": {
				"type": "string",
				"default": "application/json"
			  }
			},
			{
			  "name": "sellerId",
			  "in": "path",
			  "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
			  "required": true,
			  "style": "simple",
			  "schema": {
			    "type": "string",
			    "default": "seller123"
			    }
            },
            {
                "name": "skuId",
                "in": "path",
                "description": "A string that identifies the seller's SKU that suffered the change. This is the ID that the marketplace will use for all  references to this SKU, such as price and inventory notifications.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                  }
            }	  	
	    	],
                "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/{accountname}.{environment}.com.br/api/notificator/{sellerId}/changenotification/{skuId}/inventory": {
		"post": {
		  "tags": [
			"Notification"
		  ],
		  "summary": "Notify marketplace of inventory update",
          "description": "This endpoint is used by *sellers* to notify marketplaces that the inventory level has changed for one of their SKUs. \n\nThere is no request body in this call, indicating the new inventory level, for instance. It only notifies a specific marketplace (`accountname`) that a seller (`sellerId`) has changed the inventory level of an SKU (`skuId`). \n\n*Marketplaces* will then call the [fulfillment endpoint](https://developers.vtex.com/reference/external-seller#fulfillment-simulation) provided in the seller registration form to get the updated inventory  information.",
		  "operationId": "InventoryNotification",
		  "parameters": [
			{
			  "name": "accountName",
			  "in": "path",
			  "required": true,
			  "description": "Name of the VTEX account that belongs to the marketplace. The notification will be posted into this account.",
			  "schema": {
				"type": "string",
				"default": "apiexamples"
			  }
			},
			{
			  "name": "environment",
			  "in": "path",
			  "required": true,
			  "description": "Environment to use. Used as part of the URL.",
			  "schema": {
				"type": "string",
				"default": "vtexcommercestable"
			  }
			},
			{
			  "name": "Accept",
			  "in": "header",
			  "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
			  "required": true,
			  "style": "simple",
			  "schema": {
				"type": "string",
				"default": "application/json"
			  }
            },
            {
                "name": "Content-Type",
                "in": "header",
                "description": "Describes the type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "default": "application/json"
                }
            },
			{
			  "name": "sellerId",
			  "in": "path",
			  "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
			  "required": true,
			  "style": "simple",
			  "schema": {
			    "type": "string",
			    "default": "seller123"
			    }
            },
            {
                "name": "skuId",
                "in": "path",
                "description": "A string that identifies the SKU in the seller, that suffered the change. This is the ID that the marketplace will use for all  references to this SKU, such as price and inventory notifications.",
                "required": true,
                "style": "simple",
                "schema": {
                  "type": "string",
                  "default": "application/json"
                  }
            }	  	
	    	],
                "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/configuration/autoapproval/toggle": {
    "get": {
        "tags": [
        "SKU Approval Settings"
        ],
        "summary": "Get autoApprove Status in Account Settings",
        "description": "This endpoint can be used to check whether the autoapprove setting is active or not, for a specific seller. If the response is `true`, the autoapprove setting is active. If the response is `false`, it is inactive.",
        "operationId": "GetautoApprovevaluefromconfig",
        "parameters": [
        {
            "name": "sellerId",
            "in": "query",
            "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
            "required": true,
            "style": "form",
            "schema": {
            "type": "string",
            "default": "1a"
            }
        },
        {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
            "schema": {
            "type": "string",
            "default": "apiexamples"
            }
        },
        {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
            "type": "string",
            "default": "application/json"
            }
        },
        {
            "name": "Content-Type",
            "in": "header",
            "description": "Describes the type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
                "type": "string",
                "default": "application/json"
            }
        }
        ],
        "responses": {
        "200": {
            "description": "",
            "headers": {}
        }
        },
        "deprecated": false
    },
    "put": {
        "tags": [
        "SKU Approval Settings"
        ],
        "summary": "Activate autoApprove in Marketplace's Account",
        "description": "This endpoint enables the autoapprove rule to a marketplaceâ€™s whole Received SKUs module. Be aware that once enabling the rule through this request, all received SKUs will be automatically approved on your store, regardless of the seller or the Matcher Score.",
        "operationId": "Saveautoapproveforaccount",
        "parameters": [
        {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
            "schema": {
            "type": "string",
            "default": "apiexamples"
            }
        },
        {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
            "type": "string",
            "default": "application/json"
            }
        },
        {
            "name": "Content-Type",
            "in": "header",
            "description": "Describes the type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
                "type": "string",
                "default": "application/json"
            }
        }
        ],
        "requestBody": {
        "description": "",
        "content": {
            "application/json": {
            "schema": {
                "$ref": "#/components/schemas/SaveautoapproveforaccountRequest"
            },
            "example": {
                "Enabled": true
            }
            }
        },
        "required": true
        },
        "responses": {
        "200": {
            "description": "",
            "headers": {}
        }
        },
        "deprecated": false
    }
    },
    "/api.vtex.com/{accountName}/suggestions/configuration": {
        "get": {
          "tags": [
            "SKU Approval Settings"
          ],
          "summary": "Get Account's Approval Settings",
          "description": "This endpoint retrieves the current account settings of a marketplaceâ€™s Received SKUs module.  Its response includes: \n\n- `Score`: Matcher scores for approving and rejecting SKUs received from sellers. \n\n- `Matchers`: All Matchers configured on the marketplace, and their respective details. \n\n- `SpecificationsMapping`: Mapping of product and SKU specifications, per seller. \n\n- `MatchFlux`: This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include:  \n\n`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n`manual`, for manual approvals through the Received SKU UI, or Match API. \n\n`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of their Matcher Score.",
          "operationId": "Getaccountconfig",
          "parameters": [
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
              "schema": {
                "type": "string",
                "default": "apiexamples"
              }
            },
            {
              "name": "Accept",
              "in": "header",
              "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "default": "application/json"
              }
            },
            {
                "name": "Content-Type",
                "in": "header",
                "description": "Describes the type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "default": "application/json"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "SKU Approval Settings"
          ],
          "summary": "Save Account's Approval Settings",
          "description": "Marketplaces use this endpoint to create or update approval settings on their Received SKUs module. The request includes all the details necessary to implement the chosen approval settings.",
          "operationId": "Saveaccountconfig",
          "parameters": [
            {
              "name": "accountName",
              "in": "path",
              "required": true,
              "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
              "schema": {
                "type": "string",
                "default": "apiexamples"
              }
            },
            {
              "name": "Accept",
              "in": "header",
              "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "default": "application/json"
              }
            },
            {
                "name": "Content-Type",
                "in": "header",
                "description": "Describes the type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "default": "application/json"
                }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveaccountconfigRequest"
                }            }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/configuration/autoapproval/toggle/seller/{sellerId}": {
    "put": {
        "tags": [
        "SKU Approval Settings"
        ],
        "summary": "Activate autoApprove Setting for a Seller",
        "description": "This endpoint enables the auto approve setting to received SKUs from a specific seller. Be aware that once enabling the rule through this request, all received SKUs from that seller will be automatically approved on your store, regardless of the Matcher Score.",
        "operationId": "Saveautoapproveforaccountseller",
        "parameters": [
        {
            "name": "accountName",
            "in": "path",
            "required": true,
            "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
            "schema": {
            "type": "string",
            "default": "apiexamples"
            }
        },
        {
            "name": "sellerId",
            "in": "query",
            "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
            "required": true,
            "style": "form",
            "schema": {
            "type": "string",
            "default": "1a"
            }
        },
        {
            "name": "Accept",
            "in": "header",
            "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
            "required": true,
            "style": "simple",
            "schema": {
            "type": "string",
            "default": "application/json"
            }
        },
        {
            "name": "Content-Type",
            "in": "header",
            "description": "Describes the type of the content being sent.",
            "required": true,
            "style": "simple",
            "schema": {
                "type": "string",
                "default": "application/json"
            }
        }
        ],
        "requestBody": {
        "description": "",
        "content": {
            "application/json": {
            "schema": {
                "$ref": "#/components/schemas/SaveautoapproveforaccountsellerRequest"
            },
            "example": {
                "Enabled": true
            }
            }
        },
        "required": true
        },
        "responses": {
        "200": {
            "description": "",
            "headers": {}
        }
        },
        "deprecated": false
    }
    },
    "/api.vtex.com/{accountName}/suggestions": {
        "get": {
            "tags": [
                "Get Suggestions"
            ],
            "summary": "Get all SKU suggestions",
            "description": "This endpoint retrieves a list of all SKUs sent by the seller for the Marketplace's approval. Marketplace operators should use this endpoint whenever they want to check the full list of received SKUs and their  information. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
            "operationId": "Getsuggestions",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "q",
                    "in": "query",
                    "description": "This field allows you to customize your search. You can fill in this query param if you want to narrow down your search using the available filters on Received SKU modules.",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "string",
                        "example": ""
                    }
                },
                {
                    "name": "seller",
                    "in": "query",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller so it can call this endpoint.",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "string",
                        "example": ""
                    }
                },
                {
                    "name": "status",
                    "in": "query",
                    "description": "Narrow down you search, filtering by status. Values allowed on this field include: `accepted`, `pending` and `denied.`",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "string",
                        "example": "accepted"
                    }
                },
                {
                    "name": "hasmapping",
                    "in": "query",
                    "description": "This field allows you to filter SKUs that have mapping or not. Insert `true` to filter SKUs that have mapping, or `false` to retrieve SKUs that aren't mapped.",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "string",
                        "example": "true"
                    }
                },
                {
                    "name": "matcherid",
                    "in": "query",
                    "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example.",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "string",
                        "default": "vtex-matcher"
                    }
                },
                {
                    "name": "_from",
                    "in": "query",
                    "description": "Define your pagination range, by adding the pagination starting value. Values should be bigger than 0, with a maximum of 50 records per page.",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "default": "1"
                    }
                },
                {
                    "name": "_to",
                    "in": "query",
                    "description": "Define your pagination range, by adding the pagination ending value. Values should be bigger than 0, with a maximum of 50 records per page.",
                    "required": false,
                    "style": "form",
                    "explode": true,
                    "schema": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "default": "50"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerSkuId}": {
        "put": {
            "tags": [
                "Manage Suggestions"
            ],
            "summary": "Send SKU Suggestion",
            "description": "This request is used by the seller when it wants to suggest that one of their SKUs is sold in the marketplace.\n\nBefore using this request, the seller should always use the [Change Notification](https://developers.vtex.com/reference/catalog-api-sku-seller#catalog-api-get-seller-sku-notification) request in order to check if the SKU already exists in the marketplace. If it doesn't, then this is the next call in the SKU integration flow.\n\nIn the Send Suggestion request, the seller must send information about the SKU, such as the product and SKU name, the seller ID, and the image URL. All parameters are explained below. ",
            "operationId": "SaveSuggestion",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account to which the seller wants to suggest a new SKU. It is used as part of the request URL.",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "example": "application/vnd.vtex.suggestion.v0+json",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "seller123"
                    }
                },
                {
                    "name": "sellerSkuId",
                    "in": "path",
                    "description": "A string that identifies the SKU in the seller. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "requestBody": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SaveSuggestionRequest"
                        },
                        "example": {
                            "ProductId": 321,
                            "ProductName": "Product sample",
                            "NameComplete": "Complete product name",
                            "ProductDescription": "sample",
                            "BrandName": "Brand 1",
                            "SkuName": "Sku sample",
                            "SellerId": null,
                            "Height": 1,
                            "Width": 1,
                            "Length": 1,
                            "WeightKg": 1,
                            "Updated": null,
                            "RefId": "REFID123",
                            "SellerStockKeepingUnitId": 567,
                            "CategoryFullPath": "Category 1",
                            "Images": [
                                {
                                    "imageName": "Principal",
                                    "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                                }
                            ],
                            "ProductSpecifications": [
                                {
                                    "fieldName": "prodspec1",
                                    "fieldValue": "value1"
                                }
                            ],
                            "SkuSpecifications": [
                                {
                                    "fieldName": "skuspec1",
                                    "fieldValue": "value2"
                                }
                            ],
                            "EAN": "EAN123",
                            "MeasurementUnit": "un",
                            "UnitMultiplier": 1,
                            "AvailableQuantity": 111,
                            "Pricing": {
                                "Currency": "BRL",
                                "SalePrice": 399,
                                "CurrencySymbol": "R$"
                            }
                        }
                    }
                },
                "required": true
            },
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        },
        "get": {
            "tags": [
                "Get Suggestions"
            ],
            "summary": "Get SKU Suggestion by ID",
            "description": "This endpoint retrieves the data of a specific SKU sent by the seller, to the marketplace. Marketplaces or external matchers can call this endpoint when they want to check the information about a single SKU. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
            "operationId": "GetSuggestion",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        },
        "delete": {
            "tags": [
                "Manage Suggestions"
            ],
            "summary": "Delete SKU Suggestion",
            "description": "This endpoint deletes a chosen SKU suggestion. Only one SKU should be deleted per request. This request cannot be undone. A workaround to revert its action, is to send the suggestion again, through the Send Suggestion API.",
            "operationId": "DeleteSuggestion",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL.",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerskuid}/versions": {
        "get": {
            "tags": [
                "Get Versions"
            ],
            "summary": "Get all Versions",
            "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This endpoint retrieves the data of *all* previous and latest versions of a specific SKU suggestion, sent by the seller. Whenever an SKU is updated, it is important to map previous versions, to compare and identify changes. The response's object [latestversion] provides the information of the most recent version of that SKU suggestion.",
            "operationId": "GetVersions",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerskuid}/versions/{version}": {
        "get": {
            "tags": [
                "Get Versions"
            ],
            "summary": "Get Version by ID",
            "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This endpoint retrieves a specific *version* of a chosen SKU sent by the seller. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.",
            "operationId": "GetSuggestionbyversion",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "version",
                    "in": "path",
                    "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/{sellerId}/{sellerskuid}/versions/{version}/matches/{matchid}": {
        "put": {
            "tags": [
                "Match Received SKUs"
            ],
            "summary": "Match Received SKUs individually",
            "description": "All SKUs sent from a seller to a marketplace must be reviewed and matched. Actions in the matching process are added in the request body through the [matchType] object. Match type actions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
            "operationId": "Match",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {  
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                  },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "version",
                    "in": "path",
                    "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "matchid",
                    "in": "path",
                    "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "requestBody": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/MatchRequest"
                        },
                        "example": {
                            "matcherId": "{{matcherid}}",
                            "score": "{{score}} (must be decimal)",
                            "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                            "productRef": "{{productRef}}(should be specified when match is a product match)",
                            "product": {
                                "name": "Produto exemplo",
                                "description": "Descricao exemplo",
                                "categoryId": 12,
                                "brandId": 1234567,
                                "specifications": null
                            },
                            "sku": {
                                "name": "Sku exemplo",
                                "eans": [
                                    "12345678901213"
                                ],
                                "refId": null,
                                "height": 1,
                                "width": 1,
                                "length": 1,
                                "weight": 1,
                                "images": {
                                    "imagem1.jpg": "imageurl.example"
                                },
                                "unitMultiplier": 1,
                                "measurementUnit": "un",
                                "specifications": {
                                    "Embalagem": "3 kg"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/matches/action/{actionName}": {
        "put": {
            "tags": [
                "Match Received SKUs"
            ],
            "summary": "Match Multiple Received SKUs",
            "description": "This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.",
            "operationId": "MatchMultiple",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {  
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                  },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "actionName",
                    "in": "path",
                    "description": "This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "newprodcut"
                    }
                }
            ],
            "requestBody": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/MatchMultiple"
                        }
                    }
                },
                "required": true
            },
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
        }
    },
    "/api.vtex.com/{accountName}/suggestions/seller/{sellerId}/item/{sellerSkuId}/review": {
    "get": {
            "tags": [
                "Review Received SKUs"
            ],
            "summary": "Get SKUâ€™s review information",
            "description": "The **Review Received SKUs** API allows marketplace operators to request sellers to review the sent SKUs that were either refused or pending approval. Thus, marketplace operators can point out the exact fields that need sellersâ€™ review. This endpoint allows the user to retrieve the review information from a specific SKU. This call's response includes the following attributes: \n\n",
            "operationId": "GetReview",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {  
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                  },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "",
                    "headers": {}
                }
            },
            "deprecated": false
    },
    "put": {
            "tags": [
                "Review Received SKUs"
            ],
            "summary": "Request SKU review from seller",
            "description": "The **Review Received SKUs** API allows marketplace operators to request sellers to review the sent SKUs that were either refused or pending approval. This endpoint allows marketplace operators to point out the exact fields that need sellersâ€™ review, for a specific SKU.  \n\nNote that only one request per SKU is allowed. After operators submitted their first request through this callâ€™s operation, another request canâ€™t be executed in sequence. Operators must wait for the seller to update the SKU in question, and then submit another request, if necessary. Thus, be mindful that you wonâ€™t be able to update that initial request. \n\nOperators can add as many custom fields to their request body as they like. The fieldâ€™s names can also be customized, so sellers know exactly what fields need their review.",
            "operationId": "PutReview",
            "parameters": [
                {
                    "name": "accountName",
                    "in": "path",
                    "required": true,
                    "description": "Name of the VTEX account. Used as part of the URL",
                    "schema": {
                        "type": "string",
                        "default": "apiexamples"
                    }
                },
                {  
                    "name": "Content-Type",
                    "in": "header",
                    "description": "Describes the type of the content being sent.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                  },
                {
                    "name": "Accept",
                    "in": "header",
                    "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "default": "application/json"
                    }
                },
                {
                    "name": "sellerId",
                    "in": "path",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sellerskuid",
                    "in": "path",
                    "description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
        "requestBody": {
        "description": "",
        "content": {
            "application/json": {
            "schema": {
                "$ref": "#/components/schemas/ReviewFields"
            },
            "example": {
                "Enabled": true
            }
            }
        },
        "required": true
        },
        "responses": {
        "200": {
            "description": "",
            "headers": {}
        }
        },
        "deprecated": false
    }       
    }
    },
    "security": [
		{
			"appKey": [],
			"appToken": []
		}
    ],
    "components": {
        "schemas": {
          "SaveautoapproveforaccountRequest": {
            "title": "SaveautoapproveforaccountRequest",
            "required": [
              "Enabled"
            ],
            "type": "object",
            "properties": {
              "Enabled": {
                "type": "boolean",
                "description":"Insert `true` if you wish to activate the autoapprove rule for an entire marketplace account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all received SKUs will be automatically approved on your store, regardless of the seller, or the Matcher Score.",
                "default": true
              }
            }
          },
          "SaveautoapproveforaccountsellerRequest": {
            "title": "SaveautoapproveforaccountsellerRequest",
            "required": [
              "Enabled"
            ],
            "type": "object",
            "properties": {
              "Enabled": {
                "type": "boolean",
                "description":"Insert `true` if you wish to activate the autoapprove rule for that specific seller account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all SKUs received from this seller will be automatically approved on your store regardless of the Matcher Score.",
                "default": true
              }
            }
          },
          "SaveSuggestionRequest": {
            "title": "SaveSuggestionRequest",
            "required": [
                "ProductName",
                "ProductDescription",
                "price",
                "BrandName",
                "SkuName",
                "SellerId",
                "Height",
                "Width",
                "Length",
                "WeightKg",
                "Updated",
                "RefId",
                "CategoryFullPath",
                "Images",
                "EAN",
                "AvailableQuantity",
                "Pricing"
            ],
            "type": "object",
            "properties": {
                "ProductName": {
                    "type": "string",
                    "description": "Name of the suggested product. This field has a limit of 150 characters."
                },
                "ProductDescription": {
                    "type": "string",
                    "description": "Product Description containing the main information about the product (not the SKU)."
                },
                "BrandName": {
                    "type": "string",
                    "description": "Name of the brand to which this SKU belongs. It must match the brand created in the marketplace."
                },
                "SkuName": {
                    "type": "string",
                    "description": "Name of the suggested SKU."
                },
                "SellerId": {
                    "type": "integer",
                    "description": "ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built."
                },
                "Height": {
                    "type": "integer",
                    "format": "decimal",
                    "description": "Height of the SKU."
                },
                "Width": {
                    "type": "integer",
                    "format": "decimal",
                    "description": "Width of the SKU."
                },
                "Length": {
                    "type": "integer",
                    "format": "decimal",
                    "description": "Length of the SKU."
                },
                "WeightKg": {
                    "type": "integer",
                    "format": "decimal",
                    "description": "Weight of the SKU in kilograms."
                },
                "RefId": {
                    "type": "string",
                    "description": "SKU reference code. Mandotory if the EAN is not informed."
                },
                "EAN": {
                    "type": "string",
                    "description": "SKU reference code. Mandatory if the RefId is not informed."
                },
                "SellerStockKeepingUnitId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of the SKU registered in the seller."
                },
                "CategoryFullPath": {
                    "type": "string",
                    "description": "Full path to the SKU's category. It should be writen as {department}/{category}. For example: if the department is 'Appliances' and the category is 'Oven', the full path should be 'Appliances/Oven'."
                },
                "SkuSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/SkuSpecification"
                    },
                    "description": "Array containing the names and values of the SKU specifications."
                },
                "ProductSpecifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/ProductSpecification"
                    },
                    "description": "Array containing the names and values of the product specifications."
                },
                "Images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/Image"
                    },
                    "description": "Array containing the URLs and names the SKU images."
                },
                "MeasurementUnit": {
                    "type": "string",
                    "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`."
                },
                "UnitMultiplier": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`."
                },
                "AvailableQuantity": {
                    "type": "integer",
                    "format": "int32",
                    "description": ""
                },
                "Pricing": {
                    "type": "object",
                    "properties": {
                        "Currency": {
                            "type": "string"
                        },
                        "SalePrice": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "CurrencySymbol": {
                            "type": "string"
                        }
                    },
                    "description": ""
                }
            },
            "example": {
                "ProductId": 321,
                "ProductName": "Product sample",
                "NameComplete": "My complete product name?",
                "ProductDescription": "sample",
                "BrandName": "Brand 1",
                "SkuName": "Sku sample",
                "SellerId": null,
                "Height": 1,
                "Width": 1,
                "Length": 1,
                "WeightKg": 1,
                "Updated": null,
                "RefId": "REFID123",
                "SellerStockKeepingUnitId": 567,
                "CategoryFullPath": "Category 1",
                "Images": [
                    {
                        "imageName": "Principal",
                        "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                    }
                ],
                "ProductSpecifications": [
                    {
                        "fieldName": "prodspec1",
                        "fieldValue": "value1"
                    }
                ],
                "SkuSpecifications": [
                    {
                        "fieldName": "skuspec1",
                        "fieldValue": "value2"
                    }
                ],
                "EAN": "EAN123",
                "MeasurementUnit": "un",
                "UnitMultiplier": 1,
                "AvailableQuantity": 111,
                "Pricing": {
                    "Currency": "BRL",
                    "SalePrice": 399,
                    "CurrencySymbol": "R$"
                }
            }
          },
          "SkuSpecification": {
            "title": "SkuSpecification",
            "required": [
                "fieldName",
                "fieldValue"
            ],
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string",
                    "description": "Name of the SKU specification field. Example: 'Color'."
                },
                "fieldValue": {
                    "type": "string",
                    "description": "Value of the SKU specification field. Example: 'Red'."
                }
            },
            "example": {
                "fieldName": "spec1",
                "fieldValue": "value1"
            }
          },
          "ProductSpecification": {
            "title": "ProductSpecification",
            "required": [
                "fieldName",
                "fieldValue"
            ],
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string",
                    "description": "Name of the product specification field. Example: 'Fabric'."
                },
                "fieldValue": {
                    "type": "string",
                    "description": "Value of the product specification field. Example: 'Cotton'."
                }
            },
            "example": {
                "fieldName": "spec1",
                "fieldValue": "value1"
            }
          },
          "Image": {
            "title": "Image",
            "required": [
                "imageName",
                "imageUrl"
            ],
            "type": "object",
            "properties": {
                "imageName": {
                    "type": "string",
                    "description": "Name of the SKU image."
                },
                "imageUrl": {
                    "type": "string",
                    "description": "URL of the SKU image."
                }
            },
            "example": {
                "imageName": "Principal",
                "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
            }
          },
          "MatchRequest": {
            "title": "MatchRequest",
            "required": [
                "matcherId",
                "score",
                "matchType"
            ],
            "type": "object",
            "properties": {
                "matcherId": {
                    "type": "string",
                    "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example.",
                    "default": "vtex-matcher"
                },
                "matchType": {
                    "type": "string",
                    "description": "Define the action you want to apply to each SKU. Values include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                    "default": "itemMatch"
                },
                "score": {
                    "type": "string",
                    "description": "Matcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                    "default": "80"
                },
                "skuRef": {
                    "type": "string",
                    "nullable": true,
                    "description": "In `itemMatch` actions, fill in this field on your request to match the item to an existing SKU in the marketplace.",
                    "default": ""
                },
                "productRef": {
                    "type": "string",
                    "description": "In `productMatch` actions, fill in this field on your request to match the item to an existing product in the marketplace.",
                    "default": "",
                    "nullable": true
                },
                "product": {
                    "$ref": "#/components/schemas/Product"
                },
                "sku": {
                    "$ref": "#/components/schemas/Sku"
                }
            },
            "example": {
                "matcherId": "{{matcherid}}",
                "score": "{{score}} (must be decimal)",
                "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                "productRef": "{{productRef}}(should be specified when match is a product match)",
                "product": {
                    "name": "Produto exemplo",
                    "description": "Descricao exemplo",
                    "categoryId": 12,
                    "brandId": 1234567,
                    "specifications": null
                },
                "sku": {
                    "name": "Sku exemplo",
                    "eans": [
                        "12345678901213"
                    ],
                    "refId": null,
                    "height": 1,
                    "width": 1,
                    "length": 1,
                    "weight": 1,
                    "images": {
                        "imagem1.jpg": "imageurl.example"
                    },
                    "unitMultiplier": 1,
                    "measurementUnit": "un",
                    "specifications": {
                        "Embalagem": "3 kg"
                    }
                }
            }
          },
          "Product": {
            "title": "Product",
            "required": [
                "name",
                "description",
                "categoryId",
                "brandId",
                "specifications"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the product that will be matched.",
                    "default": "Book"
                },
                "description": {
                    "type": "string",
                    "description": "Product's description.",
                    "default": "Description of the product, how it will appear on the marketplace."
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The categoryId is already mapped through the Get Suggestions API. You can choose to keep the same suggested categoryID, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                    "default": "12"
                },
                "brandId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The brandId is already mapped through the Get Suggestions API. This field is nulled when the inserted value is 0.",
                    "default": "1234567"
                },
                "specifications": {
                    "type": "string", 
                    "description": "This field is optional. Add here any product specifications or details.",
                    "default": "",
                    "nullable": true
                }
            }
          },
          "Sku": {
            "title": "SKU",
            "required": [
                "name",
                "eans",
                "refId",
                "height",
                "width",
                "length",
                "weight",
                "images",
                "unitMultiplier",
                "measurementUnit",
                "specifications"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                "eans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SKU reference code.",
                    "default": ""
                },
                "refId": {
                    "type": "string",
                    "description": "SKU reference code.",
                    "default": "",
                    "nullable": true
                },
                "height": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Height of the SKU.",
                    "default": ""
                },
                "width": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Width of the SKU.",
                    "default": ""
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Length of the SKU.",
                    "default": ""
                },
                "weight": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Weight of the SKU.",
                    "default": ""
                },
                "images": {
                    "$ref": "#/components/schemas/Images"
                },
                "unitMultiplier": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value 1.",
                    "default": "1"
                },
                "measurementUnit": {
                    "type": "string",
                    "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value un.",
                    "default": ""
                },
                "specifications": {
                    "$ref": "#/components/schemas/Specifications"
                }
            },
            "example": {
                "name": "Sku exemplo",
                "eans": [
                    "12345678901213"
                ],
                "refId": null,
                "height": 1,
                "width": 1,
                "length": 1,
                "weight": 1,
                "images": {
                    "imagem1.jpg": "imageurl.example"
                },
                "unitMultiplier": 1,
                "measurementUnit": "un",
                "specifications": {
                    "Embalagem": "3 kg"
                }
            }
          },
          "Images": {
            "title": "Images",
            "required": [
                "imagem1.jpg"
            ],
            "type": "array",
            "properties": {
                "imagem1.jpg": {
                    "type": "string",
                    "description": "Array containing the URLs of the SKU's images."
                }
            },
            "example": {
                "imagem1.jpg": "imageurl.example"
            }
          },
          "Specifications": {
            "title": "Specifications",
            "required": [
                "Embalagem"
            ],
            "type": "object",
            "properties": {
                "Embalagem": {
                    "type": "string",
                    "description": "Packaging specifications. Should include package's weight."
                }
            },
            "example": {
                "Embalagem": "3 kg"
            }
          },
          "MatchMultiple": {
            "title": "MatchMultiple",
            "required": [
                "itemId",
                "versionId",
                "matchId",
                "matcherId",
                "categoryId",
                "sellerId"
            ],
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "string",
                    "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                    "default": ""
                },
                "versionId": {
                    "type": "string",
                    "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for.",
                    "default": ""
                },
                "matchId": {
                    "type": "string",
                    "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by.",
                    "default": ""
                },
                "matcherId": {
                    "type": "string",
                    "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example.",
                    "default": "vtex-matcher"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true,
                    "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The categoryId is already mapped through the Get Suggestions API. You can choose to keep the same suggested categoryID, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                    "default": "12"
                },
                "brandId": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true,
                    "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The brandId is already mapped through the Get Suggestions API. This field is nulled when the inserted value is 0, and is mandatory for the 'newproduct' action.",
                    "default": "1234567"
                },
                "skuRef": {
                    "type": "string",
                    "nullable": true,
                    "description": "Fill in this field on your request when the matched item is an SKU. This field is mandatory for the 'skuassociation' action.",
                    "default": ""
                },
                "productRef": {
                    "type": "string",
                    "description": "Fill in this field on your request when the matched item is a product. This field is mandatory for the 'productassociation' action.",
                    "default": "",
                    "nullable": true
                },
                "sellerId": {
                    "type": "string",
                    "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "default": ""
                }
            },
            "additionalProperties": false
          },
          "ReviewFields": {
            "type": "object",
            "title": "ReviewFields",
            "description": "Review fields submitted by marketplace operators, so sellers review and correct their sent SKUs.",
            "default": {},
            "required": [
                "field1",
                "field2"
            ],
            "properties": {
                "field1": {
                    "type": "string",
                    "title": "field1",
                    "description": "Operators can add as many fields to their request body as they like. The fieldâ€™s name can also be customized, indicating the SKUs'  attributes that contained errors, so sellers know exactly what fields need their review. For example: instead of `field1`, operators can name this attribute as `productDescription`, `productImage`, or `productName`.  \n\nThe field's value should describe what the problem with the attribute is, adding  instructing sellers on how to fix the problems found on their sent SKUs. For example: instead of `review instructions 1`, operators can add the following values to this attribute: `Description exceeds character limit`, `Image has low quality`.",
                    "default": "review instructions 1"
                },
                "field2": {
                    "type": "string",
                    "title": "field2",
                    "description": "Operators can add as many fields to their request body as they like. The fieldâ€™s name can also be customized, indicating the SKUs'  attributes that contained errors, so sellers know exactly what fields need their review. For example: instead of `field1`, operators can name this attribute as `productDescription`, `productImage`, or `productName`.  \n\nThe field's value should describe what the problem with the attribute is, adding  instructing sellers on how to fix the problems found on their sent SKUs. For example: instead of `review instructions 1`, operators can add the following values to this attribute: `Description exceeds character limit`, `Image has low quality`.",
                    "default": "review instructions 2"
                }
            }              
          }
        }
    },
	"tags": [
		{
			"name": "Notifications"
        },
        {
            "name": "SKU Approval Settings"
        },
        {
			"name": "Get Suggestions",
			"description": "Search and filter all suggestions using specific criteria"
        },
        {
			"name": "Get Versions",
			"description": "Search and filter all versions of suggestions, using specific criteria"
		},
		{
			"name": "Manage Suggestions",
			"description": "Send or delete SKU suggestions from the seller to marketplace"
		},
		{
			"name": "Match Received SKUs",
			"description": "Match SKU suggestions received in the marketplace"
        },
        {
            "name": "Review Received SKUs",
            "description": "Request review for received SKUs"
        }
	]
}