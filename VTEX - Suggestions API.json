{
	"openapi": "3.0.0",
	"info": {
		"title": "Sellers Suggestions API",
		"description": "Collection composed by requests for the VTEX Suggestion API, used by the sellers to input new SKU suggestions into marketplaces.",
		"contact": {},
		"version": "1.0"
	},
	"servers": [
		{
			"url": "https://api.vtex.com/{accountName}/",
			"description": "VTEX server url"
		}
	],
	"paths": {
		"/suggestions": {
			"get": {
				"tags": [
					"Suggestion Feed"
				],
				"summary": "List Received SKUs",
                "description": "This endpoint retrieves a list of all SKUs sent by the seller for the Marketplace's approval. Marketplace operators should use this endpoint whenever they want to check the full list of received SKUs and their  information. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher.  \n\nUnderstanding the Matcher's scores \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been `Approved`, `Denied` or `Pending`. \n\nApproved: score equal to or greater than 80. \n\nPending: from 31 to 79 points.\n\nDenied: from 0 to 30 points.",
				"operationId": "Getsuggestions",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
						"name": "q",
						"in": "query",
						"description": "This field allows you to customize your search. You can fill in this query param if you want to narrow down your search using the available filters on Received SKU modules.",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": ""
						}
					},
					{
						"name": "seller",
						"in": "query",
						"description": "Filter by seller id to narrow down your search to SKUs sent by a specific seller.",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": ""
						}
					},
					{
						"name": "status",
						"in": "query",
						"description": "Narrow down you search, filtering by status. Values allowed on this field include: `accepted`, `pending` and `denied.`",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "accepted"
						}
					},
					{
						"name": "hasmapping",
						"in": "query",
						"description": "This field allows you to filter SKUs that have mapping or not. Insert `true` to filter SKUs that have mapping, or `false` to retrieve SKUs that aren't mapped.",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "true"
						}
					},
					{
						"name": "matcherid",
						"in": "query",
						"description": "Filter by matcher ID. Every match made has a matcherId associated.",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": ""
						}
					},
					{
						"name": "_from",
						"in": "query",
						"description": "Record to start pagination (integer > 0, max 50 records per page)",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32",
							"minimum": 1,
							"example": ""
						}
					},
					{
						"name": "_to",
						"in": "query",
						"description": "Record to end pagination (integer > 0, max 50 records per page)",
						"required": false,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "integer",
							"format": "int32",
							"minimum": 1,
							"example": ""
						}
					},
					{
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
		},
        "/suggestions/{sellerId}/{sellerSkuId}": {
			"put": {
				"tags": [
					"Send Suggestion"
				],
				"summary": "Save Suggestion",
				"description": "This request is used by the seller when it wants to suggest that one of their SKUs is sold in the marketplace.\n\nBefore using this request, the seller should always use the [Change Notification](https://developers.vtex.com/reference/catalog-api-sku-seller#catalog-api-get-seller-sku-notification) request in order to check if the SKU already exists in the marketplace. If it doesn't, then this is the next call in the SKU integration flow.\n\nIn the Save Suggestion request, the seller must send information about the SKU, such as the product and SKU name, the seller ID, and the image URL. All parameters are explained below.",
				"operationId": "SaveSuggestion",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account to which the seller wants to suggest a new SKU. It is used as part of the request URL.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
						"name": "Accept",
						"in": "header",
						"description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/vnd.vtex.suggestion.v0+json",
                            "default": "application/json"
						}
					},
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
					{
						"name": "sellerId",
						"in": "path",
						"description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sellerSkuId",
						"in": "path",
						"description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SaveSuggestionRequest"
							},
							"example": {
								"ProductId": 321,
								"ProductName": "Product sample",
								"NameComplete": "My complete product name?",
								"ProductDescription": "sample",
								"BrandName": "Brand 1",
								"SkuName": "Sku sample",
								"SellerId": null,
								"Height": 1,
								"Width": 1,
								"Length": 1,
								"WeightKg": 1,
								"Updated": null,
								"RefId": "REFID123",
								"SellerStockKeepingUnitId": 567,
								"CategoryFullPath": "Category 1",
								"Images": [
									{
										"imageName": "Principal",
										"imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
									}
								],
								"ProductSpecifications": [
									{
										"fieldName": "prodspec1",
										"fieldValue": "value1"
									}
								],
								"SkuSpecifications": [
									{
										"fieldName": "skuspec1",
										"fieldValue": "value2"
									}
								],
								"EAN": "EAN123",
								"MeasurementUnit": "un",
								"UnitMultiplier": 1,
								"AvailableQuantity": 111,
								"Pricing": {
									"Currency": "BRL",
									"SalePrice": 399,
									"CurrencySymbol": "R$"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			},
			"get": {
				"tags": [
					"Manage Suggestions"
				],
				"summary": "Get Suggestion by SKU ID",
				"description": "Who: Marketplace, partners who created matchers. Search for specific SKU. ",
				"operationId": "GetSuggestion",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
                        "name": "Accept",
                        "in": "header",
<<<<<<< HEAD
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
=======
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
>>>>>>> master
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "sellerId",
						"in": "path",
						"description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sellerskuid",
						"in": "path",
						"description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			},
			"delete": {
				"tags": [
					"Manage"
				],
				"summary": "Delete Suggestion",
				"description": "Deletes one SKU at a time. This request cannot be undone, but a workaround is to send the suggestion again. *Checar diferença entre deletar e negar suggestion.",
				"operationId": "DeleteSuggestion",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL.",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
                        "name": "Accept",
                        "in": "header",
<<<<<<< HEAD
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
=======
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
>>>>>>> master
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "sellerId",
						"in": "path",
						"description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sellerskuid",
						"in": "path",
						"description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
		},
		"/suggestions/{sellerId}/{sellerskuid}/versions": {
			"get": {
				"tags": [
					"Manage"
				],
				"summary": "Get Versions",
				"description": "Why: atualização de um item, importante mapear versões passadas, comparar versões pra identificar mudanças. This endpoint retrieves all versions of a specific received SKU, or suggestion.",
				"operationId": "GetVersions",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "sellerId",
						"in": "path",
						"description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sellerskuid",
						"in": "path",
						"description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
		},
		"/suggestions/{sellerId}/{sellerskuid}/versions/{version}": {
			"get": {
				"tags": [
					"Manage"
				],
				"summary": "Get Suggestion by version Id",
				"description": "This endpoint retrieves the most recent version of a specific received SKU. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.",
				"operationId": "GetSuggestionbyversion",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "sellerId",
						"in": "path",
						"description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sellerskuid",
						"in": "path",
						"description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "version",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
		},
		"/suggestions/{sellerId}/{sellerskuid}/versions/{version}/matches/{matchid}": {
			"put": {
				"tags": [
					"Manage"
				],
				"summary": "Match Received SKUs individually",
				"description": "This endpoint allows the user to match received SKUs, by one at a time.",
				"operationId": "Match",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
					{
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "sellerId",
						"in": "path",
						"description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sellerskuid",
						"in": "path",
						"description": "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "version",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "matchid",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MatchRequest"
							},
							"example": {
								"matcherId": "{{matcherid}}",
								"score": "{{score}} (must be decimal)",
								"skuRef": "{{skuid}}(should be specifed when match is a sku match)",
								"productRef": "{{productRef}}(should be specified when match is a product match)",
								"product": {
									"name": "Produto exemplo",
									"description": "Descricao exemplo",
									"categoryId": 12,
									"brandId": 1234567,
									"specifications": null
								},
								"sku": {
									"name": "Sku exemplo",
									"eans": [
										"12345678901213"
									],
									"refId": null,
									"height": 1,
									"width": 1,
									"length": 1,
									"weight": 1,
									"images": {
										"imagem1.jpg": "imageurl.example"
									},
									"unitMultiplier": 1,
									"measurementUnit": "un",
									"specifications": {
										"Embalagem": "3 kg"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
        },
        "/{accountname}/suggestions/matches/action/{actionName}":
            {
			"put": {
				"tags": [
					"Manage"
				],
				"summary": "Match Multiple Received SKUs",
				"description": "This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.",
				"operationId": "Match",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {  
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Describes the type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                      },
					{
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
					},
					{
						"name": "actionName",
						"in": "path",
						"description": "This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
						"required": true,
						"style": "simple",
						"schema": {
                            "type": "string",
                            "default": "newprodcut"
                        }
                    }
                ],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MatchMultiple"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
        }
    },
	"components": {
		"schemas": {
            "SaveSuggestionRequest": {
				"title": "SaveSuggestionRequest",
				"required": [
					"ProductName",
					"ProductDescription",
					"BrandName",
					"SkuName",
					"SellerId",
					"Height",
					"Width",
					"Length",
					"WeightKg",
					"Updated",
					"RefId",
					"CategoryFullPath",
					"Images",
					"EAN",
					"AvailableQuantity",
					"Pricing"
				],
				"type": "object",
				"properties": {
					"ProductName": {
                        "type": "string",
                        "description": "Name of the suggested product. This field has a limit of 150 characters."
					},
					"ProductDescription": {
						"type": "string",
                        "description": "Product Description containing the main information about the product (not the SKU)."
					},
					"BrandName": {
						"type": "string",
                        "description": "Name of the brand to which this SKU belongs. It must match the brand created in the marketplace."
					},
					"SkuName": {
						"type": "string",
                        "description": "Name of the suggested SKU."
					},
					"SellerId": {
						"type": "integer",
                        "description": "ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built."
                    },
                    "ListPrice": {
						"type": "integer",
                        "description": "List price of the SKU. This shows to the customer as the 'previous' value of the SKU in a scenario where a lower price is being applied."
                    },
                    "Price": {
						"type": "object",
                        "description": "Actual selling price of the SKU.",
                        "object": []
					},
					"Height": {
						"type": "integer",
						"format": "decimal",
                        "description": "Height of the SKU."
					},
					"Width": {
						"type": "integer",
						"format": "decimal",
                        "description": "Width of the SKU."
					},
					"Length": {
						"type": "integer",
						"format": "decimal",
                        "description": "Length of the SKU."
					},
					"WeightKg": {
						"type": "integer",
						"format": "decimal",
                        "description": "Weight of the SKU in kilograms."
					},
					"RefId": {
						"type": "string",
                        "description": "SKU reference code. Mandotory if the EAN is not informed."
					},
					"EAN": {
						"type": "string",
                        "description": "SKU reference code. Mandatory if the RefId is not informed."
					},
					"SellerStockKeepingUnitId": {
						"type": "integer",
						"format": "int32",
                        "description": "ID of the SKU registered in the seller."
					},
					"CategoryFullPath": {
						"type": "string",
                        "description": "Full path to the SKU's category. It should be writen as {department}/{category}. For example: if the department is 'Appliances' and the category is 'Oven', the full path should be 'Appliances/Oven'."
					},
					"SkuSpecifications": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SkuSpecification"
						},
						"description": "Array containing the names and values of the SKU specifications."
					},
					"ProductSpecifications": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ProductSpecification"
						},
						"description": "Array containing the names and values of the product specifications."
					},
					"Images": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Image"
						},
						"description": "Array containing the URLs and names the SKU images."
					},
					"MeasurementUnit": {
						"type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`."
					},
					"UnitMultiplier": {
						"type": "integer",
						"format": "int32",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`."
					},
					"AvailableQuantity": {
						"type": "integer",
						"format": "int32",
                        "description": ""
					},
					"Pricing": {
						"type": "object",
						"properties": {
							"Currency": {
								"type": "string"
							},
							"SalePrice": {
								"type": "integer",
								"format": "int32"
							},
							"CurrencySymbol": {
								"type": "string"
							}
						},
						"description": ""
					}
				},
				"example": {
					"ProductId": 321,
					"ProductName": "Product sample",
					"NameComplete": "My complete product name?",
					"ProductDescription": "sample",
					"BrandName": "Brand 1",
					"SkuName": "Sku sample",
					"SellerId": null,
					"Height": 1,
					"Width": 1,
					"Length": 1,
					"WeightKg": 1,
					"Updated": null,
					"RefId": "REFID123",
					"SellerStockKeepingUnitId": 567,
					"CategoryFullPath": "Category 1",
					"Images": [
						{
							"imageName": "Principal",
							"imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
						}
					],
					"ProductSpecifications": [
						{
							"fieldName": "prodspec1",
							"fieldValue": "value1"
						}
					],
					"SkuSpecifications": [
						{
							"fieldName": "skuspec1",
							"fieldValue": "value2"
						}
					],
					"EAN": "EAN123",
					"MeasurementUnit": "un",
					"UnitMultiplier": 1,
					"AvailableQuantity": 111,
					"Pricing": {
						"Currency": "BRL",
						"SalePrice": 399,
						"CurrencySymbol": "R$"
					}
				}
			},
			"SkuSpecification": {
				"title": "SkuSpecification",
				"required": [
					"fieldName",
					"fieldValue"
				],
				"type": "object",
				"properties": {
					"fieldName": {
                        "type": "string",
                        "description": "Name of the SKU specification field. Example: 'Color'."
					},
					"fieldValue": {
						"type": "string",
                        "description": "Value of the SKU specification field. Example: 'Red'."
					}
				},
				"example": {
					"fieldName": "spec1",
					"fieldValue": "value1"
				}
			},
			"ProductSpecification": {
				"title": "ProductSpecification",
				"required": [
					"fieldName",
					"fieldValue"
				],
				"type": "object",
				"properties": {
					"fieldName": {
						"type": "string",
                        "description": "Name of the product specification field. Example: 'Fabric'."
					},
					"fieldValue": {
						"type": "string",
                        "description": "Value of the product specification field. Example: 'Cotton'."
					}
				},
				"example": {
					"fieldName": "spec1",
					"fieldValue": "value1"
				}
			},
			"Image": {
				"title": "Image",
				"required": [
					"imageName",
					"imageUrl"
				],
				"type": "object",
				"properties": {
					"imageName": {
						"type": "string",
                        "description": "Name of the SKU image."
					},
					"imageUrl": {
						"type": "string",
                        "description": "URL of the SKU image."
					}
				},
				"example": {
					"imageName": "Principal",
					"imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
				}
			},
			"MatchRequest": {
				"title": "MatchRequest",
				"required": [
					"matcherId",
					"score",
					"skuRef",
					"productRef",
					"product",
                    "sku",
                    "matchType"
				],
				"type": "object",
				"properties": {
					"matcherId": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "matchType": {
                        "type": "string",
                        "description": "NewProduct, ProductMatch, ItemMatch, Deny,Incomplete, Pending, InsufficientScore",
                        "default": ""
					},
					"score": {
                        "type": "string",
                        "description": "The values inserted on this field must be decimal.",
                        "default": ""
					},
					"skuRef": {
                        "type": "string",
                        "nullable": true,
                        "description": "Fill in this field on your request when the matched item is an SKU.",
                        "default": ""
					},
					"productRef": {
                        "type": "string",
                        "description": "Fill in this field on your request when the matched item is a product.",
                        "default": "",
                        "nullable": true
					},
					"product": {
						"$ref": "#/components/schemas/Product"
					},
					"sku": {
						"$ref": "#/components/schemas/Sku"
					}
				},
				"example": {
					"matcherId": "{{matcherid}}",
					"score": "{{score}} (must be decimal)",
					"skuRef": "{{skuid}}(should be specifed when match is a sku match)",
					"productRef": "{{productRef}}(should be specified when match is a product match)",
					"product": {
						"name": "Produto exemplo",
						"description": "Descricao exemplo",
						"categoryId": 12,
						"brandId": 1234567,
						"specifications": null
					},
					"sku": {
						"name": "Sku exemplo",
						"eans": [
							"12345678901213"
						],
						"refId": null,
						"height": 1,
						"width": 1,
						"length": 1,
						"weight": 1,
						"images": {
							"imagem1.jpg": "imageurl.example"
						},
						"unitMultiplier": 1,
						"measurementUnit": "un",
						"specifications": {
							"Embalagem": "3 kg"
						}
					}
				}
			},
			"Product": {
				"title": "Product",
				"required": [
					"name",
					"description",
					"categoryId",
					"brandId",
					"specifications"
				],
				"type": "object",
				"properties": {
					"name": {
                        "type": "string",
                        "description": "Name of the product that will be matched.",
                        "default": "Book"
					},
					"description": {
                        "type": "string",
                        "description": "Product's description.",
                        "default": ""
					},
					"categoryId": {
						"type": "integer",
                        "format": "int32",
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The categoryId is already mapped through the Get Suggestions API. You can choose to keep the same suggested categoryID, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                        "default": "12"
					},
					"brandId": {
						"type": "integer",
                        "format": "int32",
                        "description": "This field is nulled when the inserted value is 0.",
                        "default": "1234567"
					},
					"specifications": {
                        "type": "string", 
                        "description": "This field is optional. Add here any product specifications or details.",
                        "default": "",
						"nullable": true
					}
				}
			},
			"Sku": {
				"title": "Sku",
				"required": [
					"name",
					"eans",
					"refId",
					"height",
					"width",
					"length",
					"weight",
					"images",
					"unitMultiplier",
					"measurementUnit",
					"specifications"
				],
				"type": "object",
				"properties": {
					"name": {
                        "type": "string",
                        "description": "",
                        "default": ""
					},
					"eans": {
						"type": "array",
						"items": {
							"type": "string"
						},
                        "description": "",
                        "default": ""
					},
					"refId": {
                        "type": "string",
                        "description": "",
                        "default": "",
						"nullable": true
					},
					"height": {
						"type": "integer",
                        "format": "int32",
                        "description": "",
                        "default": ""
					},
					"width": {
						"type": "integer",
                        "format": "int32",
                        "description": "",
                        "default": ""
					},
					"length": {
						"type": "integer",
                        "format": "int32",
                        "description": "",
                        "default": ""
					},
					"weight": {
						"type": "integer",
                        "format": "int32",
                        "description": "",
                        "default": ""
					},
					"images": {
						"$ref": "#/components/schemas/Images"
					},
					"unitMultiplier": {
						"type": "integer",
                        "format": "int32",
                        "description": "",
                        "default": ""
					},
					"measurementUnit": {
                        "type": "string",
                        "description": "",
                        "default": ""
					},
					"specifications": {
						"$ref": "#/components/schemas/Specifications"
					}
				},
				"example": {
					"name": "Sku exemplo",
					"eans": [
						"12345678901213"
					],
					"refId": null,
					"height": 1,
					"width": 1,
					"length": 1,
					"weight": 1,
					"images": {
						"imagem1.jpg": "imageurl.example"
					},
					"unitMultiplier": 1,
					"measurementUnit": "un",
					"specifications": {
						"Embalagem": "3 kg"
					}
				}
			},
			"Images": {
				"title": "Images",
				"required": [
					"imagem1.jpg"
				],
				"type": "object",
				"properties": {
					"imagem1.jpg": {
						"type": "string"
					}
				},
				"example": {
					"imagem1.jpg": "imageurl.example"
				}
			},
			"Specifications": {
				"title": "Specifications",
				"required": [
					"Embalagem"
				],
				"type": "object",
				"properties": {
					"Embalagem": {
						"type": "string"
					}
				},
				"example": {
					"Embalagem": "3 kg"
				}
            },
            "MatchMultiple": {
				"title": "MatchMultiple",
				"required": [
                    "itemId",
                    "versionId",
                    "matchId",
                    "matcherId",
                    "categoryId",
                    "sellerId"
				],
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                        "default": ""
                    },
                    "versionId": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "matchId": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "matcherId": {
                        "type": "string",
                        "description": "",
                        "default": ""
                    },
                    "categoryId": {
						"type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The categoryId is already mapped through the Get Suggestions API. You can choose to keep the same suggested categoryID, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                        "default": "12"
                    },
                    "brandId": {
						"type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "This field is mandatory for the 'newproduct' action. It is nulled when the inserted value is 0.",
                        "default": "1234567"
                    },
                    "skuRef": {
                        "type": "string",
                        "nullable": true,
                        "description": "Fill in this field on your request when the matched item is an SKU. This field is mandatory for the 'skuassociation' action.",
                        "default": ""
                    },
                    "productRef": {
                        "type": "string",
                        "description": "Fill in this field on your request when the matched item is a product. This field is mandatory for the 'productassociation' action.",
                        "default": "",
                        "nullable": true
                    },
                    "sellerId": {
                        "type": "string",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "default": ""
                    }
                },
                "additionalProperties": false
            }
		},
		"securitySchemes": {
			"appKey": {
				"type": "apiKey",
				"in": "header",
				"name": "X-VTEX-API-AppKey"
			},
			"appToken": {
				"type": "apiKey",
				"in": "header",
				"name": "X-VTEX-API-AppToken"
			}
		}
	},
	"tags": [
		{
			"name": "Suggestion Feed",
			"description": "Search and filter all suggestions using specific criteria"
		},
		{
			"name": "Send Suggestion",
			"description": "Send SKU suggestions from seller to marketplace"
		},
		{
			"name": "Manage Suggestions",
			"description": "Manage SKU suggestions received in the marketplace"
		}
	],
	"security": [
		{
			"appKey": [],
			"appToken": []
		}
	]
}