{
	"openapi": "3.0.0",
	"info": {
		"title": "Payment Provider Protocol",
		"description": "The Payment Provider Protocol is a set of definitions to help you integrate your payment processing API into VTEX platform, including sub-acquirers, acquirers, gateways and custom payment services. To achieve this, you need to implement a web API (REST) following the specifications from this documentation.\n\n##### MORE INFORMATION\n\n---\n\n> *VTEX Help Center - Payment Provider Protocol*\n> \n> *https://help.vtex.com/en/tutorial/payment-provider-protocol*\n\n\n##### ENDPOINT REQUIREMENTS\n\n---\n\n> &rsaquo; Must use a standard subdomain/domain name, and not a IP address.<br />\n> &rsaquo; Must be served over HTTPS on port 443 with TLS 1.2 support.<br />\n> &rsaquo; Must respond in less than 5 seconds when running the tests.<br />\n> &rsaquo; Must respond in less than 20 seconds when in production.<br />\n> &rsaquo; Must be PCI-DSS compliant to accept branded cards like Visa, Mastercard, Amex, etc.\n\n\n##### TESTING\n\n---\n\n> *VTEX - Payment Provider Test Suite*\n> \n> *https://apps.vtex.com/vtex-payment-provider-test-suite/p*\n>\n> *An extra header* `X-VTEX-API-Is-TestSuite` = `true` *will be sent for every test suite request, to help you easily identify it and mock any required scenarios.*\n\n\n##### COMMON PARAMETERS IN THE DOCUMENTATION\n\n---\n\n<table>\n  <tr>\n    <td><code>{{providerApiEndpoint}}</code></td>\n    <td>Provider's endpoint for the implementation</td>\n  </tr>\n  <tr>\n    <td><code>{{X-VTEX-API-AppKey}}</code></td>\n    <td>The AppKey configured by the merchant</td>\n  </tr>\n  <tr>\n    <td><code>{{X-VTEX-API-AppToken}}</code></td>\n    <td>The AppToken configured by the merchant</td>\n  </tr>\n</table>",
		"contact": {},
		"version": "1.0"
	},
	"servers": [
		{
			"url": "https://{providerApiEndpoint}",
			"description": "VTEX server url"
		}
	],
	"paths": {
		"/payment-methods": {
			"get": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Payment Methods",
				"description": "",
				"operationId": "PaymentMethods",
				"parameters": [
                    {
                        "name": "providerApiEndpoint",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
					{
						"name": "Content-Type",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Success"
								},
								"example": {
									"paymentMethods": [
										"Visa",
										"Mastercard",
										"American Express",
										"BankInvoice",
										"Privatelabels",
										"Promissories"
									]
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Create Payment",
				"description": "",
				"operationId": "CreatePayment",
				"parameters": [
                    {
                        "name": "providerApiEndpoint",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},	
						{
							"name": "Content-Type",
							"in": "header",
							"description": "",
							"required": true,
							"style": "simple",
							"schema": {
								"type": "string",
								"example": "application/json"
							}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"type": "string",
								"example": "{\n    \"reference\": \"32478982\",\n    \"orderId\": \"v967373115140abc\",\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n    \"paymentMethod\": \"{{paymentMethod}}\",\n    \"paymentMethodCustomCode\": \"{{paymentMethodCustomCode}}\",\n    \"merchantName\": \"mystore\",\n    \"value\": {{paymentValue}},\n    \"currency\": \"{{paymentCurrency}}\",\n    \"installments\": {{paymentInstallments}},\n    \"deviceFingerprint\": \"12ade389087fe\",\n    \"card\": {\n        \"holder\": \"{{cardHolder}}\",\n        \"number\": \"{{cardNumber}}\",\n        \"csc\": \"{{cardSecurityCode}}\",\n        \"expiration\": {\n            \"month\": \"{{cardExpirationMonth}}\",\n            \"year\": \"{{cardExpirationYear}}\"\n        }\n    },\n    \"miniCart\": {\n        \"shippingValue\": 11.44,\n        \"taxValue\": 10.01,\n        \"buyer\": {\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"document\": \"01234567890\",\n            \"documentType\": \"CPF\",\n            \"email\": \"john.doe@example.com\",\n            \"phone\": \"+5521987654321\"\n        },\n        \"shippingAddress\": {\n            \"country\": \"BRA\",\n            \"street\": \"Praia de Botafogo St.\",\n            \"number\": \"300\",\n            \"complement\": \"3rd Floor\",\n            \"neighborhood\": \"Botafogo\",\n            \"postalCode\": \"22250040\",\n            \"city\": \"Rio de Janeiro\",\n            \"state\": \"RJ\"\n        },\n        \"billingAddress\": {\n            \"country\": \"BRA\",\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\n            \"number\": \"4440\",\n            \"complement\": \"10th Floor\",\n            \"neighborhood\": \"Itaim Bibi\",\n            \"postalCode\": \"04538132\",\n            \"city\": \"São Paulo\",\n            \"state\": \"SP\"\n        },\n        \"items\": [\n            {\n                \"id\": \"132981\",\n                \"name\": \"My First Product\",\n                \"price\": 2134.90,\n                \"quantity\": 2,\n                \"discount\": 5.00\n            },\n            {\n                \"id\": \"123242\",\n                \"name\": \"My Second Product\",\n                \"price\": 21.98,\n                \"quantity\": 1,\n                \"discount\": 1.00\n            }\n        ]\n    },\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n    \"callbackUrl\": \"{{callbackUrl}}\",\n    \"returnUrl\": \"{{returnUrl}}\"\n}"
							},
							"example": "{\n    \"reference\": \"32478982\",\n    \"orderId\": \"v967373115140abc\",\n    \"transactionId\": \"D3AA1FC8372E430E8236649DB5EBD08E\",\n    \"paymentId\": \"F5C1A4E20D3B4E07B7E871F5B5BC9F91\",\n    \"paymentMethod\": \"{{paymentMethod}}\",\n    \"paymentMethodCustomCode\": \"{{paymentMethodCustomCode}}\",\n    \"merchantName\": \"mystore\",\n    \"value\": {{paymentValue}},\n    \"currency\": \"{{paymentCurrency}}\",\n    \"installments\": {{paymentInstallments}},\n    \"deviceFingerprint\": \"12ade389087fe\",\n    \"card\": {\n        \"holder\": \"{{cardHolder}}\",\n        \"number\": \"{{cardNumber}}\",\n        \"csc\": \"{{cardSecurityCode}}\",\n        \"expiration\": {\n            \"month\": \"{{cardExpirationMonth}}\",\n            \"year\": \"{{cardExpirationYear}}\"\n        }\n    },\n    \"miniCart\": {\n        \"shippingValue\": 11.44,\n        \"taxValue\": 10.01,\n        \"buyer\": {\n            \"id\": \"c1245228-1c68-11e6-94ac-0afa86a846a5\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"document\": \"01234567890\",\n            \"documentType\": \"CPF\",\n            \"email\": \"john.doe@example.com\",\n            \"phone\": \"+5521987654321\"\n        },\n        \"shippingAddress\": {\n            \"country\": \"BRA\",\n            \"street\": \"Praia de Botafogo St.\",\n            \"number\": \"300\",\n            \"complement\": \"3rd Floor\",\n            \"neighborhood\": \"Botafogo\",\n            \"postalCode\": \"22250040\",\n            \"city\": \"Rio de Janeiro\",\n            \"state\": \"RJ\"\n        },\n        \"billingAddress\": {\n            \"country\": \"BRA\",\n            \"street\": \"Brigadeiro Faria Lima Avenue\",\n            \"number\": \"4440\",\n            \"complement\": \"10th Floor\",\n            \"neighborhood\": \"Itaim Bibi\",\n            \"postalCode\": \"04538132\",\n            \"city\": \"São Paulo\",\n            \"state\": \"SP\"\n        },\n        \"items\": [\n            {\n                \"id\": \"132981\",\n                \"name\": \"My First Product\",\n                \"price\": 2134.90,\n                \"quantity\": 2,\n                \"discount\": 5.00\n            },\n            {\n                \"id\": \"123242\",\n                \"name\": \"My Second Product\",\n                \"price\": 21.98,\n                \"quantity\": 1,\n                \"discount\": 1.00\n            }\n        ]\n    },\n    \"url\": \"https://admin.mystore.example.com/orders/v32478982\",\n    \"callbackUrl\": \"{{callbackUrl}}\",\n    \"returnUrl\": \"{{returnUrl}}\"\n}"
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "250"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Mon, 18 Dec 2017 17:48:04 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "d1584732-1e85-4e80-94d7-7db826241865"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success-Approved"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"status": "approved",
									"authorizationId": "AUT123567",
									"nsu": "NSU987432",
									"tid": "TID1578324421",
									"acquirer": "FooBarPayments",
									"delayToAutoSettle": 432000,
									"delayToAutoSettleAfterAntifraud": 120,
									"delayToCancel": 600
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-BadRequest"
								},
								"example": {
									"status": "error",
									"code": "ERR123",
									"message": "The currency ABC is not supported"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-BadRequest"
								},
								"example": {
									"status": "error",
									"code": "ERR123",
									"message": "Authorization has failed due to an internal error"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/cancellations": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Cancel Payment",
				"description": "",
				"operationId": "CancelPayment",
				"parameters": [
                    {
                        "name": "providerApiEndpoint",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
					},
					{
                        "name": "paymentId",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "paymentId",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CancelPaymentRequest"
							},
							"example": {
								"paymentId": "{{paymentId}}",
								"requestId": "{{requestId}}"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "195"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Wed, 20 Dec 2017 19:24:56 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "a356f861-1a30-4260-82ae-938476b30fbf"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success1"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"cancellationId": "1231323234234",
									"code": null,
									"message": "Sucessfully cancelled",
									"requestId": "D12D9B80972C462980F5067A3A126837"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError1"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"cancellationId": null,
									"code": "ERR123",
									"message": "Cancellation has failed due to an internal error",
									"requestId": "D12D9B80972C462980F5067A3A126837"
								}
							}
						}
					},
					"501": {
						"description": "Not Implemented",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError1"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"cancellationId": null,
									"code": "cancel-manually",
									"message": "This payment needs to be manually cancelled",
									"requestId": "D12D9B80972C462980F5067A3A126837"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/settlements": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Capture Payment",
				"description": "",
				"operationId": "CapturePayment",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "paymentId",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"type": "string",
								"example": "{\n    \"paymentId\": \"{{paymentId}}\",\n    \"transactionId\": \"{{transactionId}}\",\n    \"value\": {{settleValue}},\n    \"requestId\": \"{{requestId}}\"\n}"
							},
							"example": "{\n    \"paymentId\": \"{{paymentId}}\",\n    \"transactionId\": \"{{transactionId}}\",\n    \"value\": {{settleValue}},\n    \"requestId\": \"{{requestId}}\"\n}"
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "86"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Wed, 20 Dec 2017 19:28:24 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "33189b5d-daa0-4974-8989-47a408752bb8"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success2"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"settleId": "2EA354989E7E4BBC9F9D7B66674C2574",
									"value": 57,
									"code": null,
									"message": "Sucessfully settled",
									"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError2"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"settleId": null,
									"value": 0,
									"code": "ERR123",
									"message": "Settlement has failed due to an internal error",
									"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/refunds": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Refund Payment",
				"description": "",
				"operationId": "RefundPayment",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "paymentId",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"type": "string",
								"example": "{\n    \"paymentId\": \"{{paymentId}}\",\n    \"transactionId\": \"{{transactionId}}\",\n    \"settleId\": \"{{settleId}}\",\n    \"value\": {{refundValue}},\n    \"requestId\": \"{{requestId}}\"\n}"
							},
							"example": "{\n    \"paymentId\": \"{{paymentId}}\",\n    \"transactionId\": \"{{transactionId}}\",\n    \"settleId\": \"{{settleId}}\",\n    \"value\": {{refundValue}},\n    \"requestId\": \"{{requestId}}\"\n}"
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "86"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Wed, 20 Dec 2017 19:34:57 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "d91fb3a7-b233-4d7a-b3d2-75263856d29a"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success3"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"refundId": "2EA354989E7E4BBC9F9D7B66674C2574",
									"value": 57,
									"code": null,
									"message": "Sucessfully refunded",
									"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError3"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"refundId": null,
									"value": 0,
									"code": "ERR123",
									"message": "Refund has failed due to an internal error",
									"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
								}
							}
						}
					},
					"501": {
						"description": "Not Implemented",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Fail-GenericError3"
								},
								"example": {
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"refundId": null,
									"value": 0,
									"code": "refund-manually",
									"message": "This payment needs to be manually refunded",
									"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/payments/{paymentId}/inbound-request/{action}": {
			"post": {
				"tags": [
					"Payment Flow"
				],
				"summary": "Inbound Request (BETA)",
				"description": "",
				"operationId": "InboundRequest(BETA)",
				"parameters": [
                    {
                        "name": "accountName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the VTEX account. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "apiexamples"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "required": true,
                        "description": "Environment to use. Used as part of the URL",
                        "schema": {
                            "type": "string",
                            "default": "vtexcommercestable"
                        }
                    },
					{
						"name": "action",
						"in": "path",
						"description": "Will be the same you have used to call the `inboundRequestsUrl`",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "{{action}}"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "paymentId",
						"in": "path",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InboundRequest_BETA_Request"
							},
							"example": {
								"requestId": "{{requestId}}",
								"transactionId": "{{transactionId}}",
								"paymentId": "{{paymentId}}",
								"authorizationId": "{{authorizationId}}",
								"tid": "{{tid}}",
								"requestData": {
									"body": "{{originalRequestBody}}"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Success4"
								},
								"example": {
									"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
									"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
									"responseData": {
										"statusCode": 200,
										"contentType": "application/json",
										"content": "{\"myAttribute\":\"anyValue\"}"
									}
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/authorization/token": {
			"post": {
				"tags": [
					"Configuration Flow"
				],
				"summary": "Create Authorization Token",
				"description": "",
				"operationId": "CreateAuthorizationToken",
				"parameters": [
                    {
                        "name": "providerApiEndpoint",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}	
					}
				],
				"requestBody": {
					"description": "",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateAuthorizationTokenRequest"
							},
							"example": {
								"applicationId": "vtex",
								"returnUrl": "https://admin.mystore.example.com/provider-return?authorizationCode="
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "71"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Mon, 16 Jul 2018 15:10:44 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "d8f17ed2-ba9f-4f6d-8f8c-52bd425d7a52"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success5"
								},
								"example": {
									"applicationId": "vtex",
									"token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		},
		"/authorization/redirect": {
			"get": {
				"tags": [
					"Configuration Flow"
				],
				"summary": "Provider Authentication",
				"description": "",
				"operationId": "ProviderAuthentication",
				"parameters": [
                    {
                        "name": "providerApiEndpoint",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
					{
						"name": "applicationId",
						"in": "query",
						"description": "",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "vtex"
						}
					},
					{
						"name": "token",
						"in": "query",
						"description": "",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "{{token}}"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {}
					}
				},
				"deprecated": false
			}
		},
		"/authorization/credentials": {
			"get": {
				"tags": [
					"Configuration Flow"
				],
				"summary": "Get Credentials",
				"description": "",
				"operationId": "GetCredentials",
				"parameters": [
                    {
                        "name": "providerApiEndpoint",
                        "in": "path",
                        "required": true,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
					{
						"name": "applicationId",
						"in": "query",
						"description": "",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "vtex"
						}
					},
					{
						"name": "authorizationCode",
						"in": "query",
						"description": "",
						"required": true,
						"style": "form",
						"explode": true,
						"schema": {
							"type": "string",
							"example": "{{authorizationCode}}"
						}
					},
					{
						"name": "Content-Type",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"description": "",
						"required": true,
						"style": "simple",
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"headers": {
							"Cache-Control": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Connection": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "keep-alive"
									}
								}
							},
							"Content-Length": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "122"
									}
								}
							},
							"Date": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Mon, 16 Jul 2018 14:22:51 GMT"
									}
								}
							},
							"Expires": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "-1"
									}
								}
							},
							"Pragma": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "no-cache"
									}
								}
							},
							"Server": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "Microsoft-IIS/8.0"
									}
								}
							},
							"X-AspNet-Version": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "4.0.30319"
									}
								}
							},
							"X-Powered-By": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "ASP.NET"
									}
								}
							},
							"x-vtex-operation-id": {
								"content": {
									"text/plain": {
										"schema": {
											"type": "string"
										},
										"example": "187e390e-8cf8-4f42-a376-242f5ef4f740"
									}
								}
							}
						},
						"content": {
							"application/json; charset=utf-8": {
								"schema": {
									"$ref": "#/components/schemas/Success6"
								},
								"example": {
									"applicationId": "vtex",
									"appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
									"appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
								}
							}
						}
					}
				},
				"deprecated": false
			}
		}
	},
	"components": {
		"schemas": {
			"Success": {
				"title": "Success",
				"required": [
					"paymentMethods"
				],
				"type": "object",
				"properties": {
					"paymentMethods": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": ""
					}
				},
				"example": {
					"paymentMethods": [
						"Visa",
						"Mastercard",
						"American Express",
						"BankInvoice",
						"Privatelabels",
						"Promissories"
					]
				}
			},
			"Success-Approved": {
				"title": "Success-Approved",
				"required": [
					"paymentId",
					"status",
					"authorizationId",
					"nsu",
					"tid",
					"acquirer",
					"delayToAutoSettle",
					"delayToAutoSettleAfterAntifraud",
					"delayToCancel"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"authorizationId": {
						"type": "string"
					},
					"nsu": {
						"type": "string"
					},
					"tid": {
						"type": "string"
					},
					"acquirer": {
						"type": "string"
					},
					"delayToAutoSettle": {
						"type": "integer",
						"format": "int32"
					},
					"delayToAutoSettleAfterAntifraud": {
						"type": "integer",
						"format": "int32"
					},
					"delayToCancel": {
						"type": "integer",
						"format": "int32"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"status": "approved",
					"authorizationId": "AUT123567",
					"nsu": "NSU987432",
					"tid": "TID1578324421",
					"acquirer": "FooBarPayments",
					"delayToAutoSettle": 432000,
					"delayToAutoSettleAfterAntifraud": 120,
					"delayToCancel": 600
				}
			},
			"Fail-BadRequest": {
				"title": "Fail-BadRequest",
				"required": [
					"status",
					"code",
					"message"
				],
				"type": "object",
				"properties": {
					"status": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				},
				"example": {
					"status": "error",
					"code": "ERR123",
					"message": "The currency ABC is not supported"
				}
			},
			"CancelPaymentRequest": {
				"title": "CancelPaymentRequest",
				"required": [
					"paymentId",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "{{paymentId}}",
					"requestId": "{{requestId}}"
				}
			},
			"Success1": {
				"title": "Success1",
				"required": [
					"paymentId",
					"cancellationId",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"cancellationId": {
						"type": "string"
					},
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"cancellationId": "1231323234234",
					"code": null,
					"message": "Sucessfully cancelled",
					"requestId": "D12D9B80972C462980F5067A3A126837"
				}
			},
			"Fail-GenericError1": {
				"title": "Fail-GenericError1",
				"required": [
					"paymentId",
					"cancellationId",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"cancellationId": {
						"type": "string",
						"nullable": true
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"cancellationId": null,
					"code": "ERR123",
					"message": "Cancellation has failed due to an internal error",
					"requestId": "D12D9B80972C462980F5067A3A126837"
				}
			},
			"Success2": {
				"title": "Success2",
				"required": [
					"paymentId",
					"settleId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"settleId": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"settleId": "2EA354989E7E4BBC9F9D7B66674C2574",
					"value": 57,
					"code": null,
					"message": "Sucessfully settled",
					"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
				}
			},
			"Fail-GenericError2": {
				"title": "Fail-GenericError2",
				"required": [
					"paymentId",
					"settleId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"settleId": {
						"type": "string",
						"nullable": true
					},
					"value": {
						"type": "integer",
						"format": "int32"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"settleId": null,
					"value": 0,
					"code": "ERR123",
					"message": "Settlement has failed due to an internal error",
					"requestId": "DCEAA1FC8372E430E8236649DB5EBD08E"
				}
			},
			"Success3": {
				"title": "Success3",
				"required": [
					"paymentId",
					"refundId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"refundId": {
						"type": "string"
					},
					"value": {
						"type": "number"
					},
					"code": {
						"type": "string",
						"nullable": true
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"refundId": "2EA354989E7E4BBC9F9D7B66674C2574",
					"value": 57,
					"code": null,
					"message": "Sucessfully refunded",
					"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
				}
			},
			"Fail-GenericError3": {
				"title": "Fail-GenericError3",
				"required": [
					"paymentId",
					"refundId",
					"value",
					"code",
					"message",
					"requestId"
				],
				"type": "object",
				"properties": {
					"paymentId": {
						"type": "string"
					},
					"refundId": {
						"type": "string",
						"nullable": true
					},
					"value": {
						"type": "integer",
						"format": "int32"
					},
					"code": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"requestId": {
						"type": "string"
					}
				},
				"example": {
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"refundId": null,
					"value": 0,
					"code": "ERR123",
					"message": "Refund has failed due to an internal error",
					"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91"
				}
			},
			"InboundRequest_BETA_Request": {
				"title": "InboundRequest(BETA)Request",
				"required": [
					"requestId",
					"transactionId",
					"paymentId",
					"authorizationId",
					"tid",
					"requestData"
				],
				"type": "object",
				"properties": {
					"requestId": {
						"type": "string"
					},
					"transactionId": {
						"type": "string"
					},
					"paymentId": {
						"type": "string"
					},
					"authorizationId": {
						"type": "string"
					},
					"tid": {
						"type": "string"
					},
					"requestData": {
						"$ref": "#/components/schemas/RequestData"
					}
				},
				"example": {
					"requestId": "{{requestId}}",
					"transactionId": "{{transactionId}}",
					"paymentId": "{{paymentId}}",
					"authorizationId": "{{authorizationId}}",
					"tid": "{{tid}}",
					"requestData": {
						"body": "{{originalRequestBody}}"
					}
				}
			},
			"RequestData": {
				"title": "RequestData",
				"required": [
					"body"
				],
				"type": "object",
				"properties": {
					"body": {
						"type": "string"
					}
				},
				"example": {
					"body": "{{originalRequestBody}}"
				}
			},
			"Success4": {
				"title": "Success4",
				"required": [
					"requestId",
					"paymentId",
					"responseData"
				],
				"type": "object",
				"properties": {
					"requestId": {
						"type": "string"
					},
					"paymentId": {
						"type": "string"
					},
					"responseData": {
						"$ref": "#/components/schemas/ResponseData"
					}
				},
				"example": {
					"requestId": "LA4E20D3B4E07B7E871F5B5BC9F91",
					"paymentId": "F5C1A4E20D3B4E07B7E871F5B5BC9F91",
					"responseData": {
						"statusCode": 200,
						"contentType": "application/json",
						"content": "{\"myAttribute\":\"anyValue\"}"
					}
				}
			},
			"ResponseData": {
				"title": "ResponseData",
				"required": [
					"statusCode",
					"contentType",
					"content"
				],
				"type": "object",
				"properties": {
					"statusCode": {
						"type": "integer",
						"format": "int32"
					},
					"contentType": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"example": {
					"statusCode": 200,
					"contentType": "application/json",
					"content": "{\"myAttribute\":\"anyValue\"}"
				}
			},
			"CreateAuthorizationTokenRequest": {
				"title": "CreateAuthorizationTokenRequest",
				"required": [
					"applicationId",
					"returnUrl"
				],
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string"
					},
					"returnUrl": {
						"type": "string"
					}
				},
				"example": {
					"applicationId": "vtex",
					"returnUrl": "https://admin.mystore.example.com/provider-return?authorizationCode="
				}
			},
			"Success5": {
				"title": "Success5",
				"required": [
					"applicationId",
					"token"
				],
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"example": {
					"applicationId": "vtex",
					"token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
				}
			},
			"Success6": {
				"title": "Success6",
				"required": [
					"applicationId",
					"appKey",
					"appToken"
				],
				"type": "object",
				"properties": {
					"applicationId": {
						"type": "string"
					},
					"appKey": {
						"type": "string"
					},
					"appToken": {
						"type": "string"
					}
				},
				"example": {
					"applicationId": "vtex",
					"appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
					"appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
				}
			}
		},
		"securitySchemes": {
			"appKey": {
				"type": "apiKey",
				"in": "header",
				"name": "X-VTEX-API-AppKey"
			},
			"appToken": {
				"type": "apiKey",
				"in": "header",
				"name": "X-VTEX-API-AppToken"
			}
		}
	},
	"tags": [
		{
			"name": "Payment Flow",
			"description": "Here we describe each operation you need to implement for the payment flow."
		},
		{
			"name": "Configuration Flow",
			"description": "Here we describe each operation you need to implement to enable the optional configuration flow.\n\nThis is an easier way to allow VTEX merchants to enable your connector, and be ready to use it without having to copy/paste any credentials (`AppKey`/`AppToken`)."
		}
	],
	"security": [
		{
			"appKey": [],
			"appToken": []
		}
	]
}