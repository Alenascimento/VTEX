{
    "openapi": "3.0.0",
    "info": {
      "title": "Antifraud Provider",
      "contact": {},
      "version": "1.0"
    },
    "servers": [
      {
        "url": "http://example.com",
        "variables": {}
      },
      {
        "url": "http://{providerBaseUrl}/authorization",
        "variables": {
          "providerBaseUrl": {
            "default": "DefaultParameterValue"
          }
        }
      },
      {
        "url": "http://{returnUrl}",
        "variables": {
          "returnUrl": {
            "default": "DefaultParameterValue"
          }
        }
      }
    ],
    "paths": {
      "/transactions": {
        "post": {
          "tags": [
            "Antifraud  Flow"
          ],
          "summary": "Send Antifraud Data",
          "description": "Receives a new transaction antifraud data.This step is performed only if all payments are authorized. \r\nVTEX expects that your antifraud provider process this request and retrieve the process result, \r\nVTEX order flow will follow your response status in order to cancel or approve the transaction\r\n\r\n#### Request Headers\r\n<table>\r\n  <tr>\r\n        <td>**Header**</td>\r\n        <td>**Value**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`X-PROVIDER-API-AppKey`</td>\r\n        <td>*{{X-PROVIDER-API-AppKey}}*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`X-PROVIDER-API-AppToken`</td>\r\n        <td>*{{X-PROVIDER-API-AppToken}}*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`Content-Typen`</td>\r\n        <td>*application/json*</td>\r\n    </tr>\r\n</table>\r\n\r\n#### Request Body\r\n<table>\r\n    <tr>\r\n        <td>`reference`</td>\r\n        <td>*string* *max 255 chars*</td>\r\n        <td>VTEX order reference key. The key of the order (from VTEX OMS system) related with this payment</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`id`</td>\r\n        <td>*string* *max 255 chars*</td>\r\n        <td>VTEX transaction ID. The ID of the transaction related with this payment.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`value`</td>\r\n        <td>*decimal* *ex 20.95*</td>\r\n        <td>VTEX transaction order value</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`ip`</td>\r\n        <td>*string* *ip format*</td>\r\n        <td>The original ip addres **from browser**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`deviceFingerprint`</td>\r\n        <td>*string* *optional*</td>\r\n        <td>Device Finger print generated by the provider. this is generated by using Google Tag Manager that the provider implements. This field is optional, is sent only if received. See ** Implement Device FingerPrint **</td>\r\n    </tr>\r\n        <tr>\r\n        <td>`store`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX has a main Name for the store. This unique name is often used in url to access VTEX configurations.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`miniCart`</td>\r\n        <td>*object* *optional*</td>\r\n        <td>Mini cart data</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`buyer` *object*</td>\r\n        <td>**</td>\r\n        <td>Buyer data</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`id`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX buyer ID. The unique identifier of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`firstName`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>First name of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`lastName`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Last name of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`document`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Document number of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`documentType`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Type of document of the buyer. It depends on the coutry. See ** Document Types by Country **</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`email`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Email of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`phone`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Phone number of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`address`</td>\r\n        <td>*object*</td>\r\n        <td>buyer address</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`country`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address country</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`street`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address street</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`number`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address number</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`complement`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address complement</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`neighborhood`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address neighborhood</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`postalCode`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address postal code</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`city`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address city</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`state`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address state</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`shipping`</td>\r\n        <td>*object*</td>\r\n        <td>Shipping data</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`value`</td>\r\n        <td>*decimal*</td>\r\n        <td>Shipping value with two decimal places</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`estimatedDate`</td>\r\n        <td>*date* *2028-06-15T21:15:07</td>\r\n        <td>Estimated shipping date ISO 8601</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`address`</td>\r\n        <td>*object*</td>\r\n        <td>Shipping address</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`country`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address country</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`street`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address street</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`number`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address number</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`complement`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address complement</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`neighborhood`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address neighborhood</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`postalCode`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address postal code</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`city`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address city</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`state`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address state</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`items`</td>\r\n        <td>*array of object*</td>\r\n        <td>List of items data, in the cart</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`id`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX product ID. The ID of the item</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`name`</td>\r\n        <td>*string*</td>\r\n        <td>Item name</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`price`</td>\r\n        <td>*decimal*</td>\r\n        <td>Item price</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`quantity`</td>\r\n        <td>*integer*</td>\r\n        <td>Quantity of this item in the cart</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`deliveryType`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Type of delivery configured by the store. ex. Normal</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`deliverySlaInMinutes`</td>\r\n        <td>*integer*</td>\r\n        <td>Each item can have a separate shipping sla in minutes</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`categoryId`</td>\r\n        <td>*integer*</td>\r\n        <td>Category ID for the Item. Configured by each store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`categoryName`</td>\r\n        <td>*string* *max 255</td>\r\n        <td>Category name for the Item. Configured by each store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`discount`</td>\r\n        <td>*decimal*</td>\r\n        <td>Discount applied on item(s) two decimal places</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`taxValue`</td>\r\n        <td>*decimal*</td>\r\n        <td>Total tax value</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`listRegistry`</td>\r\n        <td>*object* *optional*</td>\r\n        <td>List registry indicates the existence of a list, like wishList, giftList or any other defined by the store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`name`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>List name defined by the store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`deliveryToOwner`</td>\r\n        <td>*boolean*</td>\r\n        <td>Flag to mark if the order will be delivered to list creator or not.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`payments`</td>\r\n        <td>*array of object*</td>\r\n        <td>Describes the payments used for the current order</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`id`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Payment ID unique identifier in VTEX</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`method`</td>\r\n        <td>*string* *max 255</td>\r\n        <td>Payment method used for the buyer.  See ** Payment Methods ** </td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`name`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Payment name used for the buyer. This name could be the brand card or the VTEX payment method ex. Visa </td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`value`</td>\r\n        <td>*decimal*</td>\r\n        <td>Payment value. Two decimal places</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`instalments`</td>\r\n        <td>*integer*</td>\r\n        <td>Number of installments</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`hook`</td>\r\n        <td>*string*</td>\r\n        <td>URL to be called when the payment has it's status changed</td>\r\n    </tr>\r\n</table>\r\n\r\n#### Response Body\r\n<table>\r\n    <tr>\r\n        <td>`id`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX transaction ID. The ID of this transaction must be in the response.</td>\r\n    </tr>\r\n        <tr>\r\n        <td>`tid`</td>\r\n        <td>*string*</td>\r\n     <td>Provider transaction ID. The ID of this transaction must be in the response. The antifraud provider MUST generates an unique transaction Id.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`status`</td>\r\n        <td>*string*</td>\r\n        <td>Transaction status from provider. Must be one of the values: **received**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`score`</td>\r\n        <td>*decimal*</td>\r\n        <td>The value of the risk score. 100.00 as max value means total fraud</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`analysisType`</td>\r\n        <td>*string*</td>\r\n        <td>analysis type. Valid values are *authomatic* or *manual* </td>\r\n    </tr>\r\n    <tr>\r\n        <td>`responses`&nbsp;(optional)</td>\r\n        <td>*dictionary or string, string*</td>\r\n        <td>Key Value dictionary to add custom responses from  analysis</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`code`&nbsp;(optional)</td>\r\n        <td>*string*</td>\r\n        <td>Error code returned from provider. *Will be logged in transaction interactions log*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`message`&nbsp;(optional)</td>\r\n        <td>*string*</td>\r\n        <td>Error message returned from provider. *Will be logged in transaction interactions log*</td>\r\n    </tr>\r\n</table>",
          "operationId": "SendAntifraudData",
          "parameters": [
            {
              "name": "X-PROVIDER-API-AppKey",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppKey"
              }
            },
            {
              "name": "X-PROVIDER-API-AppToken",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppToken"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendAntifraudDataRequest"
                },
                "example": {
                  "id": "D3AA1FC8372E430E8236649DB5EBD08E",
                  "reference": "v32478982vtx-01",
                  "value": 10,
                  "ip": "10.0.0.1",
                  "store": "serasa",
                  "deviceFingerprint": "Generated_using_GTM_Store_Is_Responsible_To_Configure",
                  "miniCart": {
                    "buyer": {
                      "id": "c1245228-1c68-11e6-94ac-0afa86a846a5",
                      "firstName": "John",
                      "lastName": "Doe",
                      "document": "012.345.678-90",
                      "documentType": "CPF",
                      "email": "john@doe.com",
                      "phone": "+5521987654321",
                      "address": {
                        "country": "BRA",
                        "street": "Rua Praia de Botafogo",
                        "number": "518",
                        "complement": "2o. andar",
                        "neighborhood": "Botafogo",
                        "postalCode": "22250-040",
                        "city": "Rio de Janeiro",
                        "state": "RJ"
                      }
                    },
                    "shipping": {
                      "value": 8.41,
                      "estimatedDate": "2017-08-02T14:46:47",
                      "address": {
                        "country": "BRA",
                        "street": "Rua Praia de Botafogo",
                        "number": "518",
                        "complement": "2o. andar",
                        "neighborhood": "Botafogo",
                        "postalCode": "22250-040",
                        "city": "Rio de Janeiro",
                        "state": "RJ"
                      }
                    },
                    "items": [
                      {
                        "id": "132981",
                        "name": "Some useful product",
                        "price": 20.51,
                        "quantity": 2,
                        "deliveryType": "Normal",
                        "deliverySlaInMinutes": 4320,
                        "categoryId": "111",
                        "categoryName": "Electronica",
                        "discount": 1.99
                      },
                      {
                        "id": "123242",
                        "name": "Some useless product",
                        "price": 21.98,
                        "quantity": 1,
                        "deliveryType": "Normal",
                        "deliverySlaInMinutes": 4320,
                        "categoryId": "123",
                        "categoryName": "Lar",
                        "discount": 1.01
                      }
                    ],
                    "taxValue": 5.58,
                    "listRegistry": {
                      "name": "Minha lista Presente",
                      "deliveryToOwner": false
                    }
                  },
                  "payments": [
                    {
                      "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
                      "method": "CreditCard",
                      "name": "Visa",
                      "value": 63.98,
                      "installments": 3,
                      "details": {
                        "bin": "507860",
                        "lastDigits": "2798",
                        "holder": "John Doe",
                        "address": {
                          "country": "BRA",
                          "street": "Rua Praia de Botafogo",
                          "number": "518",
                          "complement": "2o. andar",
                          "neighborhood": "Botafogo",
                          "postalCode": "22250-040",
                          "city": "Rio de Janeiro",
                          "state": "RJ"
                        }
                      }
                    },
                    {
                      "id": "04D430E517B2494FBC3DF7721CCDACC7",
                      "method": "GiftCard",
                      "value": 10.01,
                      "installments": 1
                    }
                  ],
                  "hook": "https://hook.vtex.com/notifyIfChangeStatus"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "headers": {
                "access-control-allow-credentials": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "true"
                    }
                  }
                },
                "access-control-allow-origin": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "chrome-extension://aicmkgpgakddgnaphhhpliifpcfhicfo"
                    }
                  }
                },
                "cache-control": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "connection": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "keep-alive"
                    }
                  }
                },
                "content-length": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "244"
                    }
                  }
                },
                "content-type": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "application/json; charset=utf-8"
                    }
                  }
                },
                "date": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Mon, 07 May 2018 16:15:43 GMT"
                    }
                  }
                },
                "expires": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "-1"
                    }
                  }
                },
                "pragma": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "server": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Microsoft-IIS/8.0"
                    }
                  }
                },
                "x-aspnet-version": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4.0.30319"
                    }
                  }
                },
                "x-powered-by": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "ASP.NET"
                    }
                  }
                },
                "x-vtex-operation-id": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "125de297-43d9-4d71-b89d-d238d0a1e454"
                    }
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SendAntifraudData"
                  },
                  "example": {
                    "id": "D3AA1FC8372E430E8236649DB5EBD08E",
                    "tid": "4692c1f54d514fe69da0b472a3b2a770",
                    "code": "customCode",
                    "message": "customMessage",
                    "status": "received",
                    "score": 5.01,
                    "analysisType": "authomatic",
                    "responses": {
                      "foo": "anyFoo",
                      "custom": "customAnyValue"
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://example.com",
              "variables": {}
            }
          ]
        }
      },
      "/transactions/{transactionId}": {
        "put": {
          "tags": [
            "Antifraud  Flow"
          ],
          "summary": "Update Antifraud Transactions (optional)",
          "description": "Receives a new transaction antifraud data.This step is performed only if all payments are authorized. \r\nVTEX expects that your antifraud provider process this request and retrieve the process result, \r\nVTEX order flow will follow your response status in order to cancel or approve the transaction\r\n\r\n#### Request Headers\r\n<table>\r\n  <tr>\r\n        <td>**Header**</td>\r\n        <td>**Value**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`X-PROVIDER-API-AppKey`</td>\r\n        <td>*{{X-PROVIDER-API-AppKey}}*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`X-PROVIDER-API-AppToken`</td>\r\n        <td>*{{X-PROVIDER-API-AppToken}}*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`Content-Typen`</td>\r\n        <td>*application/json*</td>\r\n    </tr>\r\n</table>\r\n\r\n#### Request Body\r\n<table>\r\n    <tr>\r\n        <td>`reference`</td>\r\n        <td>*string* *max 255 chars*</td>\r\n        <td>VTEX order reference key. The key of the order (from VTEX OMS system) related with this payment</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`transactionId`</td>\r\n        <td>*string* *max 255 chars*</td>\r\n        <td>VTEX transaction ID. The ID of the transaction related with this payment.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`value`</td>\r\n        <td>*decimal* *ex 20.95*</td>\r\n        <td>VTEX transaction order value</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`ip`</td>\r\n        <td>*string* *ip format*</td>\r\n        <td>The original ip addres **from browser**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`deviceFingerprint`</td>\r\n        <td>*string* *optional*</td>\r\n        <td>Device Finger print generated by the provider. this is generated by using Google Tag Manager that the provider implements. This field is optional, is sent only if received. See ** Implement Device FingerPrint **</td>\r\n    </tr>\r\n        <tr>\r\n        <td>`store`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX has a main Name for the store. This unique name is often used in url to access VTEX configurations.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`miniCart`</td>\r\n        <td>*object* *optional*</td>\r\n        <td>Mini cart data</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`buyer` *object*</td>\r\n        <td>**</td>\r\n        <td>Buyer data</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`id`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX buyer ID. The unique identifier of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`firstName`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>First name of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`lastName`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Last name of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`document`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Document number of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`documentType`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Type of document of the buyer. It depends on the coutry. See ** Document Types by Country **</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`email`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Email of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`phone`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Phone number of the buyer</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`address`</td>\r\n        <td>*object*</td>\r\n        <td>buyer address</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`country`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address country</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`street`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address street</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`number`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address number</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`complement`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address complement</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`neighborhood`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address neighborhood</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`postalCode`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address postal code</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`city`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address city</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`state`</td>\r\n        <td>*string*</td>\r\n        <td>Buyer address state</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`shipping`</td>\r\n        <td>*object*</td>\r\n        <td>Shipping data</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`value`</td>\r\n        <td>*decimal*</td>\r\n        <td>Shipping value with two decimal places</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`estimatedDate`</td>\r\n        <td>*date* *2028-06-15T21:15:07</td>\r\n        <td>Estimated shipping date ISO 8601</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`address`</td>\r\n        <td>*object*</td>\r\n        <td>Shipping address</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`country`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address country</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`street`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address street</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`number`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address number</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`complement`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address complement</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`neighborhood`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address neighborhood</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`postalCode`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address postal code</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`city`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address city</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒⇒&nbsp;&nbsp;`state`</td>\r\n        <td>*string*</td>\r\n        <td>Shipping address state</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`items`</td>\r\n        <td>*array of object*</td>\r\n        <td>List of items data, in the cart</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`id`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX product ID. The ID of the item</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`name`</td>\r\n        <td>*string*</td>\r\n        <td>Item name</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`price`</td>\r\n        <td>*decimal*</td>\r\n        <td>Item price</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`quantity`</td>\r\n        <td>*integer*</td>\r\n        <td>Quantity of this item in the cart</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`deliveryType`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Type of delivery configured by the store. ex. Normal</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`deliverySlaInMinutes`</td>\r\n        <td>*integer*</td>\r\n        <td>Each item can have a separate shipping sla in minutes</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`categoryId`</td>\r\n        <td>*integer*</td>\r\n        <td>Category ID for the Item. Configured by each store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`categoryName`</td>\r\n        <td>*string* *max 255</td>\r\n        <td>Category name for the Item. Configured by each store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`discount`</td>\r\n        <td>*decimal*</td>\r\n        <td>Discount applied on item(s) two decimal places</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`taxValue`</td>\r\n        <td>*decimal*</td>\r\n        <td>Total tax value</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`listRegistry`</td>\r\n        <td>*object* *optional*</td>\r\n        <td>List registry indicates the existence of a list, like wishList, giftList or any other defined by the store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`name`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>List name defined by the store</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;⇒⇒&nbsp;&nbsp;`deliveryToOwner`</td>\r\n        <td>*boolean*</td>\r\n        <td>Flag to mark if the order will be delivered to list creator or not.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`payments`</td>\r\n        <td>*array of object*</td>\r\n        <td>Describes the payments used for the current order</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`id`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Payment ID unique identifier in VTEX</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`method`</td>\r\n        <td>*string* *max 255</td>\r\n        <td>Payment method used for the buyer.  See ** Payment Methods ** </td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`name`</td>\r\n        <td>*string* *max 255*</td>\r\n        <td>Payment name used for the buyer. This name could be the brand card or the VTEX payment method ex. Visa </td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`value`</td>\r\n        <td>*decimal*</td>\r\n        <td>Payment value. Two decimal places</td>\r\n    </tr>\r\n    <tr>\r\n        <td>&nbsp;&nbsp;&nbsp;⇒&nbsp;`instalments`</td>\r\n        <td>*integer*</td>\r\n        <td>Number of installments</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`hook`</td>\r\n        <td>*string*</td>\r\n        <td>URL to be called when the payment has it's status changed</td>\r\n    </tr>\r\n</table>\r\n\r\n#### Response Body\r\n<table>\r\n    <tr>\r\n        <td>`id`</td>\r\n        <td>*string*</td>\r\n        <td>VTEX transaction ID. The ID of this transaction must be in the response.</td>\r\n    </tr>\r\n        <tr>\r\n        <td>`tid`</td>\r\n        <td>*string*</td>\r\n     <td>Provider transaction ID. The ID of this transaction must be in the response. The antifraud provider MUST generates an unique transaction Id.</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`status`</td>\r\n        <td>*string*</td>\r\n        <td>Transaction status from provider. Must be one of the values: **received**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`score`</td>\r\n        <td>*decimal*</td>\r\n        <td>The value of the risk score. 100.00 as max value means total fraud</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`AnalysisType`</td>\r\n        <td>*string*</td>\r\n        <td>Analysis type. Valid values are *authomatic* or *manual* </td>\r\n    </tr>\r\n    <tr>\r\n        <td>`responses`&nbsp;(optional)</td>\r\n        <td>*dictionary or string, string*</td>\r\n        <td>Key Value dictionary to add custom responses from  analysis</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`tid`</td>\r\n        <td>*string*</td>\r\n        <td>Transaction ID in the provider. This is the transaction identifier that the provider assigns</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`code`&nbsp;(optional)</td>\r\n        <td>*string*</td>\r\n        <td>Error code returned from provider. *Will be logged in transaction interactions log*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`message`&nbsp;(optional)</td>\r\n        <td>*string*</td>\r\n        <td>Error message returned from provider. *Will be logged in transaction interactions log*</td>\r\n    </tr>\r\n</table>",
          "operationId": "UpdateAntifraudTransactions(optional)",
          "parameters": [
            {
              "name": "X-PROVIDER-API-AppKey",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppKey"
              }
            },
            {
              "name": "X-PROVIDER-API-AppToken",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppToken"
              }
            },
            {
              "name": "transactionId",
              "in": "path",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAntifraudTransactions%28optional%29Request"
                },
                "example": {
                  "id": "D3AA1FC8372E430E8236649DB5EBD08E",
                  "reference": "v32478982vtx-01",
                  "value": 10,
                  "ip": "10.0.0.1",
                  "store": "serasa",
                  "deviceFingerprint": "Generated_using_GTM_Store_Is_Responsible_To_Configure",
                  "miniCart": {
                    "buyer": {
                      "id": "c1245228-1c68-11e6-94ac-0afa86a846a5",
                      "firstName": "John",
                      "lastName": "Doe",
                      "document": "012.345.678-90",
                      "documentType": "CPF",
                      "email": "john@doe.com",
                      "phone": "+5521987654321",
                      "address": {
                        "country": "BRA",
                        "street": "Rua Praia de Botafogo",
                        "number": "518",
                        "complement": "2o. andar",
                        "neighborhood": "Botafogo",
                        "postalCode": "22250-040",
                        "city": "Rio de Janeiro",
                        "state": "RJ"
                      }
                    },
                    "shipping": {
                      "value": 8.41,
                      "estimatedDate": "2017-08-02T14:46:47",
                      "address": {
                        "country": "BRA",
                        "street": "Rua Praia de Botafogo",
                        "number": "518",
                        "complement": "2o. andar",
                        "neighborhood": "Botafogo",
                        "postalCode": "22250-040",
                        "city": "Rio de Janeiro",
                        "state": "RJ"
                      }
                    },
                    "items": [
                      {
                        "id": "132981",
                        "name": "Some useful product",
                        "price": 20.51,
                        "quantity": 2,
                        "deliveryType": "Normal",
                        "deliverySlaInMinutes": 4320,
                        "categoryId": "111",
                        "categoryName": "Electronica",
                        "discount": 1.99
                      },
                      {
                        "id": "123242",
                        "name": "Some useless product",
                        "price": 21.98,
                        "quantity": 1,
                        "deliveryType": "Normal",
                        "deliverySlaInMinutes": 4320,
                        "categoryId": "123",
                        "categoryName": "Lar",
                        "discount": 1.01
                      }
                    ],
                    "taxValue": 5.58,
                    "listRegistry": {
                      "name": "Minha lista Presente",
                      "deliveryToOwner": false
                    }
                  },
                  "payments": [
                    {
                      "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
                      "method": "CreditCard",
                      "name": "Visa",
                      "value": 63.98,
                      "installments": 3,
                      "details": {
                        "bin": "507860",
                        "lastDigits": "2798",
                        "holder": "John Doe",
                        "address": {
                          "country": "BRA",
                          "street": "Rua Praia de Botafogo",
                          "number": "518",
                          "complement": "2o. andar",
                          "neighborhood": "Botafogo",
                          "postalCode": "22250-040",
                          "city": "Rio de Janeiro",
                          "state": "RJ"
                        }
                      }
                    },
                    {
                      "id": "04D430E517B2494FBC3DF7721CCDACC7",
                      "method": "GiftCard",
                      "value": 10.01,
                      "installments": 1
                    }
                  ],
                  "hook": "https://hook.vtex.com/notifyIfChangeStatus"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "headers": {
                "Access-Control-Allow-Credentials": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "true"
                    }
                  }
                },
                "Access-Control-Allow-Origin": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "chrome-extension://aicmkgpgakddgnaphhhpliifpcfhicfo"
                    }
                  }
                },
                "Cache-Control": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Connection": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "keep-alive"
                    }
                  }
                },
                "Content-Length": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "132"
                    }
                  }
                },
                "Date": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Wed, 02 Aug 2017 18:21:50 GMT"
                    }
                  }
                },
                "Expires": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "-1"
                    }
                  }
                },
                "Pragma": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Server": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Microsoft-IIS/8.0"
                    }
                  }
                },
                "X-AspNet-Version": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4.0.30319"
                    }
                  }
                },
                "X-Powered-By": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "ASP.NET"
                    }
                  }
                },
                "x-vtex-operation-id": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4d2e58c7-ea79-4420-96db-8e4bf32847ce"
                    }
                  }
                }
              },
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApproveAntifraudAnalysisResponse"
                  },
                  "example": {
                    "id": "D3AA1FC8372E430E8236649DB5EBD08E",
                    "status": "approved",
                    "fraudRiskPercentage": 0.0,
                    "analysisType": "authomatic",
                    "responses": null
                  }
                }
              }
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://example.com",
              "variables": {}
            }
          ]
        }
      },
      "/transactions/{{transactions.id}}": {
        "get": {
          "tags": [
            "Antifraud  Flow"
          ],
          "summary": "Get Antifraud Status",
          "description": "GET antifraud Status. Implement this API because VTEX will call it to get the status of the antifraud analysis. This call is performed every two hours up to 5 days. After 5 days in undefined status the order will expire and will be cancelled.\n\nThe parameter in the URL `transactions.id` is VTEX transaction ID that was passed in the body  of send antifraud data api : `id`\n\n#### Response Body\n<table>\n    <tr>\n        <td>`id`</td>\n        <td>*string*</td>\n        <td>VTEX transaction ID. The ID of this transaction must be in the response.</td>\n    </tr>\n        <tr>\n        <td>`tid`</td>\n        <td>*string*</td>\n     <td>Provider transaction ID. The ID of this transaction must be in the response. The antifraud provider MUST generates an unique transaction Id.</td>\n    </tr>\n    <tr>\n        <td>`status`</td>\n        <td>*string*</td>\n        <td>Transaction status from provider. Must be one of the values: **approved**, **denied** or **undefined**</td>\n    </tr>\n    <tr>\n        <td>`score`</td>\n        <td>*decimal*</td>\n        <td>The value of the score risk in percentage. 100.00 as max value means total fraud</td>\n    </tr>\n    <tr>\n        <td>`AnalysisType`</td>\n        <td>*string*</td>\n        <td>Analysis type. Valid values are *authomatic* or *manual* </td>\n    </tr>\n    <tr>\n        <td>`responses`&nbsp;(optional)</td>\n        <td>*dictionary or string*</td>\n        <td>Key Value dictionary to add custom responses from  analysis</td>\n    </tr>\n    <tr>\n        <td>`tid`</td>\n        <td>*string*</td>\n        <td>Transaction ID in the provider. This is the transaction identifier that the provider assigns</td>\n    </tr>\n    <tr>\n        <td>`code`&nbsp;(optional)</td>\n        <td>*string*</td>\n        <td>Error code returned from provider. *Will be logged in transaction interactions log*</td>\n    </tr>\n    <tr>\n        <td>`message`&nbsp;(optional)</td>\n        <td>*string*</td>\n        <td>Error message returned from provider. *Will be logged in transaction interactions log*</td>\n    </tr>\n</table>",
          "operationId": "GetAntifraudStatus",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "application/json"
              }
            },
            {
              "name": "X-PROVIDER-API-AppKey",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppKey"
              }
            },
            {
              "name": "X-PROVIDER-API-AppToken",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppToken"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {
                "cache-control": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "connection": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "keep-alive"
                    }
                  }
                },
                "content-length": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "212"
                    }
                  }
                },
                "content-type": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "application/json; charset=utf-8"
                    }
                  }
                },
                "date": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Thu, 03 May 2018 18:48:27 GMT"
                    }
                  }
                },
                "expires": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "-1"
                    }
                  }
                },
                "pragma": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "server": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Microsoft-IIS/8.0"
                    }
                  }
                },
                "x-aspnet-version": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4.0.30319"
                    }
                  }
                },
                "x-powered-by": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "ASP.NET"
                    }
                  }
                },
                "x-vtex-operation-id": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "c7e11326-136e-43f8-8a91-4ac56ac55a41"
                    }
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetAntifraudStatus"
                  },
                  "example": {
                    "id": "BF900B7CB15147F98D91208989100A05",
                    "tid": "3146f46162f042f483cd3979ba4e8317",
                    "status": "approved",
                    "fraudRiskPercentage": 5.01,
                    "analysisType": "authomatic",
                    "responses": {
                      "foo": "anyFoo",
                      "custom": "customAnyValue"
                    }
                  }
                }
              }
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://example.com",
              "variables": {}
            }
          ]
        }
      },
      "/transactions/{{transactions.Id}}": {
        "delete": {
          "tags": [
            "Antifraud  Flow"
          ],
          "summary": "Stop Antifraud Analysis (optional)",
          "description": "Stop antifraud analysis. Implement this API if you want to be notified if the order was cancelled either by the store or the buyer before complete the antifraud analysis.\n\nThe parameter in the URL `transactions.id` is VTEX transaction ID that was passed in the body  of send antifraud data api : `id`\n",
          "operationId": "StopAntifraudAnalysis(optional)",
          "parameters": [
            {
              "name": "Content-Type",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "application/json"
              }
            },
            {
              "name": "X-PROVIDER-API-AppKey",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppKey"
              }
            },
            {
              "name": "X-PROVIDER-API-AppToken",
              "in": "header",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "example": "ProviderAppToken"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {
                "Cache-Control": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Connection": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "keep-alive"
                    }
                  }
                },
                "Content-Length": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "133"
                    }
                  }
                },
                "Date": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Wed, 02 Aug 2017 18:20:51 GMT"
                    }
                  }
                },
                "Expires": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "-1"
                    }
                  }
                },
                "Pragma": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Server": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Microsoft-IIS/8.0"
                    }
                  }
                },
                "X-AspNet-Version": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4.0.30319"
                    }
                  }
                },
                "X-Powered-By": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "ASP.NET"
                    }
                  }
                },
                "x-vtex-operation-id": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "30984ee5-21fa-4618-b599-ec1dbf56e556"
                    }
                  }
                }
              },
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GetPaymentMethodsSupported"
                    }
                  },
                  "example": [
                    {
                      "name": "CreditCard"
                    },
                    {
                      "name": "DebitCard"
                    },
                    {
                      "name": "GiftCard"
                    },
                    {
                      "name": "BankIssueInvoice"
                    },
                    {
                      "name": "Voucher"
                    },
                    {
                      "name": "Promissory"
                    }
                  ]
                }
              }
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://example.com",
              "variables": {}
            }
          ]
        }
      },
      "/token": {
        "post": {
          "tags": [
            "OAuth Flow"
          ],
          "summary": "1. Retrieve Token",
          "description": "\r\n\r\n\r\nIn this API Call VTEX will expect a token to be created\r\n\r\n\r\n#### Request Headers\r\n<table>\r\n  <tr>\r\n        <td>**Header**</td>\r\n        <td>**Value**</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`Accept`</td>\r\n        <td>*application/json*</td>\r\n    </tr>\r\n    <tr>\r\n        <td>`Content-Typen`</td>\r\n        <td>*application/json*</td>\r\n    </tr>\r\n</table>\r\n\r\n#### Request Body\r\n<table>\r\n  <tr>\r\n      <td>`applicationId`</td>\r\n      <td>*string*</td>\r\n      <td>Always will have the [vtex] value</td>\r\n  </tr>\r\n  <tr>\r\n      <td>`returnUrl`</td>\r\n      <td>*string*</td>\r\n      <td>Return URL. VTEX Url Web site. You will redirect the user after he completes the login/logon \r\n    in your payment provider web site.  \r\n    The Url will contain a query string parameter \r\n    called *authorizationCode* that will be passed empty and that you MUST fill before return the user </td>\r\n  </tr>\r\n</table>\r\n\r\n#### Response Body\r\n<table>\r\n  <tr>\r\n      <td>`token`</td>\r\n      <td>*string*</td>\r\n      <td>Payment Provider Token. Used to identify the context after you receive the redirected user to your site</td>\r\n  </tr>\r\n</table>",
          "operationId": "1.RetrieveToken",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1.RetrieveTokenRequest"
                },
                "example": {
                  "applicationId": "vtex",
                  "returnUrl": "https://storevtex.vtexpayments.com/?authorizationCode="
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "",
              "headers": {
                "Cache-Control": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Connection": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "keep-alive"
                    }
                  }
                },
                "Content-Length": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "71"
                    }
                  }
                },
                "Date": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Mon, 16 Jul 2018 15:10:44 GMT"
                    }
                  }
                },
                "Expires": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "-1"
                    }
                  }
                },
                "Pragma": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Server": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Microsoft-IIS/8.0"
                    }
                  }
                },
                "X-AspNet-Version": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4.0.30319"
                    }
                  }
                },
                "X-Powered-By": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "ASP.NET"
                    }
                  }
                },
                "x-vtex-operation-id": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "d8f17ed2-ba9f-4f6d-8f8c-52bd425d7a52"
                    }
                  }
                }
              },
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "$ref": "#/components/schemas/1.RetrieveToken"
                  },
                  "example": {
                    "applicationId": "vtex",
                    "token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://{providerBaseUrl}/authorization",
              "variables": {
                "providerBaseUrl": {
                  "default": "DefaultParameterValue"
                }
              }
            }
          ]
        }
      },
      "/redirect": {
        "get": {
          "tags": [
            "OAuth Flow"
          ],
          "summary": "2. Redirect",
          "description": "VTEX will redirect the store administrator\nto the Payment Provider Web Site.\nusing the `token` previously returned in\nthe previous call.\n\nAt this point the Provider shows, the\nlogin/logon web site to the store administrator\nand he/she authorize to VTEX use your integration\nas a valid Payment Provider Processor. At this time\nyour server generate an **authorizationCode**\n\n\n\n",
          "operationId": "2.Redirect",
          "parameters": [
            {
              "name": "token",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "{token}"
              }
            },
            {
              "name": "applicationId",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "vtex"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://{providerBaseUrl}/authorization",
              "variables": {
                "providerBaseUrl": {
                  "default": "DefaultParameterValue"
                }
              }
            }
          ]
        }
      },
      "/": {
        "get": {
          "tags": [
            "OAuth Flow"
          ],
          "summary": "3. Return to VTEX",
          "description": "The PROVIDER will redirect the store administrator\nto the VTEX Web Site.\nusing the `returnUrl` passed from VTEX to create token.\n\n\nThe returnUrl MUST be filled with your **authorizationCode**\n\nYou redirect the store administrator\nto the `returnUrl` previously sent, see that the\nurl has an authorizationCode parameter in the \nQuery string that you fill before redirect.\n\nExample:  \n\n\nIf you receive an URL  `https://store.vtex.com/return?authorizationCode=&otherparams...`\n\n\nand your **authorizationCode** was pro2018\n\nThen you redirect the store administrator to:\n\n`https://store.vtex.com/return?authorizationCode=pro2018&otherquerystringparameters`\n\n",
          "operationId": "3.ReturntoVTEX",
          "parameters": [
            {
              "name": "authorizationCode",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "{providerAuthorizationCode}"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://{returnUrl}",
              "variables": {
                "returnUrl": {
                  "default": "DefaultParameterValue"
                }
              }
            }
          ]
        }
      },
      "/credentials": {
        "get": {
          "tags": [
            "OAuth Flow"
          ],
          "summary": "4. Get Credentials",
          "description": "#### Response Body\r\n<table>\r\n  <tr>\r\n      <td>`applicationId`</td>\r\n      <td>*string*</td>\r\n      <td>applicationId used</td>\r\n  </tr>\r\n  <table>\r\n  <tr>\r\n      <td>`appKey`</td>\r\n      <td>*string*</td>\r\n      <td>Will be used in all request API Calls as X-VTEX-API-AppKey</td>\r\n  </tr>\r\n    <tr>\r\n      <td>`appToken`</td>\r\n      <td>*string*</td>\r\n      <td>Will be used in all request API Calls as X-VTEX-API-AppToken</td>\r\n  </tr>\r\n</table>",
          "operationId": "4.GetCredentials",
          "parameters": [
            {
              "name": "authorizationCode",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "{authorizationCode}"
              }
            },
            {
              "name": "applicationId",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "vtex"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {
                "Cache-Control": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Connection": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "keep-alive"
                    }
                  }
                },
                "Content-Length": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "122"
                    }
                  }
                },
                "Date": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Mon, 16 Jul 2018 14:22:51 GMT"
                    }
                  }
                },
                "Expires": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "-1"
                    }
                  }
                },
                "Pragma": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "no-cache"
                    }
                  }
                },
                "Server": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "Microsoft-IIS/8.0"
                    }
                  }
                },
                "X-AspNet-Version": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "4.0.30319"
                    }
                  }
                },
                "X-Powered-By": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "ASP.NET"
                    }
                  }
                },
                "x-vtex-operation-id": {
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string"
                      },
                      "example": "187e390e-8cf8-4f42-a376-242f5ef4f740"
                    }
                  }
                }
              },
              "content": {
                "application/json; charset=utf-8": {
                  "schema": {
                    "$ref": "#/components/schemas/3.GetCredentials"
                  },
                  "example": {
                    "applicationId": "vtex",
                    "appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
                    "appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
                  }
                }
              }
            }
          },
          "deprecated": false,
          "servers": [
            {
              "url": "http://{providerBaseUrl}/authorization",
              "variables": {
                "providerBaseUrl": {
                  "default": "DefaultParameterValue"
                }
              }
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "SendAntifraudDataRequest": {
          "title": "SendAntifraudDataRequest",
          "required": [
            "id",
            "reference",
            "value",
            "ip",
            "store",
            "deviceFingerprint",
            "miniCart",
            "payments",
            "hook"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "reference": {
              "type": "string"
            },
            "value": {
              "type": "integer",
              "format": "int32"
            },
            "ip": {
              "type": "string"
            },
            "store": {
              "type": "string"
            },
            "deviceFingerprint": {
              "type": "string"
            },
            "miniCart": {
              "$ref": "#/components/schemas/MiniCart"
            },
            "payments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Payment"
              },
              "description": ""
            },
            "hook": {
              "type": "string"
            }
          },
          "example": {
            "id": "D3AA1FC8372E430E8236649DB5EBD08E",
            "reference": "v32478982vtx-01",
            "value": 10,
            "ip": "10.0.0.1",
            "store": "serasa",
            "deviceFingerprint": "Generated_using_GTM_Store_Is_Responsible_To_Configure",
            "miniCart": {
              "buyer": {
                "id": "c1245228-1c68-11e6-94ac-0afa86a846a5",
                "firstName": "John",
                "lastName": "Doe",
                "document": "012.345.678-90",
                "documentType": "CPF",
                "email": "john@doe.com",
                "phone": "+5521987654321",
                "address": {
                  "country": "BRA",
                  "street": "Rua Praia de Botafogo",
                  "number": "518",
                  "complement": "2o. andar",
                  "neighborhood": "Botafogo",
                  "postalCode": "22250-040",
                  "city": "Rio de Janeiro",
                  "state": "RJ"
                }
              },
              "shipping": {
                "value": 8.41,
                "estimatedDate": "2017-08-02T14:46:47",
                "address": {
                  "country": "BRA",
                  "street": "Rua Praia de Botafogo",
                  "number": "518",
                  "complement": "2o. andar",
                  "neighborhood": "Botafogo",
                  "postalCode": "22250-040",
                  "city": "Rio de Janeiro",
                  "state": "RJ"
                }
              },
              "items": [
                {
                  "id": "132981",
                  "name": "Some useful product",
                  "price": 20.51,
                  "quantity": 2,
                  "deliveryType": "Normal",
                  "deliverySlaInMinutes": 4320,
                  "categoryId": "111",
                  "categoryName": "Electronica",
                  "discount": 1.99
                },
                {
                  "id": "123242",
                  "name": "Some useless product",
                  "price": 21.98,
                  "quantity": 1,
                  "deliveryType": "Normal",
                  "deliverySlaInMinutes": 4320,
                  "categoryId": "123",
                  "categoryName": "Lar",
                  "discount": 1.01
                }
              ],
              "taxValue": 5.58,
              "listRegistry": {
                "name": "Minha lista Presente",
                "deliveryToOwner": false
              }
            },
            "payments": [
              {
                "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
                "method": "CreditCard",
                "name": "Visa",
                "value": 63.98,
                "installments": 3,
                "details": {
                  "bin": "507860",
                  "lastDigits": "2798",
                  "holder": "John Doe",
                  "address": {
                    "country": "BRA",
                    "street": "Rua Praia de Botafogo",
                    "number": "518",
                    "complement": "2o. andar",
                    "neighborhood": "Botafogo",
                    "postalCode": "22250-040",
                    "city": "Rio de Janeiro",
                    "state": "RJ"
                  }
                }
              },
              {
                "id": "04D430E517B2494FBC3DF7721CCDACC7",
                "method": "GiftCard",
                "value": 10.01,
                "installments": 1
              }
            ],
            "hook": "https://hook.vtex.com/notifyIfChangeStatus"
          }
        },
        "MiniCart": {
          "title": "MiniCart",
          "required": [
            "buyer",
            "shipping",
            "items",
            "taxValue",
            "listRegistry"
          ],
          "type": "object",
          "properties": {
            "buyer": {
              "$ref": "#/components/schemas/Buyer"
            },
            "shipping": {
              "$ref": "#/components/schemas/Shipping"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Item"
              },
              "description": ""
            },
            "taxValue": {
              "type": "number"
            },
            "listRegistry": {
              "$ref": "#/components/schemas/ListRegistry"
            }
          },
          "example": {
            "buyer": {
              "id": "c1245228-1c68-11e6-94ac-0afa86a846a5",
              "firstName": "John",
              "lastName": "Doe",
              "document": "012.345.678-90",
              "documentType": "CPF",
              "email": "john@doe.com",
              "phone": "+5521987654321",
              "address": {
                "country": "BRA",
                "street": "Rua Praia de Botafogo",
                "number": "518",
                "complement": "2o. andar",
                "neighborhood": "Botafogo",
                "postalCode": "22250-040",
                "city": "Rio de Janeiro",
                "state": "RJ"
              }
            },
            "shipping": {
              "value": 8.41,
              "estimatedDate": "2017-08-02T14:46:47",
              "address": {
                "country": "BRA",
                "street": "Rua Praia de Botafogo",
                "number": "518",
                "complement": "2o. andar",
                "neighborhood": "Botafogo",
                "postalCode": "22250-040",
                "city": "Rio de Janeiro",
                "state": "RJ"
              }
            },
            "items": [
              {
                "id": "132981",
                "name": "Some useful product",
                "price": 20.51,
                "quantity": 2,
                "deliveryType": "Normal",
                "deliverySlaInMinutes": 4320,
                "categoryId": "111",
                "categoryName": "Electronica",
                "discount": 1.99
              },
              {
                "id": "123242",
                "name": "Some useless product",
                "price": 21.98,
                "quantity": 1,
                "deliveryType": "Normal",
                "deliverySlaInMinutes": 4320,
                "categoryId": "123",
                "categoryName": "Lar",
                "discount": 1.01
              }
            ],
            "taxValue": 5.58,
            "listRegistry": {
              "name": "Minha lista Presente",
              "deliveryToOwner": false
            }
          }
        },
        "Buyer": {
          "title": "Buyer",
          "required": [
            "id",
            "firstName",
            "lastName",
            "document",
            "documentType",
            "email",
            "phone",
            "address"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "document": {
              "type": "string"
            },
            "documentType": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "example": {
            "id": "c1245228-1c68-11e6-94ac-0afa86a846a5",
            "firstName": "John",
            "lastName": "Doe",
            "document": "012.345.678-90",
            "documentType": "CPF",
            "email": "john@doe.com",
            "phone": "+5521987654321",
            "address": {
              "country": "BRA",
              "street": "Rua Praia de Botafogo",
              "number": "518",
              "complement": "2o. andar",
              "neighborhood": "Botafogo",
              "postalCode": "22250-040",
              "city": "Rio de Janeiro",
              "state": "RJ"
            }
          }
        },
        "Address": {
          "title": "Address",
          "required": [
            "country",
            "street",
            "number",
            "complement",
            "neighborhood",
            "postalCode",
            "city",
            "state"
          ],
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "complement": {
              "type": "string"
            },
            "neighborhood": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          },
          "example": {
            "country": "BRA",
            "street": "Rua Praia de Botafogo",
            "number": "518",
            "complement": "2o. andar",
            "neighborhood": "Botafogo",
            "postalCode": "22250-040",
            "city": "Rio de Janeiro",
            "state": "RJ"
          }
        },
        "Shipping": {
          "title": "Shipping",
          "required": [
            "value",
            "estimatedDate",
            "address"
          ],
          "type": "object",
          "properties": {
            "value": {
              "type": "number"
            },
            "estimatedDate": {
              "type": "string"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "example": {
            "value": 8.41,
            "estimatedDate": "2017-08-02T14:46:47",
            "address": {
              "country": "BRA",
              "street": "Rua Praia de Botafogo",
              "number": "518",
              "complement": "2o. andar",
              "neighborhood": "Botafogo",
              "postalCode": "22250-040",
              "city": "Rio de Janeiro",
              "state": "RJ"
            }
          }
        },
        "Item": {
          "title": "Item",
          "required": [
            "id",
            "name",
            "price",
            "quantity",
            "deliveryType",
            "deliverySlaInMinutes",
            "categoryId",
            "categoryName",
            "discount"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "price": {
              "type": "number"
            },
            "quantity": {
              "type": "integer",
              "format": "int32"
            },
            "deliveryType": {
              "type": "string"
            },
            "deliverySlaInMinutes": {
              "type": "integer",
              "format": "int32"
            },
            "categoryId": {
              "type": "string"
            },
            "categoryName": {
              "type": "string"
            },
            "discount": {
              "type": "number"
            }
          },
          "example": {
            "id": "132981",
            "name": "Some useful product",
            "price": 20.51,
            "quantity": 2,
            "deliveryType": "Normal",
            "deliverySlaInMinutes": 4320,
            "categoryId": "111",
            "categoryName": "Electronica",
            "discount": 1.99
          }
        },
        "ListRegistry": {
          "title": "ListRegistry",
          "required": [
            "name",
            "deliveryToOwner"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "deliveryToOwner": {
              "type": "boolean"
            }
          },
          "example": {
            "name": "Minha lista Presente",
            "deliveryToOwner": false
          }
        },
        "Payment": {
          "title": "Payment",
          "required": [
            "id",
            "method",
            "value",
            "installments"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "value": {
              "type": "number"
            },
            "installments": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "$ref": "#/components/schemas/Details"
            }
          },
          "example": {
            "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
            "method": "CreditCard",
            "name": "Visa",
            "value": 63.98,
            "installments": 3,
            "details": {
              "bin": "507860",
              "lastDigits": "2798",
              "holder": "John Doe",
              "address": {
                "country": "BRA",
                "street": "Rua Praia de Botafogo",
                "number": "518",
                "complement": "2o. andar",
                "neighborhood": "Botafogo",
                "postalCode": "22250-040",
                "city": "Rio de Janeiro",
                "state": "RJ"
              }
            }
          }
        },
        "Details": {
          "title": "Details",
          "required": [
            "bin",
            "lastDigits",
            "holder",
            "address"
          ],
          "type": "object",
          "properties": {
            "bin": {
              "type": "string"
            },
            "lastDigits": {
              "type": "string"
            },
            "holder": {
              "type": "string"
            },
            "address": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "example": {
            "bin": "507860",
            "lastDigits": "2798",
            "holder": "John Doe",
            "address": {
              "country": "BRA",
              "street": "Rua Praia de Botafogo",
              "number": "518",
              "complement": "2o. andar",
              "neighborhood": "Botafogo",
              "postalCode": "22250-040",
              "city": "Rio de Janeiro",
              "state": "RJ"
            }
          }
        },
        "SendAntifraudData": {
          "title": "SendAntifraudData",
          "required": [
            "id",
            "tid",
            "code",
            "message",
            "status",
            "score",
            "analysisType",
            "responses"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "tid": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "score": {
              "type": "number"
            },
            "analysisType": {
              "type": "string"
            },
            "responses": {
              "$ref": "#/components/schemas/Responses"
            }
          },
          "example": {
            "id": "D3AA1FC8372E430E8236649DB5EBD08E",
            "tid": "4692c1f54d514fe69da0b472a3b2a770",
            "code": "customCode",
            "message": "customMessage",
            "status": "received",
            "score": 5.01,
            "analysisType": "authomatic",
            "responses": {
              "foo": "anyFoo",
              "custom": "customAnyValue"
            }
          }
        },
        "Responses": {
          "title": "Responses",
          "required": [
            "foo",
            "custom"
          ],
          "type": "object",
          "properties": {
            "foo": {
              "type": "string"
            },
            "custom": {
              "type": "string"
            }
          },
          "example": {
            "foo": "anyFoo",
            "custom": "customAnyValue"
          }
        },
        "UpdateAntifraudTransactions(optional)Request": {
          "title": "UpdateAntifraudTransactions(optional)Request",
          "required": [
            "id",
            "reference",
            "value",
            "ip",
            "store",
            "deviceFingerprint",
            "miniCart",
            "payments",
            "hook"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "reference": {
              "type": "string"
            },
            "value": {
              "type": "integer",
              "format": "int32"
            },
            "ip": {
              "type": "string"
            },
            "store": {
              "type": "string"
            },
            "deviceFingerprint": {
              "type": "string"
            },
            "miniCart": {
              "$ref": "#/components/schemas/MiniCart"
            },
            "payments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Payment"
              },
              "description": ""
            },
            "hook": {
              "type": "string"
            }
          },
          "example": {
            "id": "D3AA1FC8372E430E8236649DB5EBD08E",
            "reference": "v32478982vtx-01",
            "value": 10,
            "ip": "10.0.0.1",
            "store": "serasa",
            "deviceFingerprint": "Generated_using_GTM_Store_Is_Responsible_To_Configure",
            "miniCart": {
              "buyer": {
                "id": "c1245228-1c68-11e6-94ac-0afa86a846a5",
                "firstName": "John",
                "lastName": "Doe",
                "document": "012.345.678-90",
                "documentType": "CPF",
                "email": "john@doe.com",
                "phone": "+5521987654321",
                "address": {
                  "country": "BRA",
                  "street": "Rua Praia de Botafogo",
                  "number": "518",
                  "complement": "2o. andar",
                  "neighborhood": "Botafogo",
                  "postalCode": "22250-040",
                  "city": "Rio de Janeiro",
                  "state": "RJ"
                }
              },
              "shipping": {
                "value": 8.41,
                "estimatedDate": "2017-08-02T14:46:47",
                "address": {
                  "country": "BRA",
                  "street": "Rua Praia de Botafogo",
                  "number": "518",
                  "complement": "2o. andar",
                  "neighborhood": "Botafogo",
                  "postalCode": "22250-040",
                  "city": "Rio de Janeiro",
                  "state": "RJ"
                }
              },
              "items": [
                {
                  "id": "132981",
                  "name": "Some useful product",
                  "price": 20.51,
                  "quantity": 2,
                  "deliveryType": "Normal",
                  "deliverySlaInMinutes": 4320,
                  "categoryId": "111",
                  "categoryName": "Electronica",
                  "discount": 1.99
                },
                {
                  "id": "123242",
                  "name": "Some useless product",
                  "price": 21.98,
                  "quantity": 1,
                  "deliveryType": "Normal",
                  "deliverySlaInMinutes": 4320,
                  "categoryId": "123",
                  "categoryName": "Lar",
                  "discount": 1.01
                }
              ],
              "taxValue": 5.58,
              "listRegistry": {
                "name": "Minha lista Presente",
                "deliveryToOwner": false
              }
            },
            "payments": [
              {
                "id": "2D00FEBB5D7A43D598A99CFC43ADF158",
                "method": "CreditCard",
                "name": "Visa",
                "value": 63.98,
                "installments": 3,
                "details": {
                  "bin": "507860",
                  "lastDigits": "2798",
                  "holder": "John Doe",
                  "address": {
                    "country": "BRA",
                    "street": "Rua Praia de Botafogo",
                    "number": "518",
                    "complement": "2o. andar",
                    "neighborhood": "Botafogo",
                    "postalCode": "22250-040",
                    "city": "Rio de Janeiro",
                    "state": "RJ"
                  }
                }
              },
              {
                "id": "04D430E517B2494FBC3DF7721CCDACC7",
                "method": "GiftCard",
                "value": 10.01,
                "installments": 1
              }
            ],
            "hook": "https://hook.vtex.com/notifyIfChangeStatus"
          }
        },
        "ApproveAntifraudAnalysisResponse": {
          "title": "ApproveAntifraudAnalysisResponse",
          "required": [
            "id",
            "status",
            "fraudRiskPercentage",
            "analysisType",
            "responses"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "fraudRiskPercentage": {
              "type": "number"
            },
            "analysisType": {
              "type": "string"
            },
            "responses": {
              "type": "string",
              "nullable": true
            }
          },
          "example": {
            "id": "D3AA1FC8372E430E8236649DB5EBD08E",
            "status": "approved",
            "fraudRiskPercentage": 0.0,
            "analysisType": "authomatic",
            "responses": null
          }
        },
        "GetAntifraudStatus": {
          "title": "GetAntifraudStatus",
          "required": [
            "id",
            "tid",
            "status",
            "fraudRiskPercentage",
            "analysisType",
            "responses"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "tid": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "fraudRiskPercentage": {
              "type": "number"
            },
            "analysisType": {
              "type": "string"
            },
            "responses": {
              "$ref": "#/components/schemas/Responses"
            }
          },
          "example": {
            "id": "BF900B7CB15147F98D91208989100A05",
            "tid": "3146f46162f042f483cd3979ba4e8317",
            "status": "approved",
            "fraudRiskPercentage": 5.01,
            "analysisType": "authomatic",
            "responses": {
              "foo": "anyFoo",
              "custom": "customAnyValue"
            }
          }
        },
        "GetPaymentMethodsSupported": {
          "title": "GetPaymentMethodsSupported",
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "example": {
            "name": "CreditCard"
          }
        },
        "1.RetrieveTokenRequest": {
          "title": "1.RetrieveTokenRequest",
          "required": [
            "applicationId",
            "returnUrl"
          ],
          "type": "object",
          "properties": {
            "applicationId": {
              "type": "string"
            },
            "returnUrl": {
              "type": "string"
            }
          },
          "example": {
            "applicationId": "vtex",
            "returnUrl": "https://storevtex.vtexpayments.com/?authorizationCode="
          }
        },
        "1.RetrieveToken": {
          "title": "1.RetrieveToken",
          "required": [
            "applicationId",
            "token"
          ],
          "type": "object",
          "properties": {
            "applicationId": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "example": {
            "applicationId": "vtex",
            "token": "358a5bea-07d0-4122-888a-54ab70b5f02f"
          }
        },
        "3.GetCredentials": {
          "title": "3.GetCredentials",
          "required": [
            "applicationId",
            "appKey",
            "appToken"
          ],
          "type": "object",
          "properties": {
            "applicationId": {
              "type": "string"
            },
            "appKey": {
              "type": "string"
            },
            "appToken": {
              "type": "string"
            }
          },
          "example": {
            "applicationId": "vtex",
            "appKey": "c5a5e3f1-4a77-4a00-8b53-0d1adb3e9628",
            "appToken": "57ea254d-f3d3-488d-88d7-129766037ed1"
          }
        }
      }
    },
    "tags": [
      {
        "name": "Antifraud  Flow"
      },
      {
        "name": "OAuth Flow"
      }
    ]
  }